{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "API"
  },
  "servers": [
    {
      "url": "https://api.lunarclientprod.com",
      "description": "Production"
    },
    {
      "url": "https://api.lunarclientdev.com",
      "description": "Development"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "name": "Authorization",
        "scheme": "bearer",
        "in": "header",
        "description": "Bearer token"
      }
    },
    "schemas": {
      "FeatureFlag": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string",
            "description": "Identifier of the feature"
          },
          "value": {
            "type": "boolean",
            "description": "If this feature is active or not"
          }
        },
        "required": [
          "identifier",
          "value"
        ],
        "additionalProperties": false
      },
      "SentryFilter": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string",
            "description": "Identifier of the filter"
          },
          "regex": {
            "type": "string",
            "description": "Regex to match events with"
          }
        },
        "required": [
          "identifier",
          "regex"
        ],
        "additionalProperties": false
      },
      "StoreBasketGiftCard": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Unique identifier for the gift card"
          },
          "basket": {
            "type": "number",
            "description": "Basket ID this gift card is applied to"
          },
          "deduction": {
            "type": "string",
            "description": "Amount deducted from the gift card"
          },
          "giftcard": {
            "type": "number",
            "description": "Gift card identifier"
          },
          "giftcard_id": {
            "type": "number",
            "description": "Gift card ID"
          },
          "last_consideration": {
            "type": "object",
            "properties": {
              "date": {
                "type": "string",
                "description": "Date of the last consideration"
              },
              "consideration": {
                "type": "number",
                "description": "Consideration amount"
              }
            },
            "required": [
              "date",
              "consideration"
            ],
            "description": "Last consideration details"
          }
        },
        "required": [
          "id",
          "basket",
          "deduction",
          "giftcard",
          "giftcard_id",
          "last_consideration"
        ]
      },
      "StoreBasketCoupon": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Unique identifier for the basket coupon"
          },
          "basket": {
            "type": "number",
            "description": "Basket ID this coupon is applied to"
          },
          "coupon": {
            "type": "number",
            "description": "Coupon ID"
          },
          "meta": {
            "type": "object",
            "properties": {
              "savings": {
                "type": "number",
                "description": "Total savings amount from this coupon"
              }
            },
            "required": [
              "savings"
            ],
            "description": "Coupon metadata including savings"
          },
          "related_coupon": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "description": "Unique identifier for the coupon"
              },
              "account": {
                "type": "number",
                "description": "Account ID associated with the coupon"
              },
              "code": {
                "type": "string",
                "description": "Coupon code"
              },
              "type": {
                "type": "string",
                "description": "Type of coupon (e.g., 'cart')"
              },
              "discount_type": {
                "type": "string",
                "description": "Type of discount (e.g., 'percentage', 'amount')"
              },
              "expire_type": {
                "type": "string",
                "description": "Expiration type (e.g., 'limit', 'timestamp')"
              },
              "minimum": {
                "type": "number",
                "description": "Minimum purchase amount required"
              },
              "user_limit": {
                "type": "number",
                "description": "User-specific usage limit"
              },
              "start_time": {
                "type": "number",
                "description": "Coupon start time timestamp"
              },
              "discount_percentage": {
                "type": "number",
                "description": "Discount percentage amount"
              },
              "discount_amount": {
                "type": "number",
                "description": "Fixed discount amount"
              },
              "expire_limit": {
                "type": "number",
                "nullable": true,
                "description": "Expiration limit (null if not applicable)"
              },
              "expire_timestamp": {
                "type": "number",
                "nullable": true,
                "description": "Expiration timestamp (null if not applicable)"
              },
              "basket_type": {
                "type": "string",
                "description": "Basket type restriction (e.g., 'both', 'single', 'subscription')"
              },
              "discount_application_method": {
                "type": "number",
                "description": "Method for applying the discount"
              },
              "note": {
                "type": "string",
                "description": "Additional notes about the coupon"
              },
              "username_id": {
                "type": "number",
                "nullable": true,
                "description": "Specific username ID restriction (null if not applicable)"
              },
              "auto_generated": {
                "type": "number",
                "description": "Whether the coupon was auto-generated"
              }
            },
            "required": [
              "id",
              "account",
              "code",
              "type",
              "discount_type",
              "expire_type",
              "minimum",
              "user_limit",
              "start_time",
              "discount_percentage",
              "discount_amount",
              "expire_limit",
              "expire_timestamp",
              "basket_type",
              "discount_application_method",
              "note",
              "username_id",
              "auto_generated"
            ],
            "description": "Detailed coupon information"
          }
        },
        "required": [
          "id",
          "basket",
          "coupon",
          "meta",
          "related_coupon"
        ]
      },
      "StoreBasketRow": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Unique identifier for this basket row"
          },
          "basket": {
            "type": "number",
            "description": "Basket ID this row belongs to"
          },
          "package": {
            "type": "number",
            "description": "Package ID for this item"
          },
          "override": {
            "type": "number",
            "description": "Price override amount if applicable"
          },
          "quantity": {
            "type": "number",
            "description": "Quantity of this item in the basket"
          },
          "server": {
            "type": "number",
            "nullable": true,
            "description": "Specific server ID for this item (null if not server-specific)"
          },
          "price": {
            "type": "number",
            "description": "Final price for this row including quantity"
          },
          "gift_username_id": {
            "type": "number",
            "nullable": true,
            "description": "User ID if this item is being gifted (null if not a gift)"
          },
          "options": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "nullable": true,
              "description": "Option value (can be any type)"
            },
            "description": "Configuration options for this item"
          },
          "recurring": {
            "type": "boolean",
            "description": "Whether this item has recurring billing"
          },
          "recurring_period": {
            "type": "string",
            "nullable": true,
            "description": "Billing period for recurring items"
          },
          "recurring_next_payment_date": {
            "type": "string",
            "nullable": true,
            "description": "Date of next recurring payment"
          },
          "meta": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Display name of the package or item"
              },
              "rowprice": {
                "type": "number",
                "description": "Individual row price for this item"
              },
              "initialprice": {
                "type": "number",
                "description": "Original price before any modifications"
              },
              "isCumulative": {
                "type": "boolean",
                "description": "Whether this item's benefits stack with others"
              },
              "requiredPackages": {
                "type": "array",
                "items": {
                  "type": "number",
                  "description": "Package IDs required for this item"
                },
                "description": "Array of package IDs required before purchasing this item"
              },
              "requiresAny": {
                "type": "boolean",
                "description": "Whether only one of the required packages is needed (true) or all (false)"
              },
              "category": {
                "type": "number",
                "description": "Category ID this item belongs to"
              },
              "producesGiftCard": {
                "type": "boolean",
                "description": "Whether purchasing this item generates a gift card"
              },
              "allowsGiftCards": {
                "type": "boolean",
                "description": "Whether gift cards can be used to purchase this item"
              },
              "servers": {
                "type": "array",
                "items": {
                  "type": "number",
                  "description": "Array of server IDs where this item is available"
                },
                "description": "Array of server IDs where this item is available"
              },
              "limits": {
                "type": "object",
                "properties": {
                  "user": {
                    "type": "object",
                    "properties": {
                      "enabled": {
                        "type": "boolean",
                        "description": "Whether user-specific purchase limits are enabled"
                      },
                      "timestamp": {
                        "type": "number",
                        "description": "Timestamp when the limit was set or last updated"
                      },
                      "limit": {
                        "type": "number",
                        "description": "Maximum purchase limit for the user"
                      }
                    },
                    "required": [
                      "enabled",
                      "timestamp",
                      "limit"
                    ],
                    "description": "User-specific purchase limits"
                  },
                  "global": {
                    "type": "object",
                    "properties": {
                      "enabled": {
                        "type": "boolean",
                        "description": "Whether global purchase limits are enabled"
                      },
                      "timestamp": {
                        "type": "number",
                        "description": "Timestamp when the global limit was set or last updated"
                      },
                      "limit": {
                        "type": "number",
                        "description": "Maximum global purchase limit"
                      }
                    },
                    "required": [
                      "enabled",
                      "timestamp",
                      "limit"
                    ],
                    "description": "Global purchase limits"
                  },
                  "packageExpiryTime": {
                    "type": "number",
                    "description": "Timestamp when the package expires"
                  }
                },
                "required": [
                  "user",
                  "global",
                  "packageExpiryTime"
                ],
                "description": "Purchase limits and restrictions for this item"
              },
              "hasDeliverables": {
                "type": "boolean",
                "description": "Whether this item has digital deliverables"
              },
              "deliverableTypes": {
                "type": "array",
                "items": {
                  "type": "string",
                  "description": "Deliverable type"
                },
                "description": "Types of deliverables included with this item"
              },
              "downloadLink": {
                "type": "string",
                "description": "Direct download link for deliverables"
              },
              "hasSellerProtection": {
                "type": "boolean",
                "description": "Whether this item includes seller protection"
              },
              "itemType": {
                "type": "string",
                "nullable": true,
                "description": "Specific type classification of the item"
              },
              "revenue_share": {
                "type": "array",
                "items": {
                  "type": "number",
                  "description": "Revenue share percentage"
                },
                "description": "Revenue sharing configuration for this item"
              },
              "image": {
                "type": "string",
                "nullable": true,
                "description": "URL to the item's display image"
              },
              "repeat_period": {
                "type": "string",
                "nullable": true,
                "description": "Billing period for recurring items"
              },
              "tiered": {
                "type": "boolean",
                "description": "Whether this item uses tiered pricing"
              },
              "package_type": {
                "type": "string",
                "enum": [
                  "single",
                  "subscription"
                ],
                "description": "Whether this is a one-time purchase or subscription"
              },
              "realprice": {
                "type": "number",
                "description": "Actual calculated price after all modifications"
              },
              "taxPerItem": {
                "type": "object",
                "properties": {
                  "basket_item_id": {
                    "type": "number",
                    "description": "Unique identifier for the basket item"
                  },
                  "tax": {
                    "type": "number",
                    "description": "Tax amount applied to this specific item"
                  },
                  "price": {
                    "type": "number",
                    "description": "Base price of the item before tax"
                  },
                  "total": {
                    "type": "number",
                    "description": "Total price including tax for this item"
                  }
                },
                "required": [
                  "basket_item_id",
                  "tax",
                  "price",
                  "total"
                ],
                "description": "Tax breakdown specific to this item"
              }
            },
            "required": [
              "name",
              "rowprice",
              "initialprice",
              "isCumulative",
              "requiredPackages",
              "requiresAny",
              "category",
              "producesGiftCard",
              "allowsGiftCards",
              "servers",
              "limits",
              "hasDeliverables",
              "deliverableTypes",
              "downloadLink",
              "hasSellerProtection",
              "itemType",
              "revenue_share",
              "image",
              "repeat_period",
              "tiered",
              "package_type",
              "realprice",
              "taxPerItem"
            ],
            "description": "Detailed metadata about this item"
          },
          "custom": {
            "nullable": true,
            "description": "Custom data associated with this item"
          },
          "image_url": {
            "type": "string",
            "nullable": true,
            "description": "URL to the item's image"
          },
          "is_recurring": {
            "type": "boolean",
            "description": "Whether this item is part of a recurring subscription"
          },
          "recurring_price": {
            "type": "number",
            "nullable": true,
            "description": "Price for recurring billing cycles"
          }
        },
        "required": [
          "id",
          "basket",
          "package",
          "override",
          "quantity",
          "server",
          "price",
          "gift_username_id",
          "options",
          "recurring",
          "recurring_period",
          "recurring_next_payment_date",
          "meta",
          "image_url",
          "is_recurring",
          "recurring_price"
        ]
      },
      "StoreBasket": {
        "type": "object",
        "properties": {
          "ident": {
            "type": "string",
            "description": "Unique identifier for this basket"
          },
          "expire": {
            "type": "string",
            "description": "Expiration date and time for this basket"
          },
          "price": {
            "type": "number",
            "description": "Total price of all items in the basket"
          },
          "priceDetails": {
            "type": "object",
            "properties": {
              "fullPrice": {
                "type": "number",
                "description": "Full price before any discounts or modifications"
              },
              "subTotal": {
                "type": "number",
                "description": "Subtotal after discounts but before tax"
              },
              "discounts": {
                "type": "array",
                "items": {
                  "nullable": true
                },
                "description": "Array of discount objects applied to the basket"
              },
              "total": {
                "type": "number",
                "description": "Final total amount including all taxes and fees"
              },
              "surcharges": {
                "type": "array",
                "items": {
                  "nullable": true
                },
                "description": "Array of additional charges or fees"
              },
              "tax": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name or type of the tax being applied"
                  },
                  "taxAmount": {
                    "type": "number",
                    "description": "Total tax amount for the transaction"
                  },
                  "taxableAmount": {
                    "type": "number",
                    "description": "Total amount subject to taxation"
                  },
                  "documentCode": {
                    "type": "string",
                    "nullable": true,
                    "description": "Tax document or reference code"
                  },
                  "reportingTax": {
                    "type": "object",
                    "properties": {
                      "baseCurrency": {
                        "type": "string",
                        "description": "Base currency code for the transaction"
                      },
                      "reportingCurrency": {
                        "type": "string",
                        "description": "Currency code used for reporting purposes"
                      },
                      "exchangeRate": {
                        "type": "number",
                        "description": "Exchange rate between base and reporting currencies"
                      },
                      "exchangeRateSource": {
                        "type": "string",
                        "description": "Source or provider of the exchange rate"
                      },
                      "taxAmount": {
                        "type": "number",
                        "description": "Tax amount in the reporting currency"
                      },
                      "taxableAmount": {
                        "type": "number",
                        "description": "Taxable amount in the reporting currency"
                      }
                    },
                    "required": [
                      "baseCurrency",
                      "reportingCurrency",
                      "exchangeRate",
                      "exchangeRateSource",
                      "taxAmount",
                      "taxableAmount"
                    ],
                    "description": "Tax information in reporting currency"
                  },
                  "taxPerItem": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "basket_item_id": {
                          "type": "number",
                          "description": "Unique identifier for the basket item"
                        },
                        "tax": {
                          "type": "number",
                          "description": "Tax amount applied to this specific item"
                        },
                        "price": {
                          "type": "number",
                          "description": "Base price of the item before tax"
                        },
                        "total": {
                          "type": "number",
                          "description": "Total price including tax for this item"
                        }
                      },
                      "required": [
                        "basket_item_id",
                        "tax",
                        "price",
                        "total"
                      ]
                    },
                    "description": "Individual tax breakdown per basket item"
                  },
                  "taxMode": {
                    "type": "string",
                    "description": "Mode or method of tax calculation"
                  }
                },
                "required": [
                  "name",
                  "taxAmount",
                  "taxableAmount",
                  "documentCode",
                  "reportingTax",
                  "taxPerItem",
                  "taxMode"
                ],
                "description": "Comprehensive tax information for the transaction"
              },
              "balance": {
                "type": "number",
                "description": "Outstanding balance or amount due"
              },
              "sales": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number",
                      "description": "Unique identifier for the sale"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name or title of the sale"
                    },
                    "package_id": {
                      "type": "number",
                      "description": "Package ID associated with this sale"
                    },
                    "discountAmount": {
                      "type": "number",
                      "description": "Discount amount applied by this sale"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "sale"
                      ],
                      "description": "Type identifier for sale entries"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "package_id",
                    "discountAmount",
                    "type"
                  ]
                },
                "description": "Array of sales or promotional offers applied"
              },
              "giftcards": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StoreBasketGiftCard"
                },
                "description": "Array of gift card objects used in payment"
              },
              "recurring": {
                "nullable": true,
                "description": "Recurring payment information (null if not applicable)"
              },
              "roundUp": {
                "nullable": true,
                "description": "Round up charity donation information (null if not applicable)"
              },
              "currencyCode": {
                "type": "string",
                "description": "ISO currency code for the transaction"
              },
              "currencySymbol": {
                "type": "string",
                "description": "Currency symbol for display purposes"
              }
            },
            "required": [
              "fullPrice",
              "subTotal",
              "discounts",
              "total",
              "surcharges",
              "tax",
              "balance",
              "sales",
              "giftcards",
              "recurring",
              "roundUp",
              "currencyCode",
              "currencySymbol"
            ],
            "description": "Detailed breakdown of pricing and costs"
          },
          "type": {
            "nullable": true,
            "description": "Basket type classification (null if not applicable)"
          },
          "isPaymentMethodUpdate": {
            "type": "boolean",
            "description": "Whether this basket is for updating payment methods"
          },
          "returnUrl": {
            "type": "string",
            "nullable": true,
            "description": "URL to return to after checkout (null if not specified)"
          },
          "complete": {
            "type": "boolean",
            "description": "Whether the basket checkout has been completed"
          },
          "tax": {
            "type": "number",
            "description": "Total tax amount for the basket"
          },
          "username": {
            "type": "string",
            "description": "Username of the customer"
          },
          "discounts": {
            "nullable": true,
            "description": "Applied discounts (null if none)"
          },
          "coupons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StoreBasketCoupon"
            },
            "description": "Array of coupon objects applied to the basket"
          },
          "giftcards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StoreBasketGiftCard"
            },
            "description": "Array of gift card objects used in this basket"
          },
          "address": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Full name of the customer"
              },
              "first_name": {
                "type": "string",
                "description": "Customer's first name"
              },
              "last_name": {
                "type": "string",
                "description": "Customer's last name"
              },
              "address": {
                "type": "string",
                "description": "Street address or location"
              },
              "email": {
                "type": "string",
                "description": "Customer's email address"
              },
              "state_id": {
                "type": "string",
                "nullable": true,
                "description": "State or province identifier (null if not applicable)"
              },
              "country": {
                "type": "string",
                "description": "Country name or code"
              },
              "postal_code": {
                "type": "string",
                "description": "Postal or ZIP code"
              }
            },
            "required": [
              "name",
              "first_name",
              "last_name",
              "address",
              "email",
              "state_id",
              "country",
              "postal_code"
            ],
            "description": "Customer's billing and shipping address"
          },
          "email_immutable": {
            "type": "boolean",
            "description": "Whether the email address can be changed"
          },
          "actions": {
            "nullable": true,
            "description": "Available actions for this basket (null if none)"
          },
          "game_currency": {
            "nullable": true,
            "description": "In-game currency information (null if not applicable)"
          },
          "tebex_account_id": {
            "nullable": true,
            "description": "Tebex account identifier (null if not linked)"
          },
          "verified": {
            "nullable": true,
            "description": "Verification status (null if not applicable)"
          },
          "rows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StoreBasketRow"
            },
            "description": "Array of items in the basket"
          },
          "recurring_items": {
            "type": "array",
            "items": {
              "nullable": true
            },
            "description": "Array of recurring subscription items"
          },
          "fingerprint": {
            "type": "string",
            "description": "Browser or device fingerprint for security"
          },
          "creator_code": {
            "type": "string",
            "description": "Creator or referral code used"
          },
          "roundup": {
            "nullable": true,
            "description": "Charity round-up donation (null if not applicable)"
          },
          "cancel_url": {
            "type": "string",
            "description": "URL to redirect to if checkout is cancelled"
          },
          "complete_url": {
            "type": "string",
            "description": "URL to redirect to after successful checkout"
          },
          "complete_auto_redirect": {
            "type": "boolean",
            "description": "Whether to automatically redirect after completion"
          },
          "custom": {
            "type": "object",
            "additionalProperties": {
              "nullable": true,
              "description": "Custom value (can be any type)"
            },
            "description": "Custom data associated with this basket"
          },
          "links": {
            "type": "object",
            "properties": {
              "payment": {
                "type": "string",
                "description": "URL link to the payment processing page"
              }
            },
            "required": [
              "payment"
            ],
            "description": "Important URLs related to this basket"
          },
          "payment": {
            "type": "object",
            "properties": {
              "txnId": {
                "type": "string",
                "description": "Unique transaction identifier"
              },
              "date": {
                "type": "string",
                "description": "Date and time of the payment"
              },
              "email": {
                "type": "string",
                "description": "Email address associated with the payment"
              },
              "name": {
                "type": "string",
                "description": "Name of the person making the payment"
              },
              "currency": {
                "type": "string",
                "description": "Currency code for the payment"
              },
              "country": {
                "type": "string",
                "description": "Country where the payment was made"
              },
              "amount": {
                "type": "number",
                "description": "Total payment amount"
              },
              "checkoutCurrency": {
                "type": "string",
                "description": "Currency used during checkout process"
              },
              "discordLoginUrl": {
                "type": "string",
                "nullable": true,
                "description": "URL for Discord login integration (null if not applicable)"
              },
              "completeUrl": {
                "type": "string",
                "description": "URL to redirect to after payment completion"
              },
              "status": {
                "type": "string",
                "description": "Current status of the payment"
              },
              "canPaymentMethodBeSaved": {
                "type": "boolean",
                "description": "Whether the payment method can be saved for future use"
              },
              "paymentMethodName": {
                "type": "string",
                "description": "Name or type of the payment method used"
              },
              "savePaymentMethodStep": {
                "type": "string",
                "nullable": true,
                "description": "Step in the save payment method process (null if not applicable)"
              },
              "paidByVerifiedCustomer": {
                "type": "boolean",
                "description": "Whether the payment was made by a verified customer"
              }
            },
            "required": [
              "txnId",
              "date",
              "email",
              "name",
              "currency",
              "country",
              "amount",
              "checkoutCurrency",
              "discordLoginUrl",
              "completeUrl",
              "status",
              "canPaymentMethodBeSaved",
              "paymentMethodName",
              "savePaymentMethodStep",
              "paidByVerifiedCustomer"
            ],
            "description": "Payment processing information"
          }
        },
        "required": [
          "ident",
          "expire",
          "price",
          "priceDetails",
          "type",
          "isPaymentMethodUpdate",
          "returnUrl",
          "complete",
          "tax",
          "username",
          "discounts",
          "coupons",
          "giftcards",
          "address",
          "email_immutable",
          "actions",
          "game_currency",
          "tebex_account_id",
          "verified",
          "rows",
          "recurring_items",
          "fingerprint",
          "creator_code",
          "roundup",
          "cancel_url",
          "complete_url",
          "complete_auto_redirect",
          "custom",
          "links",
          "payment"
        ],
        "description": "The basket after the operation"
      },
      "LaunchTypeArtifact": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the artifact"
          },
          "sha1": {
            "type": "string",
            "description": "Hash of the artifact asset"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "description": "URL of the artifact asset"
          },
          "differentialUrl": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "description": "Differential URL of the artifact asset (to use if previous hash exists)"
          },
          "type": {
            "type": "string",
            "enum": [
              "CLASS_PATH",
              "EXTERNAL_FILE",
              "NATIVES"
            ],
            "description": "Type of the artifact asset"
          },
          "size": {
            "type": "number",
            "description": "Size of the artifact, in bytes"
          },
          "mtime": {
            "type": "number",
            "description": "Last modification time of the artifact, in seconds since epoch"
          }
        },
        "required": [
          "name",
          "sha1",
          "url",
          "differentialUrl",
          "type",
          "size",
          "mtime"
        ],
        "additionalProperties": false,
        "description": "Artifact information relating to specific launch permutation"
      },
      "LauncherLaunchLicense": {
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "description": "File of the license"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "description": "URL location of the license"
          },
          "sha1": {
            "type": "string",
            "description": "Hash of the license"
          },
          "size": {
            "type": "number",
            "description": "Size of the license, in bytes"
          },
          "mtime": {
            "type": "number",
            "description": "Last modification time of the license, in seconds since epoch"
          }
        },
        "required": [
          "file",
          "url",
          "sha1",
          "size",
          "mtime"
        ],
        "additionalProperties": false,
        "description": "Launch License"
      },
      "LauncherProfile": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Local profile ID"
          },
          "name": {
            "type": "string",
            "description": "Name of the profile"
          },
          "modrinth": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Modrinth Project ID"
              },
              "version_id": {
                "type": "string",
                "description": "Version ID of the Modrinth Project"
              }
            },
            "required": [
              "id"
            ],
            "additionalProperties": false,
            "description": "Information about the Modrinth-linked modpack"
          }
        },
        "required": [
          "id",
          "name"
        ],
        "additionalProperties": false,
        "description": "The profile attempting to be launched"
      },
      "LogUploadOutputFile": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the file on the player's machine",
            "example": "main.log"
          },
          "uploadUrl": {
            "type": "string",
            "format": "uri",
            "description": "URL the client should use to PUT the file's contents"
          }
        },
        "required": [
          "name",
          "uploadUrl"
        ],
        "additionalProperties": false,
        "description": "File that should be uploaded"
      },
      "LogUploadInputFile": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the file on the player's machine",
            "example": "main.log"
          }
        },
        "required": [
          "name"
        ],
        "additionalProperties": false
      },
      "LauncherVersionCarouselImage": {
        "type": "object",
        "properties": {
          "image": {
            "type": "string",
            "format": "uri",
            "description": "Image of the slide"
          },
          "title": {
            "type": "string",
            "description": "Title shown within the image"
          }
        },
        "required": [
          "image",
          "title"
        ],
        "additionalProperties": false
      },
      "LauncherSubversionModule": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier of the module"
          },
          "default": {
            "type": "boolean",
            "description": "Whether this is the default module within the parent subversion"
          },
          "name": {
            "type": "string",
            "description": "Display name of the module"
          },
          "description": {
            "type": "string",
            "description": "Description of the module"
          },
          "credits": {
            "type": "string",
            "nullable": true,
            "description": "Author of the module"
          },
          "image": {
            "type": "string",
            "format": "uri",
            "description": "Icon displayed with the module"
          },
          "launchButtonImage": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "description": "Icon displayed on the launch button next to the module name"
          },
          "launchButtonName": {
            "type": "string",
            "nullable": true,
            "description": "Name displayed on the launch button"
          },
          "loaders": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "Name of the loader"
            },
            "description": "Loaders that are compatible with this module"
          },
          "sort": {
            "type": "number",
            "description": "Order of the module within subversion"
          }
        },
        "required": [
          "id",
          "default",
          "name",
          "description",
          "credits",
          "image",
          "launchButtonImage",
          "launchButtonName",
          "loaders",
          "sort"
        ],
        "additionalProperties": false
      },
      "LauncherVanillaSubversion": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier of the subversion"
          },
          "modules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LauncherSubversionModule"
            },
            "description": "Modules associated with this subversion"
          },
          "default": {
            "type": "boolean",
            "description": "Whether this is the default subversion within the parent"
          }
        },
        "required": [
          "id",
          "modules",
          "default"
        ],
        "additionalProperties": false
      },
      "LauncherVanillaVersion": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier of the version"
          },
          "name": {
            "type": "string",
            "description": "Display name of the version (from Mojang)",
            "example": "The Bountiful Update"
          },
          "description": {
            "type": "string",
            "description": "Blurb about the update"
          },
          "carousel": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LauncherVersionCarouselImage"
            },
            "description": "List of slides that will play above the description"
          },
          "default": {
            "type": "boolean",
            "description": "Whether this is the version that should be selected on first install"
          },
          "releaseDate": {
            "type": "string",
            "description": "Date that Mojang released this parent version"
          },
          "images": {
            "type": "object",
            "properties": {
              "background": {
                "type": "string",
                "format": "uri",
                "description": "Image shown behind version text"
              },
              "foreground": {
                "type": "string",
                "format": "uri",
                "description": "Image shown infront of version text"
              },
              "icon": {
                "type": "string",
                "format": "uri",
                "description": "Image shown in list view of versions page"
              }
            },
            "required": [
              "background",
              "foreground",
              "icon"
            ],
            "additionalProperties": false,
            "description": "Images that are shown with this version listing"
          },
          "subversions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LauncherVanillaSubversion"
            },
            "description": "Subversions associated with this parent version"
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "carousel",
          "default",
          "releaseDate",
          "images",
          "subversions"
        ],
        "additionalProperties": false
      },
      "LauncherSubversionAssets": {
        "type": "object",
        "properties": {
          "sha1": {
            "type": "string",
            "description": "Hash of the asset"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "description": "URL of the asset location"
          },
          "id": {
            "type": "string",
            "description": "Identifier of the asset"
          }
        },
        "required": [
          "sha1",
          "url",
          "id"
        ],
        "additionalProperties": false,
        "description": "Assets that need to be downloaded with this subversion"
      },
      "LauncherSubversion": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier of the subversion"
          },
          "default": {
            "type": "boolean",
            "description": "Whether this is the default subversion within the parent"
          },
          "assets": {
            "$ref": "#/components/schemas/LauncherSubversionAssets"
          },
          "modules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LauncherSubversionModule"
            },
            "description": "Modules that are playable with this subversion"
          }
        },
        "required": [
          "id",
          "default",
          "assets",
          "modules"
        ],
        "additionalProperties": false
      },
      "LauncherVersion": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier of the version"
          },
          "name": {
            "type": "string",
            "description": "Display name of the version (from Mojang)",
            "example": "The Bountiful Update"
          },
          "description": {
            "type": "string",
            "description": "Blurb about the update"
          },
          "carousel": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LauncherVersionCarouselImage"
            },
            "description": "List of slides that will play above the description"
          },
          "default": {
            "type": "boolean",
            "description": "Whether this is the version that should be selected on first install"
          },
          "releaseDate": {
            "type": "string",
            "description": "Date that Mojang released this parent version"
          },
          "images": {
            "type": "object",
            "properties": {
              "background": {
                "type": "string",
                "format": "uri",
                "description": "Image shown behind version text"
              },
              "foreground": {
                "type": "string",
                "format": "uri",
                "description": "Image shown infront of version text"
              },
              "icon": {
                "type": "string",
                "format": "uri",
                "description": "Image shown in list view of versions page"
              }
            },
            "required": [
              "background",
              "foreground",
              "icon"
            ],
            "additionalProperties": false,
            "description": "Images that are shown with this version listing"
          },
          "subversions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LauncherSubversion"
            },
            "description": "Subversions associated with this parent version"
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "carousel",
          "default",
          "releaseDate",
          "images",
          "subversions"
        ],
        "additionalProperties": false
      },
      "RecommendedLibrary": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Identifier of the library",
            "example": "FABRIC_LOADER"
          },
          "version": {
            "type": "string",
            "description": "Version of the library",
            "example": "0.15.6"
          }
        },
        "required": [
          "name",
          "version"
        ],
        "additionalProperties": false
      },
      "LauncherBadlionSubversion": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier of the subversion"
          },
          "modules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LauncherSubversionModule"
            },
            "description": "Modules associated with this subversion"
          },
          "default": {
            "type": "boolean",
            "description": "Whether this is the default subversion within the parent"
          }
        },
        "required": [
          "id",
          "modules",
          "default"
        ],
        "additionalProperties": false
      },
      "LauncherBadlionVersion": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier of the version"
          },
          "name": {
            "type": "string",
            "description": "Display name of the version (from Mojang)",
            "example": "The Bountiful Update"
          },
          "description": {
            "type": "string",
            "description": "Blurb about the update"
          },
          "carousel": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LauncherVersionCarouselImage"
            },
            "description": "List of slides that will play above the description"
          },
          "default": {
            "type": "boolean",
            "description": "Whether this is the version that should be selected on first install"
          },
          "releaseDate": {
            "type": "string",
            "description": "Date that Mojang released this parent version"
          },
          "images": {
            "type": "object",
            "properties": {
              "background": {
                "type": "string",
                "format": "uri",
                "description": "Image shown behind version text"
              },
              "foreground": {
                "type": "string",
                "format": "uri",
                "description": "Image shown infront of version text"
              },
              "icon": {
                "type": "string",
                "format": "uri",
                "description": "Image shown in list view of versions page"
              }
            },
            "required": [
              "background",
              "foreground",
              "icon"
            ],
            "additionalProperties": false,
            "description": "Images that are shown with this version"
          },
          "subversions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LauncherBadlionSubversion"
            },
            "description": "Subversions associated with this parent version"
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "carousel",
          "default",
          "releaseDate",
          "images",
          "subversions"
        ],
        "additionalProperties": false
      },
      "Ad": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of the advertisement"
          },
          "placement": {
            "type": "string",
            "enum": [
              "home",
              "mission-control",
              "explore-mods",
              "explore-mods-curseforge"
            ],
            "description": "Placement of the advertisement"
          },
          "type": {
            "type": "string",
            "enum": [
              "video",
              "image"
            ],
            "description": "Type of advertisement"
          },
          "media_asset_url": {
            "type": "string",
            "format": "uri",
            "description": "URL of the media asset"
          },
          "media_target_url": {
            "type": "string",
            "format": "uri",
            "description": "URL of the target page when the media asset is clicked"
          },
          "cta_icon_url": {
            "type": "string",
            "format": "uri",
            "description": "URL of the call to action icon"
          },
          "cta_text": {
            "type": "string",
            "description": "Text of the call to action"
          },
          "cta_button_text": {
            "type": "string",
            "description": "Text of the call to action button"
          },
          "cta_button_url": {
            "type": "string",
            "format": "uri",
            "description": "URL of the call to action button"
          },
          "show_to_lunar_plus": {
            "type": "boolean",
            "description": "Whether to show the ad to Lunar+ users"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "description": "Start time of the ad"
          },
          "end_time": {
            "type": "string",
            "format": "date-time",
            "description": "End time of the ad"
          }
        },
        "required": [
          "id",
          "placement",
          "type",
          "media_asset_url",
          "media_target_url",
          "cta_icon_url",
          "cta_text",
          "cta_button_text",
          "cta_button_url",
          "show_to_lunar_plus",
          "start_time"
        ],
        "additionalProperties": false
      },
      "LauncherAlert": {
        "type": "object",
        "nullable": true,
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of the alert"
          },
          "text": {
            "type": "string",
            "description": "Contents of the alert"
          },
          "color": {
            "type": "string",
            "enum": [
              "RED",
              "BLUE",
              "PURPLE",
              "TWITCH",
              "YOUTUBE",
              "DISCORD",
              "TWITTER",
              "YOUTOOZ"
            ],
            "description": "Color variant of the alert"
          },
          "link": {
            "type": "string",
            "format": "uri",
            "description": "Whether the alert is clickable and should open up a link"
          }
        },
        "required": [
          "id",
          "text",
          "color"
        ],
        "additionalProperties": false,
        "description": "Alert to display to the user"
      },
      "LauncherBlogPost": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of the blog post (primarily for Analytics)"
          },
          "image": {
            "type": "string",
            "format": "uri",
            "description": "Image to display with the blog post"
          },
          "link": {
            "type": "string",
            "format": "uri",
            "description": "URL that is opened upon clicking"
          },
          "badge": {
            "type": "string",
            "nullable": true,
            "enum": [
              "LIMITED_TIME",
              "INCLUDES_REWARD"
            ],
            "description": "Type of badge to display"
          },
          "hash": {
            "type": "string",
            "description": "Hash associated with the contents of the blog post (for read/unread indicators)"
          }
        },
        "required": [
          "title"
        ],
        "additionalProperties": false
      },
      "LauncherNavItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier for navigiation item"
          },
          "image": {
            "type": "string",
            "description": "Image to display as icon"
          },
          "destination": {
            "type": "string",
            "description": "Where the navigation item will take users (can be a deep link)"
          },
          "tooltip": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "description": "Title of the tooltip"
              },
              "subtitle": {
                "type": "string",
                "description": "Subtitle of the tooltip"
              }
            },
            "required": [
              "title"
            ],
            "additionalProperties": false,
            "description": "Tooltip to show on hover"
          }
        },
        "required": [
          "id"
        ],
        "additionalProperties": false
      },
      "LauncherServersCTA": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "description": "URL that is opened in tab on click"
          }
        },
        "required": [
          "url"
        ],
        "additionalProperties": false,
        "description": "Servers Page CTA information"
      },
      "ServerMappingsModpack": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Modrinth ID of the modpack"
          },
          "recommendedVersion": {
            "type": "string",
            "description": "The recommended Modrinth Modpack version. If blank, will use latest version."
          },
          "recommendedReleaseChannel": {
            "type": "string",
            "description": "If blank, will use 'Release' release channel."
          },
          "recommendedLoader": {
            "type": "string",
            "description": "If blank, will use 'Fabric' loader or the next available loader if Fabric is not available."
          },
          "promptBeforeGameJoin": {
            "type": "boolean",
            "default": true,
            "description": "If true, the user will be prompted to install the recommended mods/modpack before joining the server in-game."
          },
          "promptBeforeLauncherJoin": {
            "type": "boolean",
            "default": true,
            "description": "If true, the user will be prompted to install the recommended mods/modpack before joining the server in-game."
          }
        },
        "required": [
          "id"
        ],
        "description": "Server's modpack"
      },
      "MetadataShelfServer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the server"
          },
          "name": {
            "type": "string",
            "description": "Display name of the server"
          },
          "icon": {
            "type": "string",
            "format": "uri",
            "description": "Icon of the server"
          },
          "joinIp": {
            "type": "string",
            "description": "IP that should be joined on click"
          },
          "supportedVersions": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "Support Lunar Client version of the Server"
            },
            "description": "Supported Versions of the server"
          },
          "recommendedVersion": {
            "type": "string",
            "description": "Recommended version of the server"
          },
          "primaryColor": {
            "type": "string",
            "description": "Server's primary branding color"
          },
          "modpack": {
            "$ref": "#/components/schemas/ServerMappingsModpack"
          }
        },
        "required": [
          "id",
          "name",
          "icon",
          "joinIp",
          "supportedVersions",
          "recommendedVersion"
        ],
        "additionalProperties": false,
        "description": "Server metadata for server shelf functionality"
      },
      "TopbarSocial": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier for social item"
          },
          "name": {
            "type": "string",
            "description": "Name of the social (ex. Twitter)"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "description": "URL that gets opened on click"
          },
          "icon": {
            "type": "string",
            "description": "Icon to display for the social. Can either be a URL or a Fontawesome icon class"
          }
        },
        "required": [
          "id",
          "name",
          "url",
          "icon"
        ],
        "additionalProperties": false
      },
      "VideoPromotionTimings": {
        "type": "object",
        "properties": {
          "cooldowns": {
            "type": "object",
            "properties": {
              "house": {
                "type": "number",
                "description": "Length of cooldown for house advertisements (Lunar Client promos)"
              },
              "direct": {
                "type": "number",
                "description": "Length of cooldown for direct advertisements (Third party promos)"
              }
            },
            "required": [
              "house",
              "direct"
            ],
            "additionalProperties": false,
            "description": "Cooldowns for each promotion type"
          },
          "viewsBeforeCooldown": {
            "type": "object",
            "properties": {
              "house": {
                "type": "number",
                "description": "Amount of house ad views before cooldown is applied"
              },
              "direct": {
                "type": "number",
                "description": "Amount of direct ad views before cooldown is applied"
              }
            },
            "required": [
              "house",
              "direct"
            ],
            "additionalProperties": false,
            "description": "Number of views before cooldown is applied for each promotion type"
          }
        },
        "required": [
          "cooldowns",
          "viewsBeforeCooldown"
        ],
        "additionalProperties": false,
        "description": "Values that are applied to each promotion type"
      },
      "VideoPromotionPositioning": {
        "type": "object",
        "properties": {
          "blog": {
            "type": "object",
            "properties": {
              "slot": {
                "type": "number",
                "description": "Position to insert the video promotion on the home page"
              }
            },
            "required": [
              "slot"
            ],
            "additionalProperties": false,
            "description": "Positioning and properties of the blog placement for the video promotion"
          },
          "sidebar": {
            "type": "object",
            "properties": {
              "slot": {
                "type": "number",
                "description": "Position to insert the video promotion on the sidebar"
              },
              "image": {
                "type": "string",
                "format": "uri",
                "description": "Image to display in the sidebar placement for the video promotion, defaults to video icon if nothing is provided."
              }
            },
            "additionalProperties": false,
            "description": "Positioning and properties of the sidebar placement for the video promotion"
          }
        },
        "additionalProperties": false,
        "description": "Positioning of the entrypoints to the promotion in the Launcher"
      },
      "VideoPromotionCreativeIdentifiers": {
        "type": "object",
        "properties": {
          "creativeId": {
            "type": "string",
            "nullable": true,
            "description": "Creative ID that is being served with the advertisement"
          },
          "adId": {
            "type": "string",
            "nullable": true,
            "description": "Advertising ID that is being played"
          },
          "title": {
            "type": "string",
            "nullable": true,
            "description": "Title attributed to the creative"
          }
        },
        "additionalProperties": false,
        "description": "List of identifiers that will tried to be matched"
      },
      "VideoPromotionReward": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "COSMETIC",
              "EMOTE"
            ],
            "description": "Type of reward"
          },
          "id": {
            "type": "number",
            "description": "Identifier of cosmetic / emote"
          },
          "name": {
            "type": "string",
            "description": "Name of the reward"
          },
          "viewerData": {
            "nullable": true
          }
        },
        "required": [
          "type",
          "id",
          "name"
        ],
        "additionalProperties": false
      },
      "VideoPromotionCreative": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Moonsworth ID of the creative"
          },
          "name": {
            "type": "string",
            "description": "Moonsworth name of the creative"
          },
          "type": {
            "type": "string",
            "enum": [
              "HOUSE",
              "DIRECT"
            ],
            "description": "Type of creative"
          },
          "thumbnail": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "description": "Thumbnail to show in he blog area"
          },
          "sort": {
            "type": "number",
            "description": "Order of creative within the pool (used for sequence tracking)"
          },
          "identifiers": {
            "$ref": "#/components/schemas/VideoPromotionCreativeIdentifiers"
          },
          "cta": {
            "type": "object",
            "properties": {
              "buttonText": {
                "type": "string",
                "nullable": true,
                "description": "Text that is shown on the button",
                "example": "Visit store"
              },
              "buttonUrl": {
                "type": "string",
                "nullable": true,
                "format": "uri",
                "description": "URL that is opened when the button is clicked"
              },
              "text": {
                "type": "string",
                "nullable": true,
                "description": "Hook text that is shown on the left of the button"
              },
              "urlDisplay": {
                "type": "string",
                "nullable": true,
                "description": "Display hint of the URL that is opened positioned on the left of the button"
              }
            },
            "additionalProperties": false,
            "description": "Call to action information associated with the creative"
          },
          "vendor": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "nullable": true,
                "description": "Name of the vendor that is providing the creative (company)"
              },
              "image": {
                "type": "string",
                "nullable": true,
                "format": "uri",
                "description": "Logo of the vendor"
              }
            },
            "required": [
              "name",
              "image"
            ],
            "additionalProperties": false,
            "description": "Vendor information associated with the creative"
          },
          "rewards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VideoPromotionReward"
            },
            "description": "Rewards attached with the creative"
          }
        },
        "required": [
          "id",
          "name",
          "type",
          "thumbnail",
          "sort",
          "identifiers",
          "rewards"
        ],
        "additionalProperties": false
      },
      "VideoPromotion": {
        "type": "object",
        "properties": {
          "timings": {
            "$ref": "#/components/schemas/VideoPromotionTimings"
          },
          "positioning": {
            "$ref": "#/components/schemas/VideoPromotionPositioning"
          },
          "playerUrl": {
            "type": "string",
            "format": "uri",
            "description": "URL of the webpage where scripts are being injected"
          },
          "fallbackThumbnail": {
            "type": "string",
            "format": "uri",
            "description": "Thumbnail to use if the house ad index has reached the end of the list"
          },
          "launchToastDelay": {
            "type": "number",
            "description": "Amount of time in milliseconds after launch click to send the pending rewards Toast. Set this to -1 to disable the toast."
          },
          "corner": {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean",
                "description": "Whether or not the corner should be shown"
              },
              "playerUrl": {
                "type": "string",
                "format": "uri",
                "description": "URL of the webpage where scripts are being injected"
              },
              "playerTimeout": {
                "type": "number",
                "description": "Amount of time in milliseconds to wait for the player to start playing before it automatically closes"
              },
              "countdownAction": {
                "type": "string",
                "enum": [
                  "CLOSE",
                  "AUTOPLAY"
                ],
                "description": "Action to take when the countdown is finished on pre-video thumbnail"
              },
              "countdownAmount": {
                "type": "number",
                "description": "Amount of time in milliseconds to countdown"
              },
              "showDelay": {
                "type": "number",
                "description": "Amount of time in milliseconds to wait before showing the corner thumbnail on launch click"
              },
              "thumbnail": {
                "type": "string",
                "format": "uri",
                "description": "Thumbnail to show in the corner before video"
              }
            },
            "required": [
              "enabled",
              "playerUrl",
              "playerTimeout",
              "countdownAction",
              "countdownAmount",
              "showDelay",
              "thumbnail"
            ],
            "additionalProperties": false,
            "description": "Corner functionality for the video promotion"
          },
          "activeCreatives": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VideoPromotionCreative"
            },
            "description": "List of expected creatives"
          }
        },
        "required": [
          "timings",
          "positioning",
          "playerUrl",
          "launchToastDelay",
          "corner",
          "activeCreatives"
        ],
        "additionalProperties": false,
        "description": "Current video promotion information"
      },
      "LauncherRefreshIntervals": {
        "type": "object",
        "properties": {
          "metadata": {
            "type": "number",
            "description": "How often the metadata should refresh"
          },
          "updates": {
            "type": "number",
            "description": "How often the auto updater should check for updates"
          },
          "heartbeat": {
            "type": "number",
            "description": "How often the AssetServer heartbeat should be sent"
          },
          "servers": {
            "type": "number",
            "description": "How often the server counts fetch is sent"
          }
        },
        "required": [
          "metadata",
          "updates",
          "heartbeat",
          "servers"
        ],
        "additionalProperties": false,
        "description": "Refresh intervals across the Launcher"
      },
      "LauncherUpdater": {
        "type": "object",
        "properties": {
          "channel": {
            "type": "string",
            "description": "Updater channel to pull updates from",
            "example": "latest"
          },
          "feedUrl": {
            "type": "string",
            "format": "uri",
            "description": "URL to check updates from"
          }
        },
        "required": [
          "channel",
          "feedUrl"
        ],
        "additionalProperties": false,
        "description": "Information regarding the updater"
      },
      "LauncherErrorSolution": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID for the solution"
          },
          "title": {
            "type": "string",
            "description": "Title of the solution"
          },
          "description": {
            "type": "string",
            "description": "Description of the solution"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "String value to look for in stderr"
            },
            "description": "List of errors to look for in stderr"
          }
        },
        "required": [
          "id",
          "title",
          "description",
          "errors"
        ],
        "additionalProperties": false
      },
      "OnlinePlayers": {
        "type": "object",
        "properties": {
          "game": {
            "type": "number",
            "description": "Number of player with the game open"
          },
          "launcher": {
            "type": "number",
            "description": "Number of player with the launcher open"
          }
        },
        "required": [
          "game",
          "launcher"
        ],
        "additionalProperties": false,
        "description": "Number of concurrent players across Lunar Client platforms"
      },
      "LauncherRadioStation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of the radio station"
          },
          "name": {
            "type": "string",
            "description": "Name of the radio station"
          },
          "description": {
            "type": "string",
            "description": "Description of the radio station"
          },
          "image": {
            "type": "string",
            "description": "Image of the radio station"
          }
        },
        "required": [
          "id",
          "name"
        ],
        "additionalProperties": false
      },
      "LauncherRadioPremiumPackage": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the premium package",
            "example": "Premium Package"
          },
          "packageId": {
            "type": "number",
            "description": "The Tebex ID of the package",
            "example": 6538884
          },
          "priceAmount": {
            "type": "number",
            "minimum": 0,
            "description": "Amount of the price of the premium radio subscription",
            "example": 4.99
          },
          "priceCurrency": {
            "type": "string",
            "description": "Currency of the price of the premium radio subscription",
            "example": "USD"
          }
        },
        "required": [
          "name",
          "packageId",
          "priceAmount",
          "priceCurrency"
        ],
        "additionalProperties": false
      },
      "ServerMappingsSocials": {
        "type": "object",
        "properties": {
          "twitter": {
            "type": "string",
            "description": "Twitter handle of the server (without @)"
          },
          "discord": {
            "type": "string",
            "description": "Full discord invite link of the server"
          },
          "youtube": {
            "type": "string",
            "description": "Youtube channel slug of the server (without /channel/)"
          },
          "instagram": {
            "type": "string",
            "description": "Instagram handle of the server (without @)"
          },
          "twitch": {
            "type": "string",
            "description": "Twitch channel of the server (without @)"
          },
          "telegram": {
            "type": "string",
            "description": "Telegram channel slug of the server"
          },
          "reddit": {
            "type": "string",
            "description": "Reddit slug of the server (without the leading r/)"
          },
          "tiktok": {
            "type": "string",
            "description": "TikTok handle of the server (without @)"
          },
          "facebook": {
            "type": "string",
            "description": "Facebook slug of the server"
          }
        },
        "description": "Social media channels of the server"
      },
      "ServerMappingsCompliance": {
        "type": "object",
        "properties": {
          "privacyPolicy": {
            "type": "string",
            "format": "uri",
            "description": "URL to the server's Privacy Policy"
          },
          "termsOfService": {
            "type": "string",
            "format": "uri",
            "description": "URL to the server's Terms of Service"
          },
          "rules": {
            "type": "string",
            "format": "uri",
            "description": "URL to the server's Rules"
          },
          "support": {
            "type": "string",
            "format": "uri",
            "description": "URL to the server's Support"
          }
        },
        "description": "Compliance URLs of the server"
      },
      "LauncherServer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of the server"
          },
          "name": {
            "type": "string",
            "description": "Display name of the server"
          },
          "website": {
            "type": "string",
            "format": "uri",
            "description": "URL to the server's website"
          },
          "store": {
            "type": "string",
            "format": "uri",
            "description": "URL to the server's store"
          },
          "wiki": {
            "type": "string",
            "format": "uri",
            "description": "URL to the server's wiki"
          },
          "merch": {
            "type": "string",
            "format": "uri",
            "description": "URL to the server's merchandise"
          },
          "description": {
            "type": "string",
            "description": "Description of the server"
          },
          "addresses": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "Address that the server is known as"
            },
            "description": "Domains that represent the server (used for discovery)"
          },
          "primaryAddress": {
            "type": "string",
            "description": "Address that people will content to upon clicking"
          },
          "minecraftVersions": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "Playable Minecraft version of the server"
            },
            "description": "List of versions that the server lists as playable"
          },
          "primaryMinecraftVersion": {
            "type": "string",
            "description": "Version that the server recommends you to join with"
          },
          "primaryColor": {
            "type": "string",
            "description": "Server's primary branding color"
          },
          "secondaryColor": {
            "type": "string",
            "description": "Server's secondary branding color"
          },
          "primaryLanguage": {
            "type": "string",
            "description": "Primary language that server is based on"
          },
          "languages": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "Supported language of the server"
            },
            "description": "List of languages that the server supports"
          },
          "primaryRegion": {
            "type": "string",
            "description": "Primary region that the server operates in"
          },
          "regions": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "Region that the server operates in"
            },
            "description": "List of regions that the server operates in (physical hardware)"
          },
          "gameTypes": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "Gametype that server provides to play"
            },
            "description": "List of Game Types that the server provides to play"
          },
          "socials": {
            "$ref": "#/components/schemas/ServerMappingsSocials"
          },
          "crossplay": {
            "type": "boolean",
            "description": "Whether the server supports crossplay with Bedrock players"
          },
          "presentationVideo": {
            "type": "string",
            "description": "YouTube ID of a server's Trailer/Introduction video"
          },
          "compliance": {
            "$ref": "#/components/schemas/ServerMappingsCompliance"
          },
          "modpack": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServerMappingsModpack"
              },
              {
                "description": "Recommended Modpack of the server"
              }
            ]
          },
          "images": {
            "type": "object",
            "properties": {
              "logo": {
                "type": "string",
                "format": "uri",
                "description": "URL to the server's logo"
              },
              "banner": {
                "type": "string",
                "format": "uri",
                "description": "URL to the server's banner"
              },
              "background": {
                "type": "string",
                "format": "uri",
                "description": "URL to the server's background"
              },
              "wordmark": {
                "type": "string",
                "format": "uri",
                "description": "URL to the server's wordmark"
              }
            },
            "description": "Images of the server"
          },
          "partnered": {
            "type": "boolean",
            "description": "Whether the server has an active Lunar Client partnership (front page)"
          }
        },
        "required": [
          "id",
          "name",
          "addresses",
          "primaryAddress",
          "minecraftVersions",
          "primaryMinecraftVersion",
          "images",
          "partnered"
        ]
      },
      "LauncherServerModeFilter": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the mode"
          },
          "iconUrl": {
            "type": "string",
            "format": "uri",
            "description": "Icon representing mode"
          }
        },
        "required": [
          "name",
          "iconUrl"
        ],
        "additionalProperties": false
      },
      "LauncherServerRegionFilter": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Continent code of the region"
          },
          "name": {
            "type": "string",
            "description": "Name of the region"
          }
        },
        "required": [
          "code",
          "name"
        ],
        "additionalProperties": false
      },
      "LauncherServerFilters": {
        "type": "object",
        "properties": {
          "versions": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "Minecraft version that can be filtered by"
            },
            "description": "List of available versions that can be filtered by"
          },
          "modes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LauncherServerModeFilter"
            },
            "description": "List of available modes that can be filtered by"
          },
          "regions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LauncherServerRegionFilter"
            },
            "description": "List of available regions that can be filtered by"
          }
        },
        "required": [
          "versions",
          "modes",
          "regions"
        ],
        "additionalProperties": false,
        "description": "Filters that can be applied to the servers tab"
      },
      "WrappedCountryData": {
        "type": "object",
        "properties": {
          "country": {
            "type": "string",
            "description": "The country code this data represents",
            "example": "US"
          },
          "total_cosmetic_changes": {
            "type": "object",
            "nullable": true,
            "properties": {
              "value": {
                "type": "number",
                "description": "Country's value for this metric"
              },
              "rank": {
                "type": "integer",
                "description": "Absolute rank this value places the country at, over the entire world"
              }
            },
            "required": [
              "value",
              "rank"
            ],
            "additionalProperties": false,
            "description": "Total number of cosmetic outfit changes that took place, where the player is from this country"
          },
          "total_emote_time_millis": {
            "type": "object",
            "nullable": true,
            "properties": {
              "value": {
                "type": "number",
                "description": "Country's value for this metric"
              },
              "rank": {
                "type": "integer",
                "description": "Absolute rank this value places the country at, over the entire world"
              }
            },
            "required": [
              "value",
              "rank"
            ],
            "additionalProperties": false,
            "description": "Total number of milliseconds players emoted for, where the player is from this country"
          },
          "total_emote_uses": {
            "type": "object",
            "nullable": true,
            "properties": {
              "value": {
                "type": "number",
                "description": "Country's value for this metric"
              },
              "rank": {
                "type": "integer",
                "description": "Absolute rank this value places the country at, over the entire world"
              }
            },
            "required": [
              "value",
              "rank"
            ],
            "additionalProperties": false,
            "description": "Total number of emote usages that took place, where the player is from this country"
          },
          "total_friend_adds": {
            "type": "object",
            "nullable": true,
            "properties": {
              "value": {
                "type": "number",
                "description": "Country's value for this metric"
              },
              "rank": {
                "type": "integer",
                "description": "Absolute rank this value places the country at, over the entire world"
              }
            },
            "required": [
              "value",
              "rank"
            ],
            "additionalProperties": false,
            "description": "Total number of new friendships that were formed, where at least one player is from this country"
          },
          "total_friend_messages": {
            "type": "object",
            "nullable": true,
            "properties": {
              "value": {
                "type": "number",
                "description": "Country's value for this metric"
              },
              "rank": {
                "type": "integer",
                "description": "Absolute rank this value places the country at, over the entire world"
              }
            },
            "required": [
              "value",
              "rank"
            ],
            "additionalProperties": false,
            "description": "Total number of friend messages that were sent, where the sending player is from this country"
          },
          "total_plays": {
            "type": "object",
            "nullable": true,
            "properties": {
              "value": {
                "type": "number",
                "description": "Country's value for this metric"
              },
              "rank": {
                "type": "integer",
                "description": "Absolute rank this value places the country at, over the entire world"
              }
            },
            "required": [
              "value",
              "rank"
            ],
            "additionalProperties": false,
            "description": "Total number of plays that took place, where the player is from this country"
          },
          "total_playtime_millis": {
            "type": "object",
            "nullable": true,
            "properties": {
              "value": {
                "type": "number",
                "description": "Country's value for this metric"
              },
              "rank": {
                "type": "integer",
                "description": "Absolute rank this value places the country at, over the entire world"
              }
            },
            "required": [
              "value",
              "rank"
            ],
            "additionalProperties": false,
            "description": "Total number of milliseconds of playtime that took place, where the player is from this country"
          },
          "total_realms_joins": {
            "type": "object",
            "nullable": true,
            "properties": {
              "value": {
                "type": "number",
                "description": "Country's value for this metric"
              },
              "rank": {
                "type": "integer",
                "description": "Absolute rank this value places the country at, over the entire world"
              }
            },
            "required": [
              "value",
              "rank"
            ],
            "additionalProperties": false,
            "description": "Total number of Minecraft Realms joins that took place, where the player is from this country"
          },
          "total_server_joins": {
            "type": "object",
            "nullable": true,
            "properties": {
              "value": {
                "type": "number",
                "description": "Country's value for this metric"
              },
              "rank": {
                "type": "integer",
                "description": "Absolute rank this value places the country at, over the entire world"
              }
            },
            "required": [
              "value",
              "rank"
            ],
            "additionalProperties": false,
            "description": "Total number of multiplayer server joins that took place, where the player is from this country"
          },
          "total_singleplayer_joins": {
            "type": "object",
            "nullable": true,
            "properties": {
              "value": {
                "type": "number",
                "description": "Country's value for this metric"
              },
              "rank": {
                "type": "integer",
                "description": "Absolute rank this value places the country at, over the entire world"
              }
            },
            "required": [
              "value",
              "rank"
            ],
            "additionalProperties": false,
            "description": "Total number of singleplayer joins that took place, where the player is from this country"
          },
          "top_server_joins": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "server_mappings_id": {
                  "type": "string",
                  "description": "ServerMappings ID for this server"
                },
                "server_mappings_name": {
                  "type": "string",
                  "description": "ServerMappings name for this server"
                },
                "value": {
                  "type": "integer",
                  "description": "Total number of joins to this server, where the player is from this country"
                }
              },
              "required": [
                "server_mappings_id",
                "server_mappings_name",
                "value"
              ],
              "additionalProperties": false
            },
            "description": "Top servers, sorted by number of joins, where the player is from this country"
          },
          "top_server_types": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Server type, as defined in ServerMappings"
                },
                "value": {
                  "type": "integer",
                  "description": "Total number of joins to servers with this type, where the player is from this country"
                }
              },
              "required": [
                "type",
                "value"
              ],
              "additionalProperties": false
            },
            "description": "Top server types, sorted by number of joins, where the player is from this country"
          }
        },
        "required": [
          "country",
          "total_cosmetic_changes",
          "total_emote_time_millis",
          "total_emote_uses",
          "total_friend_adds",
          "total_friend_messages",
          "total_plays",
          "total_playtime_millis",
          "total_realms_joins",
          "total_server_joins",
          "total_singleplayer_joins",
          "top_server_joins",
          "top_server_types"
        ],
        "additionalProperties": false
      },
      "WrappedGlobalData": {
        "type": "object",
        "properties": {
          "total_emote_time_millis": {
            "type": "number",
            "description": "Total number of milliseconds players emoted for"
          },
          "total_emote_uses": {
            "type": "number",
            "description": "Total number of emote usages that took place"
          },
          "total_friend_adds": {
            "type": "number",
            "description": "Total number of new friendships that were formed"
          },
          "total_friend_messages": {
            "type": "number",
            "description": "Total number of friend messages that were sent"
          },
          "total_name_changes": {
            "type": "number",
            "description": "Total number of Minecraft name changes that we detected"
          },
          "total_server_joins": {
            "type": "number",
            "description": "Total number of multiplayer server joins that took place"
          },
          "total_singleplayer_joins": {
            "type": "number",
            "description": "Total number of singleplayer joins that took place"
          },
          "total_plays": {
            "type": "number",
            "description": "Total number of plays that took place"
          },
          "total_playtime_millis": {
            "type": "number",
            "description": "Total number of milliseconds of playtime that took place"
          },
          "total_realms_joins": {
            "type": "number",
            "description": "Total number of Minecraft Realms joins that took place"
          },
          "top_version_plays": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "version": {
                  "type": "string",
                  "description": "Minecraft version (major version only)",
                  "example": "1.20"
                },
                "value": {
                  "type": "integer",
                  "description": "Total number of plays on this Minecraft version"
                }
              },
              "required": [
                "version",
                "value"
              ],
              "additionalProperties": false
            },
            "description": "Top Minecraft versions, sorted by number of plays"
          },
          "top_server_joins": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "server_mappings_id": {
                  "type": "string",
                  "description": "ServerMappings ID for this server"
                },
                "server_mappings_name": {
                  "type": "string",
                  "description": "ServerMappings name for this server"
                },
                "value": {
                  "type": "integer",
                  "description": "Total number of joins to this server"
                }
              },
              "required": [
                "server_mappings_id",
                "server_mappings_name",
                "value"
              ],
              "additionalProperties": false
            },
            "description": "Top servers, sorted by number of joins"
          },
          "top_server_types": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Server type, as defined in ServerMappings"
                },
                "value": {
                  "type": "integer",
                  "description": "Total number of joins to servers with this type"
                }
              },
              "required": [
                "type",
                "value"
              ],
              "additionalProperties": false
            },
            "description": "Top server types, sorted by number of joins"
          },
          "top_countries": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "country": {
                  "type": "string",
                  "description": "The country code this data represents",
                  "example": "US"
                },
                "value": {
                  "type": "number",
                  "description": "Percent of players from this country, from 0.0 to 1.0",
                  "example": 0.29
                }
              },
              "required": [
                "country",
                "value"
              ],
              "additionalProperties": false
            },
            "description": "Top countries, sorted by percentage of players"
          }
        },
        "required": [
          "total_emote_time_millis",
          "total_emote_uses",
          "total_friend_adds",
          "total_friend_messages",
          "total_name_changes",
          "total_server_joins",
          "total_singleplayer_joins",
          "total_plays",
          "total_playtime_millis",
          "total_realms_joins",
          "top_version_plays",
          "top_server_joins",
          "top_server_types",
          "top_countries"
        ],
        "additionalProperties": false
      },
      "WrappedPlayerData": {
        "type": "object",
        "properties": {
          "player_uuid": {
            "type": "string",
            "format": "uuid",
            "description": "Minecraft UUID of the player"
          },
          "country": {
            "type": "string",
            "description": "Detected 'home' country of the player, used for country ranks/percentiles"
          },
          "added_friends": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true,
              "format": "uuid",
              "description": "Friend's Minecraft UUID"
            },
            "description": "UUIDs of players added as a friend in the year (including removed friends)"
          },
          "total_cosmetic_changes": {
            "type": "object",
            "nullable": true,
            "properties": {
              "value": {
                "type": "integer",
                "nullable": true,
                "description": "Player's value for this metric"
              },
              "country_percentile": {
                "type": "number",
                "description": "Percentile this value places the player at, in the player's country"
              },
              "country_rank": {
                "type": "integer",
                "description": "Absolute rank this value places the player at, in the player's country"
              },
              "global_percentile": {
                "type": "number",
                "description": "Percentile this value places the player at, over the entire world"
              },
              "global_rank": {
                "type": "integer",
                "description": "Absolute rank this value places the player at, over the entire world"
              }
            },
            "required": [
              "value",
              "country_percentile",
              "country_rank",
              "global_percentile",
              "global_rank"
            ],
            "additionalProperties": false,
            "description": "Number of cosmetic changes"
          },
          "total_emote_time_millis": {
            "type": "object",
            "nullable": true,
            "properties": {
              "value": {
                "type": "integer",
                "nullable": true,
                "description": "Player's value for this metric"
              },
              "country_percentile": {
                "type": "number",
                "description": "Percentile this value places the player at, in the player's country"
              },
              "country_rank": {
                "type": "integer",
                "description": "Absolute rank this value places the player at, in the player's country"
              },
              "global_percentile": {
                "type": "number",
                "description": "Percentile this value places the player at, over the entire world"
              },
              "global_rank": {
                "type": "integer",
                "description": "Absolute rank this value places the player at, over the entire world"
              }
            },
            "required": [
              "value",
              "country_percentile",
              "country_rank",
              "global_percentile",
              "global_rank"
            ],
            "additionalProperties": false,
            "description": "Duration spent emoting (in milliseconds)"
          },
          "total_emote_uses": {
            "type": "object",
            "nullable": true,
            "properties": {
              "value": {
                "type": "integer",
                "nullable": true,
                "description": "Player's value for this metric"
              },
              "country_percentile": {
                "type": "number",
                "description": "Percentile this value places the player at, in the player's country"
              },
              "country_rank": {
                "type": "integer",
                "description": "Absolute rank this value places the player at, in the player's country"
              },
              "global_percentile": {
                "type": "number",
                "description": "Percentile this value places the player at, over the entire world"
              },
              "global_rank": {
                "type": "integer",
                "description": "Absolute rank this value places the player at, over the entire world"
              }
            },
            "required": [
              "value",
              "country_percentile",
              "country_rank",
              "global_percentile",
              "global_rank"
            ],
            "additionalProperties": false,
            "description": "Number of emote usages that took place"
          },
          "total_friend_messages": {
            "type": "object",
            "nullable": true,
            "properties": {
              "value": {
                "type": "integer",
                "nullable": true,
                "description": "Player's value for this metric"
              },
              "country_percentile": {
                "type": "number",
                "description": "Percentile this value places the player at, in the player's country"
              },
              "country_rank": {
                "type": "integer",
                "description": "Absolute rank this value places the player at, in the player's country"
              },
              "global_percentile": {
                "type": "number",
                "description": "Percentile this value places the player at, over the entire world"
              },
              "global_rank": {
                "type": "integer",
                "description": "Absolute rank this value places the player at, over the entire world"
              }
            },
            "required": [
              "value",
              "country_percentile",
              "country_rank",
              "global_percentile",
              "global_rank"
            ],
            "additionalProperties": false,
            "description": "Number of friend messages that were sent"
          },
          "total_name_changes": {
            "type": "object",
            "nullable": true,
            "properties": {
              "value": {
                "type": "integer",
                "nullable": true,
                "description": "Player's value for this metric"
              },
              "country_percentile": {
                "type": "number",
                "description": "Percentile this value places the player at, in the player's country"
              },
              "country_rank": {
                "type": "integer",
                "description": "Absolute rank this value places the player at, in the player's country"
              },
              "global_percentile": {
                "type": "number",
                "description": "Percentile this value places the player at, over the entire world"
              },
              "global_rank": {
                "type": "integer",
                "description": "Absolute rank this value places the player at, over the entire world"
              }
            },
            "required": [
              "value",
              "country_percentile",
              "country_rank",
              "global_percentile",
              "global_rank"
            ],
            "additionalProperties": false,
            "description": "Number of Minecraft name changes that we detected"
          },
          "total_plays": {
            "type": "object",
            "nullable": true,
            "properties": {
              "value": {
                "type": "integer",
                "nullable": true,
                "description": "Player's value for this metric"
              },
              "country_percentile": {
                "type": "number",
                "description": "Percentile this value places the player at, in the player's country"
              },
              "country_rank": {
                "type": "integer",
                "description": "Absolute rank this value places the player at, in the player's country"
              },
              "global_percentile": {
                "type": "number",
                "description": "Percentile this value places the player at, over the entire world"
              },
              "global_rank": {
                "type": "integer",
                "description": "Absolute rank this value places the player at, over the entire world"
              }
            },
            "required": [
              "value",
              "country_percentile",
              "country_rank",
              "global_percentile",
              "global_rank"
            ],
            "additionalProperties": false,
            "description": "Number of plays (websocket connections)"
          },
          "total_playtime_millis": {
            "type": "object",
            "nullable": true,
            "properties": {
              "value": {
                "type": "integer",
                "nullable": true,
                "description": "Player's value for this metric"
              },
              "country_percentile": {
                "type": "number",
                "description": "Percentile this value places the player at, in the player's country"
              },
              "country_rank": {
                "type": "integer",
                "description": "Absolute rank this value places the player at, in the player's country"
              },
              "global_percentile": {
                "type": "number",
                "description": "Percentile this value places the player at, over the entire world"
              },
              "global_rank": {
                "type": "integer",
                "description": "Absolute rank this value places the player at, over the entire world"
              }
            },
            "required": [
              "value",
              "country_percentile",
              "country_rank",
              "global_percentile",
              "global_rank"
            ],
            "additionalProperties": false,
            "description": "Playtime (in milliseconds)"
          },
          "total_realms_joins": {
            "type": "object",
            "nullable": true,
            "properties": {
              "value": {
                "type": "integer",
                "nullable": true,
                "description": "Player's value for this metric"
              },
              "country_percentile": {
                "type": "number",
                "description": "Percentile this value places the player at, in the player's country"
              },
              "country_rank": {
                "type": "integer",
                "description": "Absolute rank this value places the player at, in the player's country"
              },
              "global_percentile": {
                "type": "number",
                "description": "Percentile this value places the player at, over the entire world"
              },
              "global_rank": {
                "type": "integer",
                "description": "Absolute rank this value places the player at, over the entire world"
              }
            },
            "required": [
              "value",
              "country_percentile",
              "country_rank",
              "global_percentile",
              "global_rank"
            ],
            "additionalProperties": false,
            "description": "Number of Minecraft Realms joins"
          },
          "total_server_joins": {
            "type": "object",
            "nullable": true,
            "properties": {
              "value": {
                "type": "integer",
                "nullable": true,
                "description": "Player's value for this metric"
              },
              "country_percentile": {
                "type": "number",
                "description": "Percentile this value places the player at, in the player's country"
              },
              "country_rank": {
                "type": "integer",
                "description": "Absolute rank this value places the player at, in the player's country"
              },
              "global_percentile": {
                "type": "number",
                "description": "Percentile this value places the player at, over the entire world"
              },
              "global_rank": {
                "type": "integer",
                "description": "Absolute rank this value places the player at, over the entire world"
              }
            },
            "required": [
              "value",
              "country_percentile",
              "country_rank",
              "global_percentile",
              "global_rank"
            ],
            "additionalProperties": false,
            "description": "Number of multiplayer server joins"
          },
          "total_singleplayer_joins": {
            "type": "object",
            "nullable": true,
            "properties": {
              "value": {
                "type": "integer",
                "nullable": true,
                "description": "Player's value for this metric"
              },
              "country_percentile": {
                "type": "number",
                "description": "Percentile this value places the player at, in the player's country"
              },
              "country_rank": {
                "type": "integer",
                "description": "Absolute rank this value places the player at, in the player's country"
              },
              "global_percentile": {
                "type": "number",
                "description": "Percentile this value places the player at, over the entire world"
              },
              "global_rank": {
                "type": "integer",
                "description": "Absolute rank this value places the player at, over the entire world"
              }
            },
            "required": [
              "value",
              "country_percentile",
              "country_rank",
              "global_percentile",
              "global_rank"
            ],
            "additionalProperties": false,
            "description": "Number of singleplayer joins"
          },
          "top_daily_streak": {
            "type": "object",
            "nullable": true,
            "properties": {
              "value": {
                "type": "integer",
                "nullable": true,
                "description": "Player's value for this metric"
              },
              "streak_start": {
                "type": "string",
                "description": "Date the top streak started",
                "example": "2023-11-19"
              },
              "streak_end": {
                "type": "string",
                "description": "Date the top streak ended",
                "example": "2023-11-28"
              },
              "country_percentile": {
                "type": "number",
                "description": "Percentile this value places the player at, in the player's country"
              },
              "country_rank": {
                "type": "integer",
                "description": "Absolute rank this value places the player at, in the player's country"
              },
              "global_percentile": {
                "type": "number",
                "description": "Percentile this value places the player at, over the entire world"
              },
              "global_rank": {
                "type": "integer",
                "description": "Absolute rank this value places the player at, over the entire world"
              }
            },
            "required": [
              "value",
              "streak_start",
              "streak_end",
              "country_percentile",
              "country_rank",
              "global_percentile",
              "global_rank"
            ],
            "additionalProperties": false,
            "description": "Longest daily login streak (consecutive plays)"
          },
          "top_emotes_by_use": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "emote_id": {
                  "type": "integer",
                  "nullable": true,
                  "description": "ID of the emote"
                },
                "value": {
                  "type": "integer",
                  "description": "Player's value for this metric"
                },
                "country_percentile": {
                  "type": "number",
                  "description": "Percentile this value places the player at, in the player's country"
                },
                "country_rank": {
                  "type": "integer",
                  "description": "Absolute rank this value places the player at, in the player's country"
                },
                "global_percentile": {
                  "type": "number",
                  "description": "Percentile this value places the player at, over the entire world"
                },
                "global_rank": {
                  "type": "integer",
                  "description": "Absolute rank this value places the player at, over the entire world"
                }
              },
              "required": [
                "emote_id",
                "value",
                "country_percentile",
                "country_rank",
                "global_percentile",
                "global_rank"
              ],
              "additionalProperties": false
            },
            "description": "Top emotes, sorted by number of uses"
          },
          "top_version_plays": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "version": {
                  "type": "string",
                  "description": "Minecraft version (major version only)",
                  "example": "1.20"
                },
                "value": {
                  "type": "integer",
                  "description": "Player's value for this metric"
                },
                "country_percentile": {
                  "type": "number",
                  "description": "Percentile this value places the player at, in the player's country"
                },
                "country_rank": {
                  "type": "integer",
                  "description": "Absolute rank this value places the player at, in the player's country"
                },
                "global_percentile": {
                  "type": "number",
                  "description": "Percentile this value places the player at, over the entire world"
                },
                "global_rank": {
                  "type": "integer",
                  "description": "Absolute rank this value places the player at, over the entire world"
                }
              },
              "required": [
                "version",
                "value",
                "country_percentile",
                "country_rank",
                "global_percentile",
                "global_rank"
              ],
              "additionalProperties": false
            },
            "description": "Top Minecraft versions, sorted by number of plays"
          },
          "top_server_joins": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "server_mappings_id": {
                  "type": "string",
                  "description": "ServerMappings ID for this server",
                  "example": "hypixel"
                },
                "value": {
                  "type": "integer",
                  "description": "Player's value for this metric"
                },
                "country_percentile": {
                  "type": "number",
                  "description": "Percentile this value places the player at, in the player's country"
                },
                "country_rank": {
                  "type": "integer",
                  "description": "Absolute rank this value places the player at, in the player's country"
                },
                "global_percentile": {
                  "type": "number",
                  "description": "Percentile this value places the player at, over the entire world"
                },
                "global_rank": {
                  "type": "integer",
                  "description": "Absolute rank this value places the player at, over the entire world"
                }
              },
              "required": [
                "server_mappings_id",
                "value",
                "country_percentile",
                "country_rank",
                "global_percentile",
                "global_rank"
              ],
              "additionalProperties": false
            },
            "description": "Top multiplayer servers, sorted by number of joins"
          },
          "top_server_types": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Server type, as defined in ServerMappings"
                },
                "value": {
                  "type": "integer",
                  "description": "Player's value for this metric"
                },
                "country_percentile": {
                  "type": "number",
                  "description": "Percentile this value places the player at, in the player's country"
                },
                "country_rank": {
                  "type": "integer",
                  "description": "Absolute rank this value places the player at, in the player's country"
                },
                "global_percentile": {
                  "type": "number",
                  "description": "Percentile this value places the player at, over the entire world"
                },
                "global_rank": {
                  "type": "integer",
                  "description": "Absolute rank this value places the player at, over the entire world"
                }
              },
              "required": [
                "type",
                "value",
                "country_percentile",
                "country_rank",
                "global_percentile",
                "global_rank"
              ],
              "additionalProperties": false
            },
            "description": "Top server types, sorted by number of joins"
          },
          "top_cosmetics": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "cosmetic_id": {
                  "type": "integer",
                  "nullable": true,
                  "description": "ID of the cosmetic"
                },
                "value": {
                  "type": "integer",
                  "description": "Player's value for this metric"
                }
              },
              "required": [
                "cosmetic_id",
                "value"
              ],
              "additionalProperties": false
            },
            "description": "Top cosmetics, sorted by number of uses"
          },
          "top_friends_by_messages": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "friend_uuid": {
                  "type": "string",
                  "format": "uuid",
                  "description": "Friend's Minecraft UUID"
                },
                "value": {
                  "type": "integer",
                  "description": "Player's value for this metric"
                }
              },
              "required": [
                "friend_uuid",
                "value"
              ],
              "additionalProperties": false
            },
            "description": "Top friends, sorted by number of messages sent to them"
          },
          "playerName": {
            "type": "string",
            "description": "Minecraft username of the player"
          },
          "rank": {
            "type": "string",
            "description": "Rank of the player"
          },
          "allEmotes": {
            "type": "boolean",
            "description": "Whether the player has all emotes"
          },
          "allCosmetics": {
            "type": "boolean",
            "description": "Whether the player has all cosmetics"
          },
          "lunarPlus": {
            "type": "boolean",
            "description": "Whether the player has Lunar+"
          },
          "cosmeticsPurchased": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "cosmetic_id": {
                  "type": "integer",
                  "nullable": true,
                  "description": "ID of the cosmetic"
                },
                "cosmetic_name": {
                  "type": "string",
                  "description": "Name of the cosmetic"
                },
                "cosmetic_image_url": {
                  "type": "string",
                  "format": "uri",
                  "description": "Image URL of the cosmetic"
                }
              },
              "required": [
                "cosmetic_id",
                "cosmetic_name",
                "cosmetic_image_url"
              ],
              "additionalProperties": false,
              "description": "Cosmetic"
            },
            "description": "Cosmetics purchased by the player"
          },
          "emotesPurchased": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "emote_id": {
                  "type": "integer",
                  "nullable": true,
                  "description": "ID of the emote"
                },
                "emote_name": {
                  "type": "string",
                  "description": "Name of the emote"
                },
                "emote_image_url": {
                  "type": "string",
                  "nullable": true,
                  "format": "uri",
                  "description": "Image URL of the emote"
                }
              },
              "required": [
                "emote_id",
                "emote_name",
                "emote_image_url"
              ],
              "additionalProperties": false,
              "description": "Emote"
            },
            "description": "Emotes purchased by the player"
          },
          "friendsWithLunarPlus": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid",
              "description": "Friend's Minecraft UUID"
            },
            "description": "Friends with Lunar+"
          },
          "topEmotesByUse": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "emote_id": {
                  "type": "integer",
                  "nullable": true,
                  "description": "ID of the emote"
                },
                "emote_name": {
                  "type": "string",
                  "description": "Name of the emote"
                },
                "emote_image_url": {
                  "type": "string",
                  "nullable": true,
                  "format": "uri",
                  "description": "Image URL of the emote"
                },
                "value": {
                  "type": "integer",
                  "description": "Player's value for this metric"
                },
                "country_percentile": {
                  "type": "number",
                  "description": "Percentile this value places the player at, in the player's country"
                },
                "country_rank": {
                  "type": "integer",
                  "description": "Absolute rank this value places the player at, in the player's country"
                },
                "global_percentile": {
                  "type": "number",
                  "description": "Percentile this value places the player at, over the entire world"
                },
                "global_rank": {
                  "type": "integer",
                  "description": "Absolute rank this value places the player at, over the entire world"
                }
              },
              "required": [
                "emote_id",
                "emote_name",
                "emote_image_url",
                "value",
                "country_percentile",
                "country_rank",
                "global_percentile",
                "global_rank"
              ],
              "additionalProperties": false
            },
            "description": "Top emotes, sorted by number of uses"
          },
          "topServerJoins": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "server_mappings_id": {
                  "type": "string",
                  "description": "ServerMappings ID for this server",
                  "example": "hypixel"
                },
                "server_mappings_name": {
                  "type": "string",
                  "description": "ServerMappings name for this server",
                  "example": "Hypixel"
                },
                "value": {
                  "type": "integer",
                  "description": "Player's value for this metric"
                },
                "country_percentile": {
                  "type": "number",
                  "description": "Percentile this value places the player at, in the player's country"
                },
                "country_rank": {
                  "type": "integer",
                  "description": "Absolute rank this value places the player at, in the player's country"
                },
                "global_percentile": {
                  "type": "number",
                  "description": "Percentile this value places the player at, over the entire world"
                },
                "global_rank": {
                  "type": "integer",
                  "description": "Absolute rank this value places the player at, over the entire world"
                }
              },
              "required": [
                "server_mappings_id",
                "server_mappings_name",
                "value",
                "country_percentile",
                "country_rank",
                "global_percentile",
                "global_rank"
              ],
              "additionalProperties": false
            },
            "description": "Top multiplayer servers, sorted by number of joins"
          },
          "topCosmetics": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "cosmetic_id": {
                  "type": "integer",
                  "nullable": true,
                  "description": "ID of the cosmetic"
                },
                "cosmetic_name": {
                  "type": "string",
                  "description": "Name of the cosmetic"
                },
                "cosmetic_image_url": {
                  "type": "string",
                  "format": "uri",
                  "description": "Image URL of the cosmetic"
                },
                "value": {
                  "type": "integer",
                  "description": "Player's value for this metric"
                }
              },
              "required": [
                "cosmetic_id",
                "cosmetic_name",
                "cosmetic_image_url",
                "value"
              ],
              "additionalProperties": false
            },
            "description": "Top cosmetics, sorted by number of uses"
          },
          "topFriendsByMessages": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "friend_uuid": {
                  "type": "string",
                  "format": "uuid",
                  "description": "Friend's Minecraft UUID"
                },
                "friend_name": {
                  "type": "string",
                  "description": "Friend's Minecraft username"
                },
                "value": {
                  "type": "integer",
                  "description": "Player's value for this metric"
                }
              },
              "required": [
                "friend_uuid",
                "friend_name",
                "value"
              ],
              "additionalProperties": false
            },
            "description": "Top friends, sorted by number of messages sent to them"
          }
        },
        "required": [
          "player_uuid",
          "country",
          "added_friends",
          "total_cosmetic_changes",
          "total_emote_time_millis",
          "total_emote_uses",
          "total_friend_messages",
          "total_name_changes",
          "total_plays",
          "total_playtime_millis",
          "total_realms_joins",
          "total_server_joins",
          "total_singleplayer_joins",
          "top_daily_streak",
          "top_emotes_by_use",
          "top_version_plays",
          "top_server_joins",
          "top_server_types",
          "top_cosmetics",
          "top_friends_by_messages",
          "playerName",
          "rank",
          "allEmotes",
          "allCosmetics",
          "lunarPlus",
          "cosmeticsPurchased",
          "emotesPurchased",
          "friendsWithLunarPlus",
          "topEmotesByUse",
          "topServerJoins",
          "topCosmetics",
          "topFriendsByMessages"
        ],
        "additionalProperties": false
      },
      "WrappedServerData": {
        "type": "object",
        "properties": {
          "server_mappings_id": {
            "type": "string",
            "description": "The ServerMappings ID this data represents",
            "example": "hypixel"
          },
          "server_mappings_name": {
            "type": "string",
            "description": "The ServerMappings name of the requested server",
            "example": "Hypixel"
          },
          "top_version_plays": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "version": {
                  "type": "string",
                  "description": "Minecraft version (major version only)",
                  "example": "1.20"
                },
                "value": {
                  "type": "integer",
                  "description": "Total number of joins on this Minecraft version"
                }
              },
              "required": [
                "version",
                "value"
              ],
              "additionalProperties": false
            },
            "description": "Top Minecraft versions, sorted by number of joins on this server"
          },
          "top_countries": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "country": {
                  "type": "string",
                  "description": "2 letter country code",
                  "example": "US"
                },
                "value": {
                  "type": "integer",
                  "description": "Total number of joins from players from this country"
                }
              },
              "required": [
                "country",
                "value"
              ],
              "additionalProperties": false
            },
            "description": "Top countries, sorted by number of joins on this server"
          }
        },
        "required": [
          "server_mappings_id",
          "server_mappings_name",
          "top_version_plays",
          "top_countries"
        ],
        "additionalProperties": false
      },
      "SiteServer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of the server"
          },
          "name": {
            "type": "string",
            "description": "Display name of the server"
          },
          "description": {
            "type": "string",
            "description": "Description of the server"
          },
          "images": {
            "type": "object",
            "properties": {
              "logo": {
                "type": "string",
                "format": "uri",
                "description": "URL to the server's logo"
              },
              "banner": {
                "type": "string",
                "format": "uri",
                "description": "URL to the server's banner"
              },
              "background": {
                "type": "string",
                "format": "uri",
                "description": "URL to the server's background"
              },
              "wordmark": {
                "type": "string",
                "format": "uri",
                "description": "URL to the server's wordmark"
              }
            },
            "description": "Images of the server"
          },
          "primaryAddress": {
            "type": "string",
            "description": "Address that people will content to upon clicking"
          },
          "primaryColor": {
            "type": "string",
            "description": "Server's primary branding color"
          },
          "primaryMinecraftVersion": {
            "type": "string",
            "description": "Version that the server recommends you to join with"
          }
        },
        "required": [
          "id",
          "name",
          "images",
          "primaryAddress",
          "primaryMinecraftVersion"
        ]
      },
      "UserProfileRank": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "default": "NONE",
            "description": "The ID of the rank",
            "example": "OWNER"
          },
          "color": {
            "type": "string",
            "default": "#FFFFFF",
            "description": "The color of the rank",
            "example": "#FF0000"
          }
        },
        "required": [
          "id",
          "color"
        ],
        "additionalProperties": false
      },
      "UserProfile": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "The UUID of the user",
            "example": "3a870b6c-7b93-40e7-acb4-26f566360637"
          },
          "username": {
            "type": "string",
            "description": "The username of the user",
            "example": "ThatKawaiiSam"
          },
          "lunar_plus_color": {
            "type": "string",
            "nullable": true,
            "description": "The color of the user's Lunar+",
            "example": "#FF0000"
          },
          "rank": {
            "$ref": "#/components/schemas/UserProfileRank"
          },
          "active_cosmetics": {
            "type": "array",
            "items": {
              "type": "number",
              "description": "The ID of the cosmetic"
            },
            "description": "The active cosmetics of the user",
            "example": [
              1,
              2,
              3
            ]
          },
          "equipped_emotes": {
            "type": "array",
            "items": {
              "type": "number",
              "description": "The ID of the emote"
            },
            "description": "The equipped emotes of the user",
            "example": [
              1,
              2,
              3
            ]
          },
          "flip_shoulder_pet": {
            "type": "boolean",
            "description": "Whether the user has flipped their shoulder pet"
          }
        },
        "required": [
          "uuid",
          "username",
          "lunar_plus_color",
          "rank",
          "active_cosmetics",
          "equipped_emotes",
          "flip_shoulder_pet"
        ],
        "additionalProperties": false
      }
    },
    "parameters": {}
  },
  "paths": {
    "/apollo/updates": {
      "get": {
        "tags": [
          "apollo"
        ],
        "description": "Reports the latest version of Apollo.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string",
                      "description": "The latest version of Apollo for the given artifact"
                    },
                    "assets": {
                      "type": "object",
                      "properties": {
                        "bukkit": {
                          "type": "string",
                          "nullable": true,
                          "description": "URL to download the latest bukkit artifact"
                        },
                        "bungee": {
                          "type": "string",
                          "nullable": true,
                          "description": "URL to download the latest bungee artifact"
                        },
                        "velocity": {
                          "type": "string",
                          "nullable": true,
                          "description": "URL to download the latest velocity artifact"
                        },
                        "folia": {
                          "type": "string",
                          "nullable": true,
                          "description": "URL to download the latest folia artifact"
                        },
                        "sponge": {
                          "type": "string",
                          "nullable": true,
                          "description": "URL to download the latest sponge artifact"
                        }
                      },
                      "required": [
                        "bukkit",
                        "bungee",
                        "velocity",
                        "folia",
                        "sponge"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "version",
                    "assets"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/deploy/game": {
      "post": {
        "tags": [
          "deploy"
        ],
        "description": "Deploys a new game release",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "branch": {
                    "type": "string",
                    "description": "Git branch for this publish",
                    "example": "beta"
                  },
                  "commitHash": {
                    "type": "string",
                    "description": "Full Git commit hash for this publish",
                    "example": "1829687e95c6b6429d36bbef32a358fcd9bec7aa"
                  },
                  "mainClass": {
                    "type": "string",
                    "description": "Java main class to invoke when launching",
                    "example": "com.lunarclient.Main"
                  },
                  "ui": {
                    "type": "object",
                    "properties": {
                      "branch": {
                        "type": "string",
                        "description": "Git branch for UI release"
                      },
                      "commitHash": {
                        "type": "string",
                        "description": "Git commit hash for UI release"
                      },
                      "latest": {
                        "type": "boolean",
                        "description": "If this is should use the latest UI release"
                      }
                    },
                    "required": [
                      "branch"
                    ],
                    "description": "UI release to ship with this publish"
                  },
                  "versions": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "ID of this version",
                          "example": "1.7"
                        },
                        "jres": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "download_url": {
                                "type": "string",
                                "format": "uri",
                                "description": "URL to download this JRE"
                              },
                              "fallback_download_url": {
                                "type": "string",
                                "format": "uri",
                                "description": "Fallback URL to download this JRE, if the normal URL fails"
                              },
                              "extra_arguments": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Extra argument to prepend"
                                },
                                "description": "Any extra arguments to prepend when invoking JRE"
                              },
                              "folder_checksum": {
                                "type": "string",
                                "description": "Checksum, according to node library, of this JRE when extracted"
                              },
                              "download_extension": {
                                "type": "string",
                                "enum": [
                                  "zip",
                                  "tar.gz"
                                ],
                                "description": "Extension (and compression format) of this JRE",
                                "example": "zip"
                              },
                              "executable_path_in_archive": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Path component to Java executable"
                                },
                                "description": "The path the Java executable in the archive"
                              },
                              "javaw_download": {
                                "type": "string",
                                "format": "uri",
                                "description": "Optional URL to override javaw with after extracting"
                              },
                              "javaw_exe_checksum": {
                                "type": "string",
                                "description": "Checksum of file to override javaw with, if specified"
                              }
                            },
                            "required": [
                              "download_url",
                              "extra_arguments",
                              "folder_checksum",
                              "download_extension",
                              "executable_path_in_archive"
                            ],
                            "additionalProperties": false
                          }
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of this version"
                        },
                        "group": {
                          "type": "string",
                          "description": "Major version group of this version",
                          "example": "1.7"
                        },
                        "assets": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Mojang asset ID for this version",
                              "example": "1.7.10"
                            },
                            "url": {
                              "type": "string",
                              "format": "uri",
                              "description": "URL for Mojang asset index for this version",
                              "example": "https://launchermeta.mojang.com/v1/packages/1863782e33ce7b584fc45b037325a1964e095d3e/1.7.10.json"
                            },
                            "sha1": {
                              "type": "string",
                              "description": "SHA1 hash of Mojang asset index"
                            }
                          },
                          "required": [
                            "id",
                            "url",
                            "sha1"
                          ],
                          "additionalProperties": false
                        },
                        "default": {
                          "type": "boolean",
                          "description": "If this is the default version"
                        },
                        "modules": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of this module group",
                                "example": "lunar"
                              },
                              "default": {
                                "type": "boolean",
                                "description": "If this is the default module group for the version"
                              },
                              "modules": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Module ID"
                                },
                                "description": "Modules in this module group"
                              },
                              "private": {
                                "type": "boolean",
                                "description": "If this module group requires private access"
                              },
                              "baseModpack": {
                                "type": "object",
                                "properties": {
                                  "version": {
                                    "type": "string",
                                    "description": "A Semantic Versioning version."
                                  },
                                  "loader": {
                                    "type": "string",
                                    "enum": [
                                      "FABRIC",
                                      "FORGE",
                                      "NEOFORGE"
                                    ],
                                    "description": "Mod loader this module group uses"
                                  }
                                },
                                "required": [
                                  "version",
                                  "loader"
                                ],
                                "additionalProperties": false,
                                "description": "Base modpack to launch for this module group"
                              }
                            },
                            "required": [
                              "name",
                              "default",
                              "modules",
                              "private"
                            ],
                            "additionalProperties": false,
                            "description": "Module group"
                          },
                          "description": "Module groups available on this version"
                        },
                        "ordinal": {
                          "type": "number",
                          "description": "Sort order for this version"
                        },
                        "private": {
                          "type": "boolean",
                          "description": "If this version requires private access"
                        },
                        "snapshot": {
                          "type": "boolean",
                          "description": "If this is a Minecraft snapshot release"
                        },
                        "displayName": {
                          "type": "string",
                          "description": "Display name of this version"
                        }
                      },
                      "required": [
                        "id",
                        "jres",
                        "name",
                        "group",
                        "assets",
                        "default",
                        "modules",
                        "private",
                        "snapshot"
                      ],
                      "additionalProperties": false
                    },
                    "description": "Minecraft versions available"
                  },
                  "modules": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of this module",
                          "example": ":common"
                        },
                        "breaks": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "Name of incompatible module",
                            "example": ":optifine"
                          },
                          "description": "Other modules that must NOT be loaded with this module"
                        },
                        "requires": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "Name of required module",
                            "example": ":lunar"
                          },
                          "description": "Other modules that must be loaded with this module"
                        },
                        "versions": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "Minecraft version",
                            "example": "1.7.10"
                          },
                          "description": "Minecraft versions this module is compatible with"
                        }
                      },
                      "required": [
                        "name",
                        "breaks",
                        "requires",
                        "versions"
                      ],
                      "additionalProperties": false
                    },
                    "description": "Module groups available"
                  },
                  "artifacts": {
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name of this artifact on disk",
                              "example": "lunar.jar"
                            },
                            "size": {
                              "type": "integer",
                              "description": "Size of this artifact in bytes"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CLASS_PATH",
                                "EXTERNAL_FILE",
                                "NATIVES"
                              ],
                              "description": "Type of this artifact",
                              "example": "CLASS_PATH"
                            },
                            "module": {
                              "type": "string",
                              "description": "Module this artifact is a part of"
                            },
                            "versions": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "Minecraft version"
                              },
                              "description": "Minecraft versions this artifact is part of"
                            },
                            "os": {
                              "type": "string",
                              "description": "If present, this artifact is only downloaded on launches for this OS"
                            },
                            "arch": {
                              "type": "string",
                              "description": "If present, this artifact is only downloaded on launches for this architecture"
                            },
                            "path": {
                              "type": "string",
                              "description": "Name of this artifact on the CDN"
                            }
                          },
                          "required": [
                            "name",
                            "size",
                            "type",
                            "module",
                            "versions",
                            "path"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name of this artifact on disk",
                              "example": "lunar.jar"
                            },
                            "size": {
                              "type": "integer",
                              "description": "Size of this artifact in bytes"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CLASS_PATH",
                                "EXTERNAL_FILE",
                                "NATIVES"
                              ],
                              "description": "Type of this artifact",
                              "example": "CLASS_PATH"
                            },
                            "module": {
                              "type": "string",
                              "description": "Module this artifact is a part of"
                            },
                            "versions": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "Minecraft version"
                              },
                              "description": "Minecraft versions this artifact is part of"
                            },
                            "os": {
                              "type": "string",
                              "description": "If present, this artifact is only downloaded on launches for this OS"
                            },
                            "arch": {
                              "type": "string",
                              "description": "If present, this artifact is only downloaded on launches for this architecture"
                            },
                            "external": {
                              "type": "object",
                              "properties": {
                                "url": {
                                  "type": "string",
                                  "format": "uri",
                                  "description": "Path to download this artifact from an external CDN"
                                },
                                "sha1": {
                                  "type": "string",
                                  "description": "SHA1 hash of this artifact"
                                }
                              },
                              "required": [
                                "url",
                                "sha1"
                              ],
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "name",
                            "size",
                            "type",
                            "module",
                            "versions",
                            "external"
                          ],
                          "additionalProperties": false
                        }
                      ]
                    },
                    "description": "All artifacts available"
                  },
                  "recommendedLibraries": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "ID of this library",
                          "example": "FABRIC_LOADER"
                        },
                        "version": {
                          "type": "string",
                          "description": "Recommended version of this library",
                          "example": "0.15.6"
                        }
                      },
                      "required": [
                        "name",
                        "version"
                      ],
                      "additionalProperties": false
                    },
                    "description": "Recommended library versions"
                  },
                  "useCanary": {
                    "type": "boolean",
                    "description": "If this publish should use the canary system or directly publish"
                  }
                },
                "required": [
                  "branch",
                  "commitHash",
                  "mainClass",
                  "versions",
                  "modules",
                  "artifacts",
                  "recommendedLibraries",
                  "useCanary"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If this deploy was successful"
                    },
                    "message": {
                      "type": "string",
                      "description": "Explanation for success or failure."
                    }
                  },
                  "required": [
                    "success",
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If this deploy was successful"
                    },
                    "message": {
                      "type": "string",
                      "description": "Explanation for success or failure."
                    }
                  },
                  "required": [
                    "success",
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/deploy/licenses": {
      "post": {
        "tags": [
          "deploy"
        ],
        "description": "Deploys a new license release",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "licenses": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "file": {
                          "type": "string",
                          "description": "Name of this license"
                        },
                        "mtime": {
                          "type": "integer",
                          "description": "Last modification time of this license"
                        },
                        "sha1": {
                          "type": "string",
                          "description": "SHA1 hash of this license"
                        },
                        "size": {
                          "type": "integer",
                          "description": "Size, in bytes, of this license"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri",
                          "description": "URL to download this license"
                        }
                      },
                      "required": [
                        "file",
                        "mtime",
                        "sha1",
                        "size",
                        "url"
                      ],
                      "additionalProperties": false
                    },
                    "description": "Licenses for this publish"
                  }
                },
                "required": [
                  "licenses"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If this deploy was successful"
                    },
                    "message": {
                      "type": "string",
                      "description": "Explanation for success or failure."
                    }
                  },
                  "required": [
                    "success",
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/deploy/modpacks": {
      "post": {
        "tags": [
          "deploy"
        ],
        "description": "Deploys a new modpack release",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "modpacks": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "loader": {
                          "type": "string",
                          "enum": [
                            "FABRIC",
                            "FORGE",
                            "NEOFORGE"
                          ],
                          "description": "Mod loader this modpack supports"
                        },
                        "version": {
                          "type": "string",
                          "description": "A Semantic Versioning version."
                        },
                        "gameVersion": {
                          "type": "string",
                          "description": "Minecraft version this modpack supports"
                        },
                        "hash": {
                          "type": "string",
                          "description": "Unique hash for this version of the modpack"
                        },
                        "mrpackUrl": {
                          "type": "string",
                          "format": "uri",
                          "description": "URL to download the .mrpack for this modpack"
                        }
                      },
                      "required": [
                        "loader",
                        "version",
                        "gameVersion",
                        "hash",
                        "mrpackUrl"
                      ],
                      "additionalProperties": false
                    },
                    "description": "Modpacks for this publish"
                  }
                },
                "required": [
                  "modpacks"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If this deploy was successful"
                    },
                    "message": {
                      "type": "string",
                      "description": "Explanation for success or failure."
                    }
                  },
                  "required": [
                    "success",
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/deploy/textures": {
      "post": {
        "tags": [
          "deploy"
        ],
        "description": "Deploys a new textures release",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "branch": {
                    "type": "string",
                    "description": "Git branch for this publish",
                    "example": "beta"
                  },
                  "manual": {
                    "type": "boolean",
                    "description": "If this deploy was manually triggered",
                    "example": true
                  },
                  "gitCommit": {
                    "type": "string",
                    "description": "Full Git commit hash for this publish",
                    "example": "1829687e95c6b6429d36bbef32a358fcd9bec7aa"
                  },
                  "indexHash": {
                    "type": "string",
                    "description": "Hash of texture index file produced",
                    "example": "1829687e95c6b6429d36bbef32a358fcd9bec7aa"
                  },
                  "jitIndexHash": {
                    "type": "string",
                    "description": "Hash of JIT texture index file produced",
                    "example": "1829687e95c6b6429d36bbef32a358fcd9bec7aa"
                  }
                },
                "required": [
                  "branch",
                  "manual",
                  "gitCommit",
                  "indexHash",
                  "jitIndexHash"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If this deploy was successful"
                    },
                    "message": {
                      "type": "string",
                      "description": "Explanation for success or failure."
                    }
                  },
                  "required": [
                    "success",
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If this deploy was successful"
                    },
                    "message": {
                      "type": "string",
                      "description": "Explanation for success or failure."
                    }
                  },
                  "required": [
                    "success",
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/deploy/gamedata": {
      "post": {
        "tags": [
          "deploy"
        ],
        "description": "Deploys a new game data release",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "gamedata": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of this license"
                        },
                        "mtime": {
                          "type": "integer",
                          "description": "Last modification time of this license"
                        },
                        "sha1": {
                          "type": "string",
                          "description": "SHA1 hash of this license"
                        },
                        "size": {
                          "type": "integer",
                          "description": "Size, in bytes, of this license"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri",
                          "description": "URL to download this license"
                        }
                      },
                      "required": [
                        "name",
                        "mtime",
                        "sha1",
                        "size",
                        "url"
                      ],
                      "additionalProperties": false
                    },
                    "description": "Game Data for this publish"
                  }
                },
                "required": [
                  "gamedata"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If this deploy was successful"
                    },
                    "message": {
                      "type": "string",
                      "description": "Explanation for success or failure."
                    }
                  },
                  "required": [
                    "success",
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/deploy/ui": {
      "post": {
        "tags": [
          "deploy"
        ],
        "description": "Deploys a new UI release",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "branch": {
                    "type": "string",
                    "description": "Git branch for this publish",
                    "example": "beta"
                  },
                  "gitCommit": {
                    "type": "string",
                    "description": "Full Git commit hash for this publish",
                    "example": "1829687e95c6b6429d36bbef32a358fcd9bec7aa"
                  },
                  "indexSha1": {
                    "type": "string",
                    "description": "SHA1 Hash of index file produced",
                    "example": "1829687e95c6b6429d36bbef32a358fcd9bec7aa"
                  },
                  "sourceSha1": {
                    "type": "string",
                    "description": "SHA1 Hash of source zip produced",
                    "example": "1829687e95c6b6429d36bbef32a358fcd9bec7aa"
                  }
                },
                "required": [
                  "branch",
                  "gitCommit",
                  "indexSha1",
                  "sourceSha1"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If this deploy was successful"
                    },
                    "message": {
                      "type": "string",
                      "description": "Explanation for success or failure."
                    }
                  },
                  "required": [
                    "success",
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If this deploy was successful"
                    },
                    "message": {
                      "type": "string",
                      "description": "Explanation for success or failure."
                    }
                  },
                  "required": [
                    "success",
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/discord/trigger-update": {
      "post": {
        "tags": [
          "discord"
        ],
        "description": "Triggers a request to the Discord bots to update the user's information",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "discordId": {
                    "type": "string",
                    "description": "The Discord ID of the user we should update"
                  }
                },
                "required": [
                  "discordId"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Whether the update was successful"
                    }
                  },
                  "required": [
                    "success"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/discord/update-membership": {
      "post": {
        "tags": [
          "discord"
        ],
        "description": "Updates the membership information for a user in the Database",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "discordId": {
                    "type": "string",
                    "description": "The Discord ID of the user we should update"
                  },
                  "joinedAt": {
                    "type": "string",
                    "nullable": true,
                    "description": "The date the user joined the Discord, if they just joined"
                  },
                  "leftAt": {
                    "type": "string",
                    "nullable": true,
                    "description": "The date the user left the Discord, if they just left"
                  }
                },
                "required": [
                  "discordId",
                  "joinedAt",
                  "leftAt"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Whether the update was successful"
                    }
                  },
                  "required": [
                    "success"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/discord/potw/get-cosmetic-pool": {
      "get": {
        "tags": [
          "discord"
        ],
        "description": "Gets the pick of the week cosmetics. Changes every request",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Success status"
                    },
                    "cosmetics": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "cosmeticId": {
                            "type": "integer",
                            "description": "In-game cosmetic ID"
                          },
                          "name": {
                            "type": "string",
                            "description": "In-game cosmetic name"
                          }
                        },
                        "required": [
                          "cosmeticId",
                          "name"
                        ],
                        "additionalProperties": false,
                        "description": "Pick of the week cosmetic object"
                      },
                      "minItems": 0,
                      "description": "List of cosmetics"
                    }
                  },
                  "required": [
                    "success",
                    "cosmetics"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Success status"
                    }
                  },
                  "required": [
                    "success"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/discord/verification": {
      "post": {
        "tags": [
          "discord"
        ],
        "description": "Links a Discord profile",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "The user's JWT token"
            },
            "required": true,
            "name": "Authorization",
            "in": "header"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "discord_token": {
                    "type": "string",
                    "description": "The Discord token of the user we should link"
                  }
                },
                "required": [
                  "discord_token"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the update was successful"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "uuid": {
                          "type": "string",
                          "format": "uuid",
                          "description": "Minecraft UUID of the linked player"
                        },
                        "username": {
                          "type": "string",
                          "description": "Minecraft username of the linked player"
                        }
                      },
                      "required": [
                        "uuid",
                        "username"
                      ],
                      "additionalProperties": false,
                      "description": "Info about the Minecraft player"
                    },
                    "discord": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Discord user's unique ID"
                        },
                        "tag": {
                          "type": "string",
                          "description": "Discord user's username"
                        },
                        "avatar": {
                          "type": "string",
                          "description": "Discord user's avatar"
                        }
                      },
                      "required": [
                        "id",
                        "tag",
                        "avatar"
                      ],
                      "additionalProperties": false,
                      "description": "Info about the Discord user"
                    }
                  },
                  "required": [
                    "success",
                    "user",
                    "discord"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Message describing the error"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Message describing the error"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Message describing the error"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/game/crashReport": {
      "post": {
        "tags": [
          "game"
        ],
        "description": "Legacy game crash report endpoint",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/game/logs": {
      "post": {
        "tags": [
          "game"
        ],
        "description": "Legacy game logs endpoint",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/game/metadata": {
      "get": {
        "tags": [
          "game"
        ],
        "description": "Loads various metadata used by the game.",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "default": "master",
              "description": "Branch of the game the user is running on"
            },
            "required": false,
            "name": "branch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "blogPosts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "Title of the blog post (primarily for Analytics)"
                          },
                          "image": {
                            "type": "string",
                            "format": "uri",
                            "description": "Image to display with the blog post"
                          },
                          "link": {
                            "type": "string",
                            "format": "uri",
                            "description": "URL that is opened upon clicking"
                          }
                        },
                        "required": [
                          "title",
                          "image",
                          "link"
                        ],
                        "additionalProperties": false
                      },
                      "description": "Blog posts that should be show on the home screen"
                    },
                    "alert": {
                      "type": "object",
                      "properties": {
                        "colors": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "default": {
                                "type": "string",
                                "description": "Color of this alert when not hovering"
                              },
                              "hover": {
                                "type": "string",
                                "description": "Color of this alert when hovered"
                              }
                            },
                            "required": [
                              "default",
                              "hover"
                            ],
                            "additionalProperties": false
                          }
                        },
                        "active": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "ID of the alert"
                            },
                            "name": {
                              "type": "string",
                              "description": "Name of the alert"
                            },
                            "text": {
                              "type": "string",
                              "description": "Contents of the alert"
                            },
                            "color": {
                              "type": "string",
                              "description": "Color variant of the alert"
                            },
                            "icon": {
                              "type": "string",
                              "description": "Icon for this alert"
                            },
                            "dismissable": {
                              "type": "boolean",
                              "description": "If this alert can be dismissed"
                            },
                            "link": {
                              "type": "string",
                              "format": "uri",
                              "description": "Whether the alert is clickable and should open up a link"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "text",
                            "color",
                            "icon",
                            "dismissable"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "colors"
                      ],
                      "additionalProperties": false
                    },
                    "modSettings": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "enabled": {
                            "type": "boolean",
                            "description": "If this mod should be force enabled/disabled"
                          },
                          "properties": {
                            "type": "object",
                            "additionalProperties": {
                              "nullable": true
                            },
                            "description": "Any settings inside this mod to override"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "clientSettings": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "additionalProperties": {
                          "nullable": true
                        },
                        "description": "Any settings inside this category to override"
                      }
                    },
                    "pinnedServers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the pinned server in the multiplayer list"
                          },
                          "ip": {
                            "type": "string",
                            "description": "IP of the pinned server in the multiplayer list"
                          },
                          "expirationDate": {
                            "type": "integer",
                            "description": "Unix timestamp to automatically remove this pin at"
                          },
                          "versions": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "description": "Minecraft version"
                            },
                            "description": "Minecraft versions that this server is pinned on"
                          },
                          "removable": {
                            "type": "boolean",
                            "description": "If this pinned server can be deleted by the user"
                          }
                        },
                        "required": [
                          "name",
                          "ip",
                          "expirationDate",
                          "versions",
                          "removable"
                        ],
                        "additionalProperties": false
                      },
                      "description": "Pinned servers on the multiplayer list"
                    },
                    "starServers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "pattern": {
                            "type": "string",
                            "description": "Regex to match server IPs in the multiplayer list"
                          },
                          "resource": {
                            "type": "string",
                            "nullable": true,
                            "description": "Custom texture resource to render"
                          }
                        },
                        "required": [
                          "pattern"
                        ],
                        "additionalProperties": false
                      },
                      "description": "Servers with a star on the multiplayer list"
                    },
                    "featureFlag": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/FeatureFlag"
                      },
                      "description": "Active feature flags"
                    },
                    "serverIntegration": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ip": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "description": "Server IP"
                            },
                            "description": "Server IPs to match"
                          },
                          "brand": {
                            "type": "string",
                            "description": "Server brand packet to match"
                          },
                          "modSettings": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "enabled": {
                                  "type": "boolean",
                                  "description": "If this mod should be force enabled/disabled"
                                },
                                "properties": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "nullable": true
                                  },
                                  "description": "Any settings inside this mod to override"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "clientSettings": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "additionalProperties": {
                                "nullable": true
                              },
                              "description": "Any settings inside this category to override"
                            }
                          }
                        },
                        "required": [
                          "ip"
                        ],
                        "additionalProperties": false
                      },
                      "description": "Server-specific mod/settings overrides"
                    },
                    "store": {
                      "type": "object",
                      "properties": {},
                      "additionalProperties": false,
                      "description": "Dummy data for store"
                    },
                    "sentryFilteredExceptions": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SentryFilter"
                      },
                      "description": "Exceptions to filter before sending to Sentry"
                    },
                    "langOverride": {
                      "type": "object",
                      "properties": {},
                      "additionalProperties": false,
                      "description": "Dummy data for language overrides"
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "wrapped": {
                          "type": "string",
                          "format": "uri",
                          "description": "Custom URL for Wrapped button"
                        },
                        "store": {
                          "type": "string",
                          "format": "uri",
                          "description": "Custom URL for Store button"
                        },
                        "youtooz": {
                          "type": "string",
                          "format": "uri",
                          "description": "Custom URL for Youtooz button"
                        },
                        "trailer": {
                          "type": "string",
                          "format": "uri",
                          "description": "Custom URL for Trailer button"
                        }
                      },
                      "required": [
                        "wrapped",
                        "store",
                        "youtooz",
                        "trailer"
                      ],
                      "additionalProperties": false,
                      "description": "Links to override in-game"
                    }
                  },
                  "required": [
                    "blogPosts",
                    "alert",
                    "modSettings",
                    "clientSettings",
                    "pinnedServers",
                    "starServers",
                    "featureFlag",
                    "serverIntegration",
                    "store",
                    "sentryFilteredExceptions",
                    "langOverride",
                    "links"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/game/store": {
      "get": {
        "tags": [
          "game"
        ],
        "description": "Endpoint to retrieve store packages to display in the in-game store",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "storeCosmetics": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "cosmeticId": {
                            "type": "integer",
                            "description": "In-game cosmetic ID"
                          },
                          "tebexPackageId": {
                            "type": "integer",
                            "description": "Tebex package ID"
                          },
                          "price": {
                            "type": "number",
                            "description": "Base price in USD"
                          }
                        },
                        "required": [
                          "cosmeticId",
                          "tebexPackageId",
                          "price"
                        ],
                        "additionalProperties": false,
                        "description": "Store cosmetic object"
                      },
                      "description": "Store cosmetic packages"
                    },
                    "storeEmotes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "emoteId": {
                            "type": "integer",
                            "description": "In-game emote ID"
                          },
                          "tebexPackageId": {
                            "type": "integer",
                            "description": "Tebex package ID"
                          },
                          "price": {
                            "type": "number",
                            "description": "Base price in USD"
                          }
                        },
                        "required": [
                          "emoteId",
                          "tebexPackageId",
                          "price"
                        ],
                        "additionalProperties": false,
                        "description": "Store emote object"
                      },
                      "description": "Store emote packages"
                    }
                  },
                  "required": [
                    "storeCosmetics",
                    "storeEmotes"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/game/screenshot/view": {
      "get": {
        "tags": [
          "game",
          "pics"
        ],
        "description": "Game screenshot view",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "Screenshot ID to view"
            },
            "required": true,
            "name": "id",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "The user's JWT token"
            },
            "required": false,
            "name": "Authorization",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "Screenshot title"
                    },
                    "imageUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "Image URL to display"
                    },
                    "uploader": {
                      "type": "object",
                      "properties": {
                        "uuid": {
                          "type": "string",
                          "format": "uuid",
                          "description": "Minecraft UUID of the uploader"
                        },
                        "username": {
                          "type": "string",
                          "description": "Minecraft username of the uploader"
                        },
                        "logoColor": {
                          "type": "string",
                          "minLength": 7,
                          "maxLength": 7,
                          "description": "Hex color of the uploader's rank"
                        },
                        "lunarPlusColor": {
                          "type": "string",
                          "nullable": true,
                          "minLength": 7,
                          "maxLength": 7,
                          "description": "Hex color of the uploader's Lunar+ plus"
                        }
                      },
                      "required": [
                        "uuid",
                        "username",
                        "logoColor",
                        "lunarPlusColor"
                      ],
                      "additionalProperties": false,
                      "description": "Minecraft player who uploaded the screenshot"
                    },
                    "uploadedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time this screenshot was uploaded"
                    },
                    "privacy": {
                      "type": "string",
                      "enum": [
                        "unlisted",
                        "public",
                        "private"
                      ],
                      "description": "Privacy setting of the screenshot",
                      "example": "unlisted"
                    }
                  },
                  "required": [
                    "title",
                    "imageUrl",
                    "uploader",
                    "uploadedAt",
                    "privacy"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code",
                      "example": "NOT_AUTHORIZED"
                    }
                  },
                  "required": [
                    "code"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code",
                      "example": "UNKNOWN_ID"
                    }
                  },
                  "required": [
                    "code"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "410": {
            "description": "Screenshot has been deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code",
                      "example": "SCREENSHOT_DELETED"
                    }
                  },
                  "required": [
                    "code"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/game/screenshot/upload": {
      "post": {
        "tags": [
          "game"
        ],
        "description": "Game screenshot upload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "The user's JWT token"
            },
            "required": true,
            "name": "Authorization",
            "in": "header"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "imageBase64": {
                    "type": "string",
                    "description": "Image contents, Base64-encoded"
                  },
                  "localId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The locally generated ID of the screenshot"
                  },
                  "title": {
                    "type": "string",
                    "description": "The title of the screenshot"
                  },
                  "privacy": {
                    "type": "string",
                    "enum": [
                      "unlisted",
                      "public",
                      "private"
                    ],
                    "description": "Privacy setting for the screenshot",
                    "example": "unlisted"
                  }
                },
                "required": [
                  "imageBase64"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "link": {
                      "type": "string",
                      "format": "uri",
                      "description": "Link to view the image in a browser"
                    }
                  },
                  "required": [
                    "link"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code"
                    }
                  },
                  "required": [
                    "code"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/store/basket/{basketIdent}/package/remove/{packageId}": {
      "post": {
        "tags": [
          "store"
        ],
        "description": "Remove a package from the current basket",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "Basket ID"
            },
            "required": true,
            "description": "Basket ID",
            "name": "basketIdent",
            "in": "path"
          },
          {
            "schema": {
              "type": "integer",
              "nullable": true,
              "description": "ID of the package to remove from the basket"
            },
            "required": false,
            "description": "ID of the package to remove from the basket",
            "name": "packageId",
            "in": "path"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "single",
                      "subscription"
                    ],
                    "description": "Type of the package to add"
                  },
                  "gift_target_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "If provided, the gift for this user will be removed from the basket"
                  }
                },
                "required": [
                  "type"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Whether the request was successful"
                    },
                    "basket": {
                      "$ref": "#/components/schemas/StoreBasket"
                    }
                  },
                  "required": [
                    "success",
                    "basket"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Whether the request was successful"
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message describing the failure"
                    },
                    "error_code": {
                      "type": "string",
                      "description": "Error code for the failure"
                    }
                  },
                  "required": [
                    "success",
                    "error",
                    "error_code"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Whether the request was successful"
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message describing the failure"
                    },
                    "error_code": {
                      "type": "string",
                      "description": "Error code for the failure"
                    }
                  },
                  "required": [
                    "success",
                    "error",
                    "error_code"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/store/basket/{basketIdent}/package/add/{packageId}": {
      "post": {
        "tags": [
          "store"
        ],
        "description": "Add a package to the current basket",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "Basket ID"
            },
            "required": true,
            "description": "Basket ID",
            "name": "basketIdent",
            "in": "path"
          },
          {
            "schema": {
              "type": "integer",
              "nullable": true,
              "description": "ID of the package to add to the basket"
            },
            "required": false,
            "description": "ID of the package to add to the basket",
            "name": "packageId",
            "in": "path"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "quantity": {
                    "type": "integer",
                    "minimum": 1,
                    "description": "Quantity of the package to add"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "single",
                      "subscription"
                    ],
                    "description": "Type of the package to add"
                  },
                  "addedVia": {
                    "type": "string",
                    "description": "How the package was added, we use this for analytics"
                  }
                },
                "required": [
                  "quantity",
                  "type",
                  "addedVia"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Whether the request was successful"
                    },
                    "basket": {
                      "$ref": "#/components/schemas/StoreBasket"
                    }
                  },
                  "required": [
                    "success",
                    "basket"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Whether the request was successful"
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message describing the failure"
                    },
                    "error_code": {
                      "type": "string",
                      "description": "Error code for the failure"
                    }
                  },
                  "required": [
                    "success",
                    "error",
                    "error_code"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Whether the request was successful"
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message describing the failure"
                    },
                    "error_code": {
                      "type": "string",
                      "description": "Error code for the failure"
                    }
                  },
                  "required": [
                    "success",
                    "error",
                    "error_code"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/store/basket/{basketIdent}/package/gift/{packageId}": {
      "post": {
        "tags": [
          "store"
        ],
        "description": "Add a package to the current basket",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "Basket ID"
            },
            "required": true,
            "description": "Basket ID",
            "name": "basketIdent",
            "in": "path"
          },
          {
            "schema": {
              "type": "integer",
              "nullable": true,
              "description": "ID of the package to add to the basket"
            },
            "required": false,
            "description": "ID of the package to add to the basket",
            "name": "packageId",
            "in": "path"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "targetUsername": {
                    "type": "string",
                    "description": "Username of the user to gift the package to"
                  },
                  "message": {
                    "type": "string",
                    "nullable": true,
                    "maxLength": 512,
                    "description": "Message for the gift recipient"
                  },
                  "anonymous": {
                    "type": "boolean",
                    "description": "If true, the gift will be anonymous"
                  },
                  "quantity": {
                    "type": "integer",
                    "minimum": 1,
                    "description": "Quantity of the package to add"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "single",
                      "subscription"
                    ],
                    "description": "Type of the package to add"
                  },
                  "addedVia": {
                    "type": "string",
                    "description": "How the package was added, we use this for analytics"
                  }
                },
                "required": [
                  "targetUsername",
                  "message",
                  "anonymous",
                  "quantity",
                  "type",
                  "addedVia"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Whether the request was successful"
                    },
                    "basket": {
                      "$ref": "#/components/schemas/StoreBasket"
                    }
                  },
                  "required": [
                    "success",
                    "basket"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Whether the request was successful"
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message describing the failure"
                    },
                    "error_code": {
                      "type": "string",
                      "description": "Error code for the failure"
                    }
                  },
                  "required": [
                    "success",
                    "error",
                    "error_code"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Whether the request was successful"
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message describing the failure"
                    },
                    "error_code": {
                      "type": "string",
                      "description": "Error code for the failure"
                    }
                  },
                  "required": [
                    "success",
                    "error",
                    "error_code"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Whether the request was successful"
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message describing the failure"
                    },
                    "error_code": {
                      "type": "string",
                      "description": "Error code for the failure"
                    }
                  },
                  "required": [
                    "success",
                    "error",
                    "error_code"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/store/basket/create": {
      "post": {
        "tags": [
          "store"
        ],
        "description": "Create a new basket",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "The user's JWT token"
            },
            "required": false,
            "name": "Authorization",
            "in": "header"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "from_basket": {
                    "type": "string",
                    "description": "A basket identifier to copy from, used for authenticating existing baskets"
                  },
                  "username": {
                    "type": "string",
                    "description": "Username of the user creating the basket"
                  },
                  "ip": {
                    "type": "string",
                    "description": "IP address of the user creating the basket"
                  },
                  "utm_params": {
                    "type": "object",
                    "properties": {
                      "utm_source": {
                        "type": "string",
                        "nullable": true,
                        "description": "UTM source"
                      },
                      "utm_medium": {
                        "type": "string",
                        "nullable": true,
                        "description": "UTM medium"
                      },
                      "utm_campaign": {
                        "type": "string",
                        "nullable": true,
                        "description": "UTM campaign"
                      },
                      "utm_content": {
                        "type": "string",
                        "nullable": true,
                        "description": "UTM content"
                      },
                      "utm_term": {
                        "type": "string",
                        "nullable": true,
                        "description": "UTM term"
                      }
                    },
                    "required": [
                      "utm_source",
                      "utm_medium",
                      "utm_campaign",
                      "utm_content",
                      "utm_term"
                    ],
                    "description": "UTM parameters for tracking purposes"
                  }
                },
                "required": [
                  "ip",
                  "utm_params"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Whether the request was successful"
                    },
                    "basket": {
                      "$ref": "#/components/schemas/StoreBasket"
                    }
                  },
                  "required": [
                    "success",
                    "basket"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Whether the request was successful"
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message describing the failure"
                    },
                    "error_code": {
                      "type": "string",
                      "description": "Error code for the failure"
                    }
                  },
                  "required": [
                    "success",
                    "error",
                    "error_code"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Whether the request was successful"
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message describing the failure"
                    },
                    "error_code": {
                      "type": "string",
                      "description": "Error code for the failure"
                    }
                  },
                  "required": [
                    "success",
                    "error",
                    "error_code"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/store/basket/{basketIdent}/info": {
      "get": {
        "tags": [
          "store"
        ],
        "description": "Get the current basket info",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "Basket identifier"
            },
            "required": true,
            "description": "Basket identifier",
            "name": "basketIdent",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Whether the request was successful"
                    },
                    "basket": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/StoreBasket"
                        },
                        {
                          "description": "The basket"
                        }
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "basket"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Whether the request was successful"
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message describing the failure"
                    },
                    "error_code": {
                      "type": "string",
                      "description": "Error code for the failure"
                    }
                  },
                  "required": [
                    "success",
                    "error",
                    "error_code"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/store/basket/{basketIdent}/omnibox/add": {
      "post": {
        "tags": [
          "store"
        ],
        "description": "Adds a coupon, gift card or creator code from the basket",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "Basket identifier"
            },
            "required": true,
            "description": "Basket identifier",
            "name": "basketIdent",
            "in": "path"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "description": "The code to add to the basket"
                  }
                },
                "required": [
                  "code"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Whether the request was successful"
                    },
                    "basket": {
                      "$ref": "#/components/schemas/StoreBasket"
                    }
                  },
                  "required": [
                    "success",
                    "basket"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Whether the request was successful"
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message describing the failure"
                    },
                    "error_code": {
                      "type": "string",
                      "description": "Error code for the failure"
                    }
                  },
                  "required": [
                    "success",
                    "error",
                    "error_code"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Whether the request was successful"
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message describing the failure"
                    },
                    "error_code": {
                      "type": "string",
                      "description": "Error code for the failure"
                    }
                  },
                  "required": [
                    "success",
                    "error",
                    "error_code"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/store/basket/{basketIdent}/omnibox/remove/{omniMethod}": {
      "delete": {
        "tags": [
          "store"
        ],
        "description": "Removes a coupon, gift card or creator code from the basket",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "Basket identifier"
            },
            "required": true,
            "description": "Basket identifier",
            "name": "basketIdent",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "coupon",
                "gift-card",
                "creator"
              ],
              "description": "The omnibox method to remove"
            },
            "required": true,
            "description": "The omnibox method to remove",
            "name": "omniMethod",
            "in": "path"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "description": "The code to remove from the basket"
                  }
                },
                "required": [
                  "code"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Whether the request was successful"
                    },
                    "basket": {
                      "$ref": "#/components/schemas/StoreBasket"
                    }
                  },
                  "required": [
                    "success",
                    "basket"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Whether the request was successful"
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message describing the failure"
                    },
                    "error_code": {
                      "type": "string",
                      "description": "Error code for the failure"
                    }
                  },
                  "required": [
                    "success",
                    "error",
                    "error_code"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Whether the request was successful"
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message describing the failure"
                    },
                    "error_code": {
                      "type": "string",
                      "description": "Error code for the failure"
                    }
                  },
                  "required": [
                    "success",
                    "error",
                    "error_code"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/launcher/launch": {
      "post": {
        "tags": [
          "launcher"
        ],
        "description": "Launch into the game",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "hwid": {
                    "type": "string",
                    "description": "HWID of the requester",
                    "deprecated": true
                  },
                  "hwid_private": {
                    "type": "string",
                    "description": "HWID Private of the requester",
                    "deprecated": true
                  },
                  "installation_id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Installation ID of the requester",
                    "example": "00000000-0000-0000-0000-000000000000"
                  },
                  "os": {
                    "type": "string",
                    "description": "Operating system of the requester",
                    "example": "win32"
                  },
                  "os_release": {
                    "type": "string",
                    "description": "Operating system release of the requester",
                    "example": "10.0.19045"
                  },
                  "arch": {
                    "type": "string",
                    "description": "CPU Architecture of the requester",
                    "example": "x64"
                  },
                  "launcher_version": {
                    "type": "string",
                    "description": "Current launcher version of the requester"
                  },
                  "canary_preference": {
                    "type": "string",
                    "enum": [
                      "OPT_IN",
                      "OPT_OUT",
                      "NEUTRAL"
                    ],
                    "description": "The canary preference of the user"
                  },
                  "launch_type": {
                    "type": "string",
                    "default": "OFFLINE",
                    "description": "The type of launch, always set to OFFLINE"
                  },
                  "branch": {
                    "type": "string",
                    "description": "The branch that is attempting to be launched, will reset to master if the user does not have access",
                    "example": "master"
                  },
                  "version": {
                    "type": "string",
                    "description": "The full Minecraft version to launch"
                  },
                  "args": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "ds",
                        "lui",
                        "dui",
                        "cef",
                        "dau"
                      ],
                      "description": "Launch Flag"
                    },
                    "default": [],
                    "description": "Flags attempting to be used in the launch sequence"
                  },
                  "module": {
                    "type": "string",
                    "default": "lunar",
                    "description": "The module attempting to be launched with the current version"
                  },
                  "profile": {
                    "$ref": "#/components/schemas/LauncherProfile"
                  }
                },
                "required": [
                  "installation_id",
                  "os",
                  "os_release",
                  "arch",
                  "branch",
                  "version"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Whether the request to launch was successful or not"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Code associated with error"
                        },
                        "short": {
                          "type": "string",
                          "description": "Short version of error message"
                        },
                        "message": {
                          "type": "string",
                          "description": "Specific message associated with error"
                        }
                      },
                      "required": [
                        "code",
                        "short",
                        "message"
                      ],
                      "additionalProperties": false,
                      "description": "If the launch request was unsuccessful, information will be populated regarding it"
                    },
                    "updateAssets": {
                      "type": "boolean",
                      "description": "Whether the assets should update"
                    },
                    "launchTypeData": {
                      "type": "object",
                      "properties": {
                        "mainClass": {
                          "type": "string",
                          "description": "Main class of the game to launch"
                        },
                        "artifacts": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/LaunchTypeArtifact"
                          },
                          "description": "Artifacts associated with launch"
                        }
                      },
                      "required": [
                        "mainClass",
                        "artifacts"
                      ],
                      "additionalProperties": false,
                      "description": "Information about the specific launch configuration"
                    },
                    "licenses": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LauncherLaunchLicense"
                      },
                      "description": "Licenses that are downloaded with the specific configuration"
                    },
                    "textures": {
                      "type": "object",
                      "properties": {
                        "indexUrl": {
                          "type": "string",
                          "format": "uri",
                          "description": "URL of the textures index"
                        },
                        "indexSha1": {
                          "type": "string",
                          "description": "Hash of the textures index"
                        },
                        "jitIndexUrl": {
                          "type": "string",
                          "nullable": true,
                          "format": "uri",
                          "description": "URL of the just-in-time textures index"
                        },
                        "jitIndexSha1": {
                          "type": "string",
                          "nullable": true,
                          "description": "Hash of the just-in-time textures index"
                        },
                        "baseUrl": {
                          "type": "string",
                          "format": "uri",
                          "description": "Root URL (CDN) to fetch the prepend"
                        }
                      },
                      "required": [
                        "indexUrl",
                        "indexSha1",
                        "jitIndexUrl",
                        "jitIndexSha1",
                        "baseUrl"
                      ],
                      "additionalProperties": false,
                      "description": "Textures location for specific launch configuration"
                    },
                    "jre": {
                      "type": "object",
                      "properties": {
                        "download": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string",
                              "format": "uri",
                              "description": "URL location of the JRE"
                            },
                            "fallbackUrl": {
                              "type": "string",
                              "format": "uri",
                              "description": "Fallback URL location of the JRE, if the normal URL fails"
                            },
                            "extension": {
                              "type": "string",
                              "description": "\"Extension\" of the JRE"
                            }
                          },
                          "required": [
                            "url",
                            "extension"
                          ],
                          "additionalProperties": false,
                          "description": "Download information of the JRE"
                        },
                        "executablePathInArchive": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "Path to exe within zip"
                          },
                          "description": "List of paths to exe in zip"
                        },
                        "extraArguments": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "Additional argument passed to launch sequence"
                          },
                          "description": "Extra arguments that need to be passed to launch sequence"
                        },
                        "javawDownload": {
                          "type": "string",
                          "nullable": true,
                          "format": "uri",
                          "description": "URL to additional javaw override"
                        },
                        "javawExeChecksum": {
                          "type": "string",
                          "nullable": true,
                          "description": "Checksum of additional javaw override"
                        },
                        "folderChecksum": {
                          "type": "string",
                          "description": "Checksum of JRE folder"
                        }
                      },
                      "required": [
                        "download",
                        "executablePathInArchive",
                        "extraArguments",
                        "folderChecksum"
                      ],
                      "additionalProperties": false,
                      "description": "JRE information"
                    },
                    "ui": {
                      "type": "object",
                      "nullable": true,
                      "properties": {
                        "sourceUrl": {
                          "type": "string",
                          "format": "uri",
                          "description": "URL of the WebOSR source"
                        },
                        "sourceSha1": {
                          "type": "string",
                          "description": "Hash of the WebOSR source"
                        },
                        "assets": {
                          "type": "object",
                          "properties": {
                            "baseUrl": {
                              "type": "string",
                              "format": "uri",
                              "description": "Root URL (CDN) to fetch the prepend"
                            },
                            "indexUrl": {
                              "type": "string",
                              "format": "uri",
                              "description": "URL of the UI asset index"
                            },
                            "indexSha1": {
                              "type": "string",
                              "description": "Hash of the UI asset index"
                            }
                          },
                          "required": [
                            "baseUrl",
                            "indexUrl",
                            "indexSha1"
                          ],
                          "additionalProperties": false,
                          "description": "WebOSR assets"
                        }
                      },
                      "required": [
                        "sourceUrl",
                        "sourceSha1",
                        "assets"
                      ],
                      "additionalProperties": false,
                      "description": "WebOSR UI related information"
                    },
                    "canaryToken": {
                      "type": "string",
                      "description": "Canary token to pass back in analytics"
                    },
                    "baseModpack": {
                      "type": "object",
                      "properties": {
                        "version": {
                          "type": "string",
                          "description": "Version of the base modpack"
                        },
                        "hash": {
                          "type": "string",
                          "description": "Unique hash for base modpack"
                        },
                        "mrpackUrl": {
                          "type": "string",
                          "description": "URL for base modpack's .mrpack download"
                        },
                        "publishedAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Time the base modpack was published"
                        }
                      },
                      "required": [
                        "version",
                        "hash",
                        "mrpackUrl",
                        "publishedAt"
                      ],
                      "additionalProperties": false,
                      "description": "Launch Base Modpack"
                    }
                  },
                  "required": [
                    "success"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/launcher/launch/vanilla": {
      "post": {
        "tags": [
          "launcher"
        ],
        "description": "Launch into a vanilla version.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "hwid": {
                    "type": "string",
                    "description": "HWID of the requester",
                    "deprecated": true
                  },
                  "hwid_private": {
                    "type": "string",
                    "description": "HWID Private of the requester",
                    "deprecated": true
                  },
                  "installation_id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Installation ID of the requester",
                    "example": "00000000-0000-0000-0000-000000000000"
                  },
                  "os": {
                    "type": "string",
                    "description": "Operating system of the requester",
                    "example": "win32"
                  },
                  "os_release": {
                    "type": "string",
                    "description": "Operating system release of the requester",
                    "example": "10.0.19045"
                  },
                  "arch": {
                    "type": "string",
                    "description": "CPU Architecture of the requester",
                    "example": "x64"
                  },
                  "launcher_version": {
                    "type": "string",
                    "description": "Current launcher version of the requester"
                  },
                  "launch_type": {
                    "type": "string",
                    "default": "OFFLINE",
                    "description": "The type of launch, always set to OFFLINE"
                  },
                  "version": {
                    "type": "string",
                    "description": "The full Minecraft version to launch"
                  },
                  "module": {
                    "type": "string",
                    "default": "vanilla",
                    "description": "The module attempting to be launched with the current version"
                  },
                  "profile": {
                    "$ref": "#/components/schemas/LauncherProfile"
                  },
                  "loaderVersion": {
                    "type": "string",
                    "description": "The fabric/forge loader version to launch with"
                  },
                  "loaders": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "Name of the loader"
                    },
                    "description": "The loaders to launch with"
                  },
                  "use_combined_data": {
                    "type": "boolean",
                    "description": "Whether to use combined launch data"
                  }
                },
                "required": [
                  "installation_id",
                  "os",
                  "os_release",
                  "arch",
                  "version"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Whether the request to launch was successful or not"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Code associated with error"
                        },
                        "short": {
                          "type": "string",
                          "description": "Short version of error message"
                        },
                        "message": {
                          "type": "string",
                          "description": "Specific message associated with error"
                        }
                      },
                      "required": [
                        "code",
                        "short",
                        "message"
                      ],
                      "additionalProperties": false,
                      "description": "If the launch request was unsuccessful, information will be populated regarding it"
                    },
                    "vanillaLaunchData": {
                      "type": "object",
                      "properties": {
                        "arguments": {
                          "type": "object",
                          "properties": {
                            "game": {
                              "type": "array",
                              "items": {
                                "anyOf": [
                                  {
                                    "type": "string",
                                    "description": "Flag or value to be passed to the game (ex. --assetsDir, ${assets_root})"
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "rules": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "action": {
                                              "type": "string",
                                              "description": "Action of the rule (is always 'allow')"
                                            },
                                            "features": {
                                              "type": "object",
                                              "additionalProperties": {
                                                "type": "boolean",
                                                "description": "Whether the feature is enabled or disabled"
                                              },
                                              "description": "Includes a set of features that can be checked"
                                            }
                                          },
                                          "required": [
                                            "action",
                                            "features"
                                          ],
                                          "description": "Games rules for the flag"
                                        },
                                        "description": "List of game rules"
                                      },
                                      "value": {
                                        "anyOf": [
                                          {
                                            "type": "string",
                                            "description": "Flag value for the rule"
                                          },
                                          {
                                            "type": "array",
                                            "items": {
                                              "type": "string",
                                              "description": "Flag value for the rule"
                                            },
                                            "description": "List of flag values for the rule"
                                          }
                                        ],
                                        "description": "Flag values for the rule"
                                      }
                                    },
                                    "required": [
                                      "rules",
                                      "value"
                                    ],
                                    "description": "A conditional argument"
                                  }
                                ],
                                "description": "Rules and flags to be passed to the game"
                              },
                              "description": "Arguments to be passed to the game"
                            },
                            "jvm": {
                              "type": "array",
                              "items": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "rules": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "action": {
                                              "type": "string",
                                              "description": "Action of the rule (can be 'allow' or 'disallow')"
                                            },
                                            "os": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "description": "Operating system name of the rule"
                                                },
                                                "arch": {
                                                  "type": "string",
                                                  "description": "OS architecture of the rule"
                                                }
                                              },
                                              "description": "OS and architecture of the rule"
                                            }
                                          },
                                          "required": [
                                            "action"
                                          ],
                                          "description": "JVM rule for the flag"
                                        },
                                        "description": "List of JVM rules"
                                      },
                                      "value": {
                                        "anyOf": [
                                          {
                                            "type": "string",
                                            "description": "Flag value for the rule"
                                          },
                                          {
                                            "type": "array",
                                            "items": {
                                              "type": "string",
                                              "description": "Flag value for the rule"
                                            },
                                            "description": "List of flag values for the rule"
                                          }
                                        ],
                                        "description": "Flag values for the rule"
                                      }
                                    },
                                    "required": [
                                      "rules",
                                      "value"
                                    ],
                                    "description": "Rules and values to be passed to the JVM"
                                  },
                                  {
                                    "type": "string",
                                    "description": "Flag or value to be passed to the jvm"
                                  }
                                ],
                                "description": "Rules and flags to be passed to the JVM"
                              },
                              "description": "Arguments to be passed to the JVM"
                            }
                          },
                          "required": [
                            "game",
                            "jvm"
                          ],
                          "description": "Arguments to be passed to the game and JVM"
                        },
                        "assetIndex": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "ID of the file"
                            },
                            "path": {
                              "type": "string",
                              "description": "Path that the file should be install to"
                            },
                            "sha1": {
                              "type": "string",
                              "description": "SHA1 of the file"
                            },
                            "size": {
                              "type": "number",
                              "description": "Size of the file"
                            },
                            "totalSize": {
                              "type": "number",
                              "description": "Total size of the file"
                            },
                            "url": {
                              "type": "string",
                              "description": "URL of the file"
                            }
                          },
                          "description": "Downloadable file information"
                        },
                        "assets": {
                          "type": "string",
                          "description": "Asset index id of the release"
                        },
                        "complianceLevel": {
                          "type": "number",
                          "description": "Its value is 1 for all recent versions of the game (1.16.4 and above) or 0 for all others. This tag tells the launcher (mojang) whether it should urge the user to be careful since this version is older and might not support the latest player safety features."
                        },
                        "downloads": {
                          "type": "object",
                          "properties": {
                            "client": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "ID of the file"
                                },
                                "path": {
                                  "type": "string",
                                  "description": "Path that the file should be install to"
                                },
                                "sha1": {
                                  "type": "string",
                                  "description": "SHA1 of the file"
                                },
                                "size": {
                                  "type": "number",
                                  "description": "Size of the file"
                                },
                                "totalSize": {
                                  "type": "number",
                                  "description": "Total size of the file"
                                },
                                "url": {
                                  "type": "string",
                                  "description": "URL of the file"
                                }
                              },
                              "description": "Downloadable file information"
                            },
                            "client_mappings": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "ID of the file"
                                },
                                "path": {
                                  "type": "string",
                                  "description": "Path that the file should be install to"
                                },
                                "sha1": {
                                  "type": "string",
                                  "description": "SHA1 of the file"
                                },
                                "size": {
                                  "type": "number",
                                  "description": "Size of the file"
                                },
                                "totalSize": {
                                  "type": "number",
                                  "description": "Total size of the file"
                                },
                                "url": {
                                  "type": "string",
                                  "description": "URL of the file"
                                }
                              },
                              "description": "Downloadable file information"
                            },
                            "server": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "ID of the file"
                                },
                                "path": {
                                  "type": "string",
                                  "description": "Path that the file should be install to"
                                },
                                "sha1": {
                                  "type": "string",
                                  "description": "SHA1 of the file"
                                },
                                "size": {
                                  "type": "number",
                                  "description": "Size of the file"
                                },
                                "totalSize": {
                                  "type": "number",
                                  "description": "Total size of the file"
                                },
                                "url": {
                                  "type": "string",
                                  "description": "URL of the file"
                                }
                              },
                              "description": "Downloadable file information"
                            },
                            "server_mappings": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "ID of the file"
                                },
                                "path": {
                                  "type": "string",
                                  "description": "Path that the file should be install to"
                                },
                                "sha1": {
                                  "type": "string",
                                  "description": "SHA1 of the file"
                                },
                                "size": {
                                  "type": "number",
                                  "description": "Size of the file"
                                },
                                "totalSize": {
                                  "type": "number",
                                  "description": "Total size of the file"
                                },
                                "url": {
                                  "type": "string",
                                  "description": "URL of the file"
                                }
                              },
                              "description": "Downloadable file information"
                            }
                          },
                          "required": [
                            "client"
                          ],
                          "description": "Downloadable files for the release"
                        },
                        "id": {
                          "type": "string",
                          "description": "Version id of the release"
                        },
                        "javaVersion": {
                          "type": "object",
                          "properties": {
                            "component": {
                              "type": "string",
                              "description": "Java component id"
                            },
                            "majorVersion": {
                              "type": "number",
                              "description": "Major version id"
                            }
                          },
                          "required": [
                            "component",
                            "majorVersion"
                          ],
                          "description": "Java version information"
                        },
                        "libraries": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "downloads": {
                                "type": "object",
                                "properties": {
                                  "artifact": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "ID of the file"
                                      },
                                      "path": {
                                        "type": "string",
                                        "description": "Path that the file should be install to"
                                      },
                                      "sha1": {
                                        "type": "string",
                                        "description": "SHA1 of the file"
                                      },
                                      "size": {
                                        "type": "number",
                                        "description": "Size of the file"
                                      },
                                      "totalSize": {
                                        "type": "number",
                                        "description": "Total size of the file"
                                      },
                                      "url": {
                                        "type": "string",
                                        "description": "URL of the file"
                                      }
                                    },
                                    "description": "Downloadable file information"
                                  },
                                  "classifiers": {
                                    "type": "object",
                                    "properties": {
                                      "natives-windows": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "description": "ID of the file"
                                          },
                                          "path": {
                                            "type": "string",
                                            "description": "Path that the file should be install to"
                                          },
                                          "sha1": {
                                            "type": "string",
                                            "description": "SHA1 of the file"
                                          },
                                          "size": {
                                            "type": "number",
                                            "description": "Size of the file"
                                          },
                                          "totalSize": {
                                            "type": "number",
                                            "description": "Total size of the file"
                                          },
                                          "url": {
                                            "type": "string",
                                            "description": "URL of the file"
                                          }
                                        },
                                        "description": "Downloadable file information"
                                      },
                                      "natives-linux": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "description": "ID of the file"
                                          },
                                          "path": {
                                            "type": "string",
                                            "description": "Path that the file should be install to"
                                          },
                                          "sha1": {
                                            "type": "string",
                                            "description": "SHA1 of the file"
                                          },
                                          "size": {
                                            "type": "number",
                                            "description": "Size of the file"
                                          },
                                          "totalSize": {
                                            "type": "number",
                                            "description": "Total size of the file"
                                          },
                                          "url": {
                                            "type": "string",
                                            "description": "URL of the file"
                                          }
                                        },
                                        "description": "Downloadable file information"
                                      },
                                      "natives-macos": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "description": "ID of the file"
                                          },
                                          "path": {
                                            "type": "string",
                                            "description": "Path that the file should be install to"
                                          },
                                          "sha1": {
                                            "type": "string",
                                            "description": "SHA1 of the file"
                                          },
                                          "size": {
                                            "type": "number",
                                            "description": "Size of the file"
                                          },
                                          "totalSize": {
                                            "type": "number",
                                            "description": "Total size of the file"
                                          },
                                          "url": {
                                            "type": "string",
                                            "description": "URL of the file"
                                          }
                                        },
                                        "description": "Downloadable file information"
                                      },
                                      "natives-osx": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "description": "ID of the file"
                                          },
                                          "path": {
                                            "type": "string",
                                            "description": "Path that the file should be install to"
                                          },
                                          "sha1": {
                                            "type": "string",
                                            "description": "SHA1 of the file"
                                          },
                                          "size": {
                                            "type": "number",
                                            "description": "Size of the file"
                                          },
                                          "totalSize": {
                                            "type": "number",
                                            "description": "Total size of the file"
                                          },
                                          "url": {
                                            "type": "string",
                                            "description": "URL of the file"
                                          }
                                        },
                                        "description": "Downloadable file information"
                                      },
                                      "natives-windows-32": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "description": "ID of the file"
                                          },
                                          "path": {
                                            "type": "string",
                                            "description": "Path that the file should be install to"
                                          },
                                          "sha1": {
                                            "type": "string",
                                            "description": "SHA1 of the file"
                                          },
                                          "size": {
                                            "type": "number",
                                            "description": "Size of the file"
                                          },
                                          "totalSize": {
                                            "type": "number",
                                            "description": "Total size of the file"
                                          },
                                          "url": {
                                            "type": "string",
                                            "description": "URL of the file"
                                          }
                                        },
                                        "description": "Downloadable file information"
                                      },
                                      "natives-windows-64": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "description": "ID of the file"
                                          },
                                          "path": {
                                            "type": "string",
                                            "description": "Path that the file should be install to"
                                          },
                                          "sha1": {
                                            "type": "string",
                                            "description": "SHA1 of the file"
                                          },
                                          "size": {
                                            "type": "number",
                                            "description": "Size of the file"
                                          },
                                          "totalSize": {
                                            "type": "number",
                                            "description": "Total size of the file"
                                          },
                                          "url": {
                                            "type": "string",
                                            "description": "URL of the file"
                                          }
                                        },
                                        "description": "Downloadable file information"
                                      }
                                    },
                                    "description": "Artifact classifiers for the library. Only appears in some libraries"
                                  }
                                },
                                "description": "Downloadable artifact for the library"
                              },
                              "name": {
                                "type": "string",
                                "description": "The maven name of the library"
                              },
                              "rules": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "action": {
                                      "type": "string",
                                      "description": "Action of the rule (can be 'allow' or 'disallow')"
                                    },
                                    "os": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "Operating system name of the rule"
                                        },
                                        "arch": {
                                          "type": "string",
                                          "description": "OS architecture of the rule"
                                        }
                                      },
                                      "description": "OS and architecture of the rule"
                                    }
                                  },
                                  "required": [
                                    "action"
                                  ],
                                  "description": "JVM rule for the flag"
                                },
                                "description": "JVM rules for the library"
                              },
                              "extract": {
                                "type": "object",
                                "properties": {
                                  "exclude": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "description": " Its value is 'META-INF/'"
                                    },
                                    "description": "Items to exclude from the extraction"
                                  }
                                },
                                "required": [
                                  "exclude"
                                ],
                                "description": "Extraction information for the library"
                              },
                              "natives": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string",
                                  "description": "The classifier for the natives (ex natives-windows, natives-linux, etc)"
                                },
                                "description": "Information about native libraries bundled with this library. Appears only when there are classifiers for natives"
                              },
                              "include_in_classpath": {
                                "type": "boolean",
                                "description": "Whether the library should be included in the classpath"
                              }
                            },
                            "required": [
                              "downloads",
                              "name"
                            ],
                            "description": "Library to be downloaded"
                          },
                          "description": "List of libraries to be downloaded for the release"
                        },
                        "logging": {
                          "type": "object",
                          "properties": {
                            "client": {
                              "type": "object",
                              "properties": {
                                "argument": {
                                  "type": "string",
                                  "description": "Argument for the logging client"
                                },
                                "file": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "ID of the file"
                                    },
                                    "path": {
                                      "type": "string",
                                      "description": "Path that the file should be install to"
                                    },
                                    "sha1": {
                                      "type": "string",
                                      "description": "SHA1 of the file"
                                    },
                                    "size": {
                                      "type": "number",
                                      "description": "Size of the file"
                                    },
                                    "totalSize": {
                                      "type": "number",
                                      "description": "Total size of the file"
                                    },
                                    "url": {
                                      "type": "string",
                                      "description": "URL of the file"
                                    }
                                  },
                                  "description": "Downloadable file information"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "Type associated with the logging client"
                                }
                              },
                              "required": [
                                "argument",
                                "file",
                                "type"
                              ],
                              "description": "Logging client configuration"
                            }
                          },
                          "required": [
                            "client"
                          ],
                          "description": "Logging information for the release"
                        },
                        "mainClass": {
                          "type": "string",
                          "description": "Main class of the game to launch"
                        },
                        "minimumLauncherVersion": {
                          "type": "number",
                          "description": "Minimum launcher (mojang) version required"
                        },
                        "releaseTime": {
                          "type": "string",
                          "description": "Time of the release"
                        },
                        "time": {
                          "type": "string",
                          "description": "Same as releaseTime"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "release",
                            "snapshot",
                            "old_alpha",
                            "old_beta"
                          ],
                          "description": "Type of the release"
                        },
                        "minecraftArguments": {
                          "type": "string",
                          "description": "Game arguments (legacy)"
                        }
                      },
                      "required": [
                        "assetIndex",
                        "assets",
                        "downloads",
                        "id",
                        "libraries",
                        "mainClass",
                        "minimumLauncherVersion",
                        "releaseTime",
                        "time",
                        "type"
                      ],
                      "description": "Vanilla launch data provided by piston"
                    },
                    "fabricLaunchData": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Fabric loader version ID"
                        },
                        "inheritsFrom": {
                          "type": "string",
                          "description": "Minecraft version that this loader inherits from"
                        },
                        "releaseTime": {
                          "type": "string",
                          "description": "Release time of this version of fabric loader"
                        },
                        "type": {
                          "type": "string",
                          "description": "Release type"
                        },
                        "mainClass": {
                          "type": "string",
                          "description": "Main class that gets executed"
                        },
                        "arguments": {
                          "type": "object",
                          "properties": {
                            "game": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "Game argument"
                              },
                              "description": "Game arguments"
                            },
                            "jvm": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "JVM argument"
                              },
                              "description": "JVM arguments"
                            }
                          },
                          "description": "Arguments to be passed to the game and JVM"
                        },
                        "libraries": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of the file"
                              },
                              "url": {
                                "type": "string",
                                "description": "URL of the file"
                              },
                              "md5": {
                                "type": "string",
                                "description": "MD5 hash of the file"
                              },
                              "sha1": {
                                "type": "string",
                                "description": "SHA1 hash of the file"
                              },
                              "sha256": {
                                "type": "string",
                                "description": "SHA256 hash of the file"
                              },
                              "sha512": {
                                "type": "string",
                                "description": "SHA512 hash of the file"
                              },
                              "size": {
                                "type": "number",
                                "description": "Size of the file"
                              }
                            },
                            "required": [
                              "name"
                            ],
                            "description": "Fabric file metadata"
                          },
                          "description": "Libraries to be downloaded"
                        }
                      },
                      "required": [
                        "id",
                        "inheritsFrom",
                        "releaseTime",
                        "type",
                        "mainClass",
                        "arguments",
                        "libraries"
                      ],
                      "description": "Fabric launch data provided by fabric meta"
                    },
                    "forgeLaunchData": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Forge loader version ID"
                        },
                        "inheritsFrom": {
                          "type": "string",
                          "description": "Minecraft version that this loader inherits from"
                        },
                        "releaseTime": {
                          "type": "string",
                          "description": "Release time of this version of forge loader"
                        },
                        "time": {
                          "type": "string",
                          "description": "Time of this version of forge loader"
                        },
                        "mainClass": {
                          "type": "string",
                          "description": "Main class that gets executed"
                        },
                        "type": {
                          "type": "string",
                          "description": "Release type"
                        },
                        "arguments": {
                          "type": "object",
                          "properties": {
                            "game": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "Game argument"
                              },
                              "description": "Game arguments"
                            },
                            "jvm": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "JVM argument"
                              },
                              "description": "JVM arguments"
                            }
                          },
                          "required": [
                            "game"
                          ],
                          "description": "Arguments to be passed to the game and JVM"
                        },
                        "libraries": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "downloads": {
                                "type": "object",
                                "properties": {
                                  "artifact": {
                                    "type": "object",
                                    "properties": {
                                      "path": {
                                        "type": "string",
                                        "description": "Path that the file should be install to"
                                      },
                                      "sha1": {
                                        "type": "string",
                                        "description": "SHA1 of the file"
                                      },
                                      "size": {
                                        "type": "number",
                                        "description": "Size of the file"
                                      },
                                      "url": {
                                        "type": "string",
                                        "description": "URL of the file"
                                      }
                                    },
                                    "description": "Downloadable file information"
                                  }
                                }
                              },
                              "name": {
                                "type": "string",
                                "description": "Library name"
                              },
                              "include_in_classpath": {
                                "type": "boolean",
                                "description": "Whether to include this library in the classpath"
                              }
                            },
                            "required": [
                              "downloads",
                              "name",
                              "include_in_classpath"
                            ],
                            "description": "Forge library"
                          },
                          "description": "List of libraries to be downloaded"
                        },
                        "processors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "jar": {
                                "type": "string",
                                "description": "Name of the jar file"
                              },
                              "classpath": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Classpath name"
                                },
                                "description": "Classpaths to run with the processors jar file"
                              },
                              "args": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Argument flag or value"
                                },
                                "description": "Arguments to pass to the processor"
                              },
                              "outputs": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string",
                                  "description": "Output variable value"
                                },
                                "description": "Output variables"
                              },
                              "sides": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Environment to run the processor in"
                                },
                                "description": "Environments to run the processor in"
                              }
                            },
                            "required": [
                              "jar",
                              "classpath",
                              "args"
                            ],
                            "description": "Processors to be run before launching forge"
                          },
                          "description": "List of processors"
                        },
                        "data": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "client": {
                                "type": "string",
                                "description": "Variable for client install"
                              },
                              "server": {
                                "type": "string",
                                "description": "Variable for server install"
                              }
                            },
                            "required": [
                              "client",
                              "server"
                            ]
                          },
                          "description": "Additional data variables"
                        },
                        "minecraftArguments": {
                          "type": "string",
                          "description": "Game arguments (legacy)"
                        }
                      },
                      "required": [
                        "id",
                        "releaseTime",
                        "time",
                        "mainClass",
                        "type",
                        "libraries"
                      ],
                      "description": "Forge launch data provided by forge-installer"
                    },
                    "optifineLaunchData": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Optifine version ID"
                        },
                        "releaseTime": {
                          "type": "string",
                          "description": "Release time of this Optifine version"
                        },
                        "time": {
                          "type": "string",
                          "description": "Time of this Optifine version"
                        },
                        "mainClass": {
                          "type": "string",
                          "description": "Main class that gets executed"
                        },
                        "arguments": {
                          "type": "object",
                          "properties": {
                            "game": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "Game argument"
                              },
                              "description": "Game arguments"
                            },
                            "jvm": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "JVM argument"
                              },
                              "description": "JVM arguments"
                            }
                          },
                          "required": [
                            "game",
                            "jvm"
                          ],
                          "description": "Arguments to be passed to the game and JVM"
                        },
                        "libraries": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "downloads": {
                                "type": "object",
                                "properties": {
                                  "artifact": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "ID of the file"
                                      },
                                      "path": {
                                        "type": "string",
                                        "description": "Path that the file should be install to"
                                      },
                                      "sha1": {
                                        "type": "string",
                                        "description": "SHA1 of the file"
                                      },
                                      "size": {
                                        "type": "number",
                                        "description": "Size of the file"
                                      },
                                      "totalSize": {
                                        "type": "number",
                                        "description": "Total size of the file"
                                      },
                                      "url": {
                                        "type": "string",
                                        "description": "URL of the file"
                                      }
                                    },
                                    "description": "Downloadable file information"
                                  },
                                  "classifiers": {
                                    "type": "object",
                                    "properties": {
                                      "natives-windows": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "description": "ID of the file"
                                          },
                                          "path": {
                                            "type": "string",
                                            "description": "Path that the file should be install to"
                                          },
                                          "sha1": {
                                            "type": "string",
                                            "description": "SHA1 of the file"
                                          },
                                          "size": {
                                            "type": "number",
                                            "description": "Size of the file"
                                          },
                                          "totalSize": {
                                            "type": "number",
                                            "description": "Total size of the file"
                                          },
                                          "url": {
                                            "type": "string",
                                            "description": "URL of the file"
                                          }
                                        },
                                        "description": "Downloadable file information"
                                      },
                                      "natives-linux": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "description": "ID of the file"
                                          },
                                          "path": {
                                            "type": "string",
                                            "description": "Path that the file should be install to"
                                          },
                                          "sha1": {
                                            "type": "string",
                                            "description": "SHA1 of the file"
                                          },
                                          "size": {
                                            "type": "number",
                                            "description": "Size of the file"
                                          },
                                          "totalSize": {
                                            "type": "number",
                                            "description": "Total size of the file"
                                          },
                                          "url": {
                                            "type": "string",
                                            "description": "URL of the file"
                                          }
                                        },
                                        "description": "Downloadable file information"
                                      },
                                      "natives-macos": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "description": "ID of the file"
                                          },
                                          "path": {
                                            "type": "string",
                                            "description": "Path that the file should be install to"
                                          },
                                          "sha1": {
                                            "type": "string",
                                            "description": "SHA1 of the file"
                                          },
                                          "size": {
                                            "type": "number",
                                            "description": "Size of the file"
                                          },
                                          "totalSize": {
                                            "type": "number",
                                            "description": "Total size of the file"
                                          },
                                          "url": {
                                            "type": "string",
                                            "description": "URL of the file"
                                          }
                                        },
                                        "description": "Downloadable file information"
                                      },
                                      "natives-osx": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "description": "ID of the file"
                                          },
                                          "path": {
                                            "type": "string",
                                            "description": "Path that the file should be install to"
                                          },
                                          "sha1": {
                                            "type": "string",
                                            "description": "SHA1 of the file"
                                          },
                                          "size": {
                                            "type": "number",
                                            "description": "Size of the file"
                                          },
                                          "totalSize": {
                                            "type": "number",
                                            "description": "Total size of the file"
                                          },
                                          "url": {
                                            "type": "string",
                                            "description": "URL of the file"
                                          }
                                        },
                                        "description": "Downloadable file information"
                                      },
                                      "natives-windows-32": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "description": "ID of the file"
                                          },
                                          "path": {
                                            "type": "string",
                                            "description": "Path that the file should be install to"
                                          },
                                          "sha1": {
                                            "type": "string",
                                            "description": "SHA1 of the file"
                                          },
                                          "size": {
                                            "type": "number",
                                            "description": "Size of the file"
                                          },
                                          "totalSize": {
                                            "type": "number",
                                            "description": "Total size of the file"
                                          },
                                          "url": {
                                            "type": "string",
                                            "description": "URL of the file"
                                          }
                                        },
                                        "description": "Downloadable file information"
                                      },
                                      "natives-windows-64": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "description": "ID of the file"
                                          },
                                          "path": {
                                            "type": "string",
                                            "description": "Path that the file should be install to"
                                          },
                                          "sha1": {
                                            "type": "string",
                                            "description": "SHA1 of the file"
                                          },
                                          "size": {
                                            "type": "number",
                                            "description": "Size of the file"
                                          },
                                          "totalSize": {
                                            "type": "number",
                                            "description": "Total size of the file"
                                          },
                                          "url": {
                                            "type": "string",
                                            "description": "URL of the file"
                                          }
                                        },
                                        "description": "Downloadable file information"
                                      }
                                    },
                                    "description": "Artifact classifiers for the library. Only appears in some libraries"
                                  }
                                },
                                "description": "Downloadable artifact for the library"
                              },
                              "name": {
                                "type": "string",
                                "description": "The maven name of the library"
                              },
                              "rules": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "action": {
                                      "type": "string",
                                      "description": "Action of the rule (can be 'allow' or 'disallow')"
                                    },
                                    "os": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "Operating system name of the rule"
                                        },
                                        "arch": {
                                          "type": "string",
                                          "description": "OS architecture of the rule"
                                        }
                                      },
                                      "description": "OS and architecture of the rule"
                                    }
                                  },
                                  "required": [
                                    "action"
                                  ],
                                  "description": "JVM rule for the flag"
                                },
                                "description": "JVM rules for the library"
                              },
                              "extract": {
                                "type": "object",
                                "properties": {
                                  "exclude": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "description": " Its value is 'META-INF/'"
                                    },
                                    "description": "Items to exclude from the extraction"
                                  }
                                },
                                "required": [
                                  "exclude"
                                ],
                                "description": "Extraction information for the library"
                              },
                              "natives": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string",
                                  "description": "The classifier for the natives (ex natives-windows, natives-linux, etc)"
                                },
                                "description": "Information about native libraries bundled with this library. Appears only when there are classifiers for natives"
                              },
                              "include_in_classpath": {
                                "type": "boolean",
                                "description": "Whether the library should be included in the classpath"
                              }
                            },
                            "required": [
                              "downloads",
                              "name"
                            ],
                            "description": "Library to be downloaded"
                          },
                          "description": "List of libraries to be downloaded"
                        }
                      },
                      "required": [
                        "id",
                        "releaseTime",
                        "time",
                        "mainClass",
                        "arguments",
                        "libraries"
                      ],
                      "description": "Optifine launch data provided by the optifine installer"
                    },
                    "launchData": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The version id"
                        },
                        "arguments": {
                          "type": "object",
                          "properties": {
                            "game": {
                              "type": "array",
                              "items": {
                                "anyOf": [
                                  {
                                    "type": "string",
                                    "description": "Flag or value to be passed to the game (ex. --assetsDir, ${assets_root})"
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "rules": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "action": {
                                              "type": "string",
                                              "description": "Action of the rule (is always 'allow')"
                                            },
                                            "features": {
                                              "type": "object",
                                              "additionalProperties": {
                                                "type": "boolean",
                                                "description": "Whether the feature is enabled or disabled"
                                              },
                                              "description": "Includes a set of features that can be checked"
                                            }
                                          },
                                          "required": [
                                            "action",
                                            "features"
                                          ],
                                          "description": "Games rules for the flag"
                                        },
                                        "description": "List of game rules"
                                      },
                                      "value": {
                                        "anyOf": [
                                          {
                                            "type": "string",
                                            "description": "Flag value for the rule"
                                          },
                                          {
                                            "type": "array",
                                            "items": {
                                              "type": "string",
                                              "description": "Flag value for the rule"
                                            },
                                            "description": "List of flag values for the rule"
                                          }
                                        ],
                                        "description": "Flag values for the rule"
                                      }
                                    },
                                    "required": [
                                      "rules",
                                      "value"
                                    ],
                                    "description": "A conditional argument"
                                  }
                                ],
                                "description": "Rules and flags to be passed to the game"
                              },
                              "description": "Arguments to be passed to the game"
                            },
                            "jvm": {
                              "type": "array",
                              "items": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "rules": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "action": {
                                              "type": "string",
                                              "description": "Action of the rule (can be 'allow' or 'disallow')"
                                            },
                                            "os": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "description": "Operating system name of the rule"
                                                },
                                                "arch": {
                                                  "type": "string",
                                                  "description": "OS architecture of the rule"
                                                }
                                              },
                                              "description": "OS and architecture of the rule"
                                            }
                                          },
                                          "required": [
                                            "action"
                                          ],
                                          "description": "JVM rule for the flag"
                                        },
                                        "description": "List of JVM rules"
                                      },
                                      "value": {
                                        "anyOf": [
                                          {
                                            "type": "string",
                                            "description": "Flag value for the rule"
                                          },
                                          {
                                            "type": "array",
                                            "items": {
                                              "type": "string",
                                              "description": "Flag value for the rule"
                                            },
                                            "description": "List of flag values for the rule"
                                          }
                                        ],
                                        "description": "Flag values for the rule"
                                      }
                                    },
                                    "required": [
                                      "rules",
                                      "value"
                                    ],
                                    "description": "Rules and values to be passed to the JVM"
                                  },
                                  {
                                    "type": "string",
                                    "description": "Flag or value to be passed to the jvm"
                                  }
                                ],
                                "description": "Rules and flags to be passed to the JVM"
                              },
                              "description": "Arguments to be passed to the JVM"
                            }
                          },
                          "required": [
                            "game",
                            "jvm"
                          ],
                          "description": "Arguments to be passed to the game and JVM"
                        },
                        "libraries": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "downloads": {
                                "type": "object",
                                "properties": {
                                  "artifact": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "ID of the file"
                                      },
                                      "path": {
                                        "type": "string",
                                        "description": "Path that the file should be install to"
                                      },
                                      "sha1": {
                                        "type": "string",
                                        "description": "SHA1 of the file"
                                      },
                                      "size": {
                                        "type": "number",
                                        "description": "Size of the file"
                                      },
                                      "totalSize": {
                                        "type": "number",
                                        "description": "Total size of the file"
                                      },
                                      "url": {
                                        "type": "string",
                                        "description": "URL of the file"
                                      }
                                    },
                                    "description": "Downloadable file information"
                                  },
                                  "classifiers": {
                                    "type": "object",
                                    "properties": {
                                      "natives-windows": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "description": "ID of the file"
                                          },
                                          "path": {
                                            "type": "string",
                                            "description": "Path that the file should be install to"
                                          },
                                          "sha1": {
                                            "type": "string",
                                            "description": "SHA1 of the file"
                                          },
                                          "size": {
                                            "type": "number",
                                            "description": "Size of the file"
                                          },
                                          "totalSize": {
                                            "type": "number",
                                            "description": "Total size of the file"
                                          },
                                          "url": {
                                            "type": "string",
                                            "description": "URL of the file"
                                          }
                                        },
                                        "description": "Downloadable file information"
                                      },
                                      "natives-linux": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "description": "ID of the file"
                                          },
                                          "path": {
                                            "type": "string",
                                            "description": "Path that the file should be install to"
                                          },
                                          "sha1": {
                                            "type": "string",
                                            "description": "SHA1 of the file"
                                          },
                                          "size": {
                                            "type": "number",
                                            "description": "Size of the file"
                                          },
                                          "totalSize": {
                                            "type": "number",
                                            "description": "Total size of the file"
                                          },
                                          "url": {
                                            "type": "string",
                                            "description": "URL of the file"
                                          }
                                        },
                                        "description": "Downloadable file information"
                                      },
                                      "natives-macos": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "description": "ID of the file"
                                          },
                                          "path": {
                                            "type": "string",
                                            "description": "Path that the file should be install to"
                                          },
                                          "sha1": {
                                            "type": "string",
                                            "description": "SHA1 of the file"
                                          },
                                          "size": {
                                            "type": "number",
                                            "description": "Size of the file"
                                          },
                                          "totalSize": {
                                            "type": "number",
                                            "description": "Total size of the file"
                                          },
                                          "url": {
                                            "type": "string",
                                            "description": "URL of the file"
                                          }
                                        },
                                        "description": "Downloadable file information"
                                      },
                                      "natives-osx": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "description": "ID of the file"
                                          },
                                          "path": {
                                            "type": "string",
                                            "description": "Path that the file should be install to"
                                          },
                                          "sha1": {
                                            "type": "string",
                                            "description": "SHA1 of the file"
                                          },
                                          "size": {
                                            "type": "number",
                                            "description": "Size of the file"
                                          },
                                          "totalSize": {
                                            "type": "number",
                                            "description": "Total size of the file"
                                          },
                                          "url": {
                                            "type": "string",
                                            "description": "URL of the file"
                                          }
                                        },
                                        "description": "Downloadable file information"
                                      },
                                      "natives-windows-32": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "description": "ID of the file"
                                          },
                                          "path": {
                                            "type": "string",
                                            "description": "Path that the file should be install to"
                                          },
                                          "sha1": {
                                            "type": "string",
                                            "description": "SHA1 of the file"
                                          },
                                          "size": {
                                            "type": "number",
                                            "description": "Size of the file"
                                          },
                                          "totalSize": {
                                            "type": "number",
                                            "description": "Total size of the file"
                                          },
                                          "url": {
                                            "type": "string",
                                            "description": "URL of the file"
                                          }
                                        },
                                        "description": "Downloadable file information"
                                      },
                                      "natives-windows-64": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "description": "ID of the file"
                                          },
                                          "path": {
                                            "type": "string",
                                            "description": "Path that the file should be install to"
                                          },
                                          "sha1": {
                                            "type": "string",
                                            "description": "SHA1 of the file"
                                          },
                                          "size": {
                                            "type": "number",
                                            "description": "Size of the file"
                                          },
                                          "totalSize": {
                                            "type": "number",
                                            "description": "Total size of the file"
                                          },
                                          "url": {
                                            "type": "string",
                                            "description": "URL of the file"
                                          }
                                        },
                                        "description": "Downloadable file information"
                                      }
                                    },
                                    "description": "Artifact classifiers for the library. Only appears in some libraries"
                                  }
                                },
                                "description": "Downloadable artifact for the library"
                              },
                              "name": {
                                "type": "string",
                                "description": "The maven name of the library"
                              },
                              "rules": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "action": {
                                      "type": "string",
                                      "description": "Action of the rule (can be 'allow' or 'disallow')"
                                    },
                                    "os": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "Operating system name of the rule"
                                        },
                                        "arch": {
                                          "type": "string",
                                          "description": "OS architecture of the rule"
                                        }
                                      },
                                      "description": "OS and architecture of the rule"
                                    }
                                  },
                                  "required": [
                                    "action"
                                  ],
                                  "description": "JVM rule for the flag"
                                },
                                "description": "JVM rules for the library"
                              },
                              "extract": {
                                "type": "object",
                                "properties": {
                                  "exclude": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "description": " Its value is 'META-INF/'"
                                    },
                                    "description": "Items to exclude from the extraction"
                                  }
                                },
                                "required": [
                                  "exclude"
                                ],
                                "description": "Extraction information for the library"
                              },
                              "natives": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string",
                                  "description": "The classifier for the natives (ex natives-windows, natives-linux, etc)"
                                },
                                "description": "Information about native libraries bundled with this library. Appears only when there are classifiers for natives"
                              },
                              "include_in_classpath": {
                                "type": "boolean",
                                "description": "Whether the library should be included in the classpath"
                              }
                            },
                            "required": [
                              "downloads",
                              "name"
                            ],
                            "description": "Library to be downloaded"
                          },
                          "description": "List of libraries to be downloaded for the release"
                        },
                        "downloads": {
                          "type": "object",
                          "properties": {
                            "client": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "ID of the file"
                                },
                                "path": {
                                  "type": "string",
                                  "description": "Path that the file should be install to"
                                },
                                "sha1": {
                                  "type": "string",
                                  "description": "SHA1 of the file"
                                },
                                "size": {
                                  "type": "number",
                                  "description": "Size of the file"
                                },
                                "totalSize": {
                                  "type": "number",
                                  "description": "Total size of the file"
                                },
                                "url": {
                                  "type": "string",
                                  "description": "URL of the file"
                                }
                              },
                              "description": "Downloadable file information"
                            },
                            "client_mappings": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "ID of the file"
                                },
                                "path": {
                                  "type": "string",
                                  "description": "Path that the file should be install to"
                                },
                                "sha1": {
                                  "type": "string",
                                  "description": "SHA1 of the file"
                                },
                                "size": {
                                  "type": "number",
                                  "description": "Size of the file"
                                },
                                "totalSize": {
                                  "type": "number",
                                  "description": "Total size of the file"
                                },
                                "url": {
                                  "type": "string",
                                  "description": "URL of the file"
                                }
                              },
                              "description": "Downloadable file information"
                            },
                            "server": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "ID of the file"
                                },
                                "path": {
                                  "type": "string",
                                  "description": "Path that the file should be install to"
                                },
                                "sha1": {
                                  "type": "string",
                                  "description": "SHA1 of the file"
                                },
                                "size": {
                                  "type": "number",
                                  "description": "Size of the file"
                                },
                                "totalSize": {
                                  "type": "number",
                                  "description": "Total size of the file"
                                },
                                "url": {
                                  "type": "string",
                                  "description": "URL of the file"
                                }
                              },
                              "description": "Downloadable file information"
                            },
                            "server_mappings": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "ID of the file"
                                },
                                "path": {
                                  "type": "string",
                                  "description": "Path that the file should be install to"
                                },
                                "sha1": {
                                  "type": "string",
                                  "description": "SHA1 of the file"
                                },
                                "size": {
                                  "type": "number",
                                  "description": "Size of the file"
                                },
                                "totalSize": {
                                  "type": "number",
                                  "description": "Total size of the file"
                                },
                                "url": {
                                  "type": "string",
                                  "description": "URL of the file"
                                }
                              },
                              "description": "Downloadable file information"
                            }
                          },
                          "required": [
                            "client"
                          ],
                          "description": "Version jars and mappings"
                        },
                        "assetIndex": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "ID of the file"
                            },
                            "path": {
                              "type": "string",
                              "description": "Path that the file should be install to"
                            },
                            "sha1": {
                              "type": "string",
                              "description": "SHA1 of the file"
                            },
                            "size": {
                              "type": "number",
                              "description": "Size of the file"
                            },
                            "totalSize": {
                              "type": "number",
                              "description": "Total size of the file"
                            },
                            "url": {
                              "type": "string",
                              "description": "URL of the file"
                            }
                          },
                          "description": "Downloadable file information"
                        },
                        "assets": {
                          "type": "string",
                          "description": "Asset index id of the release"
                        },
                        "javaVersion": {
                          "type": "object",
                          "properties": {
                            "component": {
                              "type": "string",
                              "description": "Java component id"
                            },
                            "majorVersion": {
                              "type": "number",
                              "description": "Major version id"
                            }
                          },
                          "required": [
                            "component",
                            "majorVersion"
                          ],
                          "description": "Java version information"
                        },
                        "mainClass": {
                          "type": "string",
                          "description": "Main class of the game to launch"
                        },
                        "releaseTime": {
                          "type": "string",
                          "description": "Time of the release"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "release",
                            "snapshot",
                            "old_alpha",
                            "old_beta"
                          ],
                          "description": "Type of the release"
                        },
                        "logging": {
                          "type": "object",
                          "properties": {
                            "client": {
                              "type": "object",
                              "properties": {
                                "argument": {
                                  "type": "string",
                                  "description": "Argument for the logging client"
                                },
                                "file": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "ID of the file"
                                    },
                                    "path": {
                                      "type": "string",
                                      "description": "Path that the file should be install to"
                                    },
                                    "sha1": {
                                      "type": "string",
                                      "description": "SHA1 of the file"
                                    },
                                    "size": {
                                      "type": "number",
                                      "description": "Size of the file"
                                    },
                                    "totalSize": {
                                      "type": "number",
                                      "description": "Total size of the file"
                                    },
                                    "url": {
                                      "type": "string",
                                      "description": "URL of the file"
                                    }
                                  },
                                  "description": "Downloadable file information"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "Type associated with the logging client"
                                }
                              },
                              "required": [
                                "argument",
                                "file",
                                "type"
                              ],
                              "description": "Logging client configuration"
                            }
                          },
                          "required": [
                            "client"
                          ],
                          "description": "Logging information for the release"
                        },
                        "data": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "client": {
                                "type": "string",
                                "description": "Variable for client install"
                              },
                              "server": {
                                "type": "string",
                                "description": "Variable for server install"
                              }
                            },
                            "required": [
                              "client",
                              "server"
                            ]
                          },
                          "description": "Additional data variables for forge based loaders"
                        },
                        "processors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "jar": {
                                "type": "string",
                                "description": "Name of the jar file"
                              },
                              "classpath": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Classpath name"
                                },
                                "description": "Classpaths to run with the processors jar file"
                              },
                              "args": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Argument flag or value"
                                },
                                "description": "Arguments to pass to the processor"
                              },
                              "outputs": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string",
                                  "description": "Output variable value"
                                },
                                "description": "Output variables"
                              },
                              "sides": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Environment to run the processor in"
                                },
                                "description": "Environments to run the processor in"
                              }
                            },
                            "required": [
                              "jar",
                              "classpath",
                              "args"
                            ],
                            "description": "Processors to be run before launching forge"
                          },
                          "description": "List of processors for forge based loaders"
                        },
                        "minecraftArguments": {
                          "type": "string",
                          "description": "Game arguments (legacy)"
                        }
                      },
                      "required": [
                        "id",
                        "arguments",
                        "libraries",
                        "downloads",
                        "assetIndex",
                        "assets",
                        "javaVersion",
                        "mainClass",
                        "releaseTime",
                        "type"
                      ],
                      "description": "Combined launch data used by launcher version > "
                    }
                  },
                  "required": [
                    "success"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/launcher/log-upload/start": {
      "post": {
        "tags": [
          "launcher"
        ],
        "description": "Starts a new log upload",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "hwid": {
                    "type": "string",
                    "description": "HWID of the requester",
                    "deprecated": true
                  },
                  "hwid_private": {
                    "type": "string",
                    "description": "HWID Private of the requester",
                    "deprecated": true
                  },
                  "installation_id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Installation ID of the requester",
                    "example": "00000000-0000-0000-0000-000000000000"
                  },
                  "os": {
                    "type": "string",
                    "description": "Operating system of the requester",
                    "example": "win32"
                  },
                  "os_release": {
                    "type": "string",
                    "description": "Operating system release of the requester",
                    "example": "10.0.19045"
                  },
                  "arch": {
                    "type": "string",
                    "description": "CPU Architecture of the requester",
                    "example": "x64"
                  },
                  "launcher_version": {
                    "type": "string",
                    "description": "Current launcher version of the requester"
                  },
                  "files": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/LogUploadInputFile"
                    },
                    "description": "Files that the client would like to upload"
                  },
                  "sentryCrashId": {
                    "type": "string",
                    "nullable": true,
                    "description": "Sentry crash ID",
                    "example": "CRASH-882bdfac-d41f-4edd-9ed0-1edd7493f3bf"
                  },
                  "solutionId": {
                    "type": "string",
                    "nullable": true,
                    "description": "Matched error solution ID",
                    "example": "pixel_format"
                  },
                  "playerUuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Player who created these logs, unauthenticated users are not able to upload logs",
                    "example": "7471b8e8-27c2-4354-a7d2-bd6a82dc00a0"
                  },
                  "canaryToken": {
                    "type": "string",
                    "default": "",
                    "description": "Canary token given to the user at launch time"
                  },
                  "initiator": {
                    "type": "string",
                    "enum": [
                      "launch-error-modal",
                      "launch-error-automatic",
                      "settings",
                      "renderer-error-overlay",
                      "mission-control",
                      "deeplink"
                    ],
                    "description": "Initiator of the log upload"
                  }
                },
                "required": [
                  "installation_id",
                  "os",
                  "os_release",
                  "arch",
                  "launcher_version",
                  "files",
                  "playerUuid",
                  "initiator"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "files": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LogUploadOutputFile"
                      },
                      "description": "Files the client should upload, with a URL for each"
                    },
                    "uploadId": {
                      "type": "string",
                      "description": "Upload ID which can be provided to LC staff to debug",
                      "example": "LCLU-UDGHIJIFMX"
                    }
                  },
                  "required": [
                    "files",
                    "uploadId"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Message associated with the error that occured"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/launcher/log-upload/complete": {
      "post": {
        "tags": [
          "launcher"
        ],
        "description": "Completes an in-progress log upload",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "hwid": {
                    "type": "string",
                    "description": "HWID of the requester",
                    "deprecated": true
                  },
                  "hwid_private": {
                    "type": "string",
                    "description": "HWID Private of the requester",
                    "deprecated": true
                  },
                  "installation_id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Installation ID of the requester",
                    "example": "00000000-0000-0000-0000-000000000000"
                  },
                  "os": {
                    "type": "string",
                    "description": "Operating system of the requester",
                    "example": "win32"
                  },
                  "os_release": {
                    "type": "string",
                    "description": "Operating system release of the requester",
                    "example": "10.0.19045"
                  },
                  "arch": {
                    "type": "string",
                    "description": "CPU Architecture of the requester",
                    "example": "x64"
                  },
                  "launcher_version": {
                    "type": "string",
                    "description": "Current launcher version of the requester"
                  },
                  "uploadId": {
                    "type": "string",
                    "description": "Upload ID which can be provided to LC staff to debug",
                    "example": "LCLU-UDGHIJIFMX"
                  }
                },
                "required": [
                  "installation_id",
                  "os",
                  "os_release",
                  "arch",
                  "launcher_version",
                  "uploadId"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "500": {
            "description": "Unknown server error occured",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Message associated with the error that occured"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/launcher/metadata/versions/vanilla": {
      "get": {
        "tags": [
          "launcher"
        ],
        "description": "Loads information about vanilla versions playable via Lunar Client",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "Current launcher version of the requester"
            },
            "required": true,
            "name": "launcher_version",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "versions": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LauncherVanillaVersion"
                      },
                      "description": "Playable versions without Lunar modifications"
                    }
                  },
                  "required": [
                    "versions"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/launcher/metadata/versions/lunar": {
      "get": {
        "tags": [
          "launcher"
        ],
        "description": "Loads Lunar versions available in the Lunar Client launcher.",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "Installation ID of the requester"
            },
            "required": true,
            "description": "Installation ID of the requester",
            "name": "installation_id",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "default": "master",
              "description": "Branch of the game the user is attempting to use"
            },
            "required": false,
            "description": "Branch of the game the user is attempting to use",
            "name": "branch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "versions": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LauncherVersion"
                      },
                      "description": "Playable versions for the user"
                    },
                    "branchReset": {
                      "type": "boolean",
                      "description": "Whether the internal branch should be reset to master (this happens when they try get the metadata for a branch they are not authorised to get)"
                    },
                    "recommendedLibraries": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/RecommendedLibrary"
                      },
                      "description": "Libraries and their versions that are recommended"
                    }
                  },
                  "required": [
                    "versions",
                    "branchReset",
                    "recommendedLibraries"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/launcher/metadata/versions/badlion": {
      "get": {
        "tags": [
          "launcher"
        ],
        "description": "Loads information about Badlion versions playable via Lunar Client",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "versions": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LauncherBadlionVersion"
                      },
                      "description": "Playable Badlion versions"
                    }
                  },
                  "required": [
                    "versions"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/launcher/metadata/layout": {
      "get": {
        "tags": [
          "launcher"
        ],
        "description": "Loads layout metadata used by the Lunar Client launcher.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ads": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Ad"
                      },
                      "description": "Advertisements"
                    },
                    "alert": {
                      "$ref": "#/components/schemas/LauncherAlert"
                    },
                    "blogPosts": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LauncherBlogPost"
                      },
                      "description": "Recent news to be shown on the home page"
                    },
                    "navItems": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LauncherNavItem"
                      },
                      "description": "Additional Sidebar Items"
                    },
                    "serversCta": {
                      "$ref": "#/components/schemas/LauncherServersCTA"
                    },
                    "shelfServers": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MetadataShelfServer"
                      },
                      "description": "Quick join servers (partnered)"
                    },
                    "topbarSocials": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TopbarSocial"
                      },
                      "description": "Socials displayed in the launcher topbar"
                    },
                    "videoPromotion": {
                      "$ref": "#/components/schemas/VideoPromotion"
                    }
                  },
                  "required": [
                    "ads",
                    "blogPosts",
                    "navItems",
                    "shelfServers",
                    "topbarSocials",
                    "videoPromotion"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/launcher/metadata/misc": {
      "get": {
        "tags": [
          "launcher"
        ],
        "description": "Loads miscellaneous metadata used by the Lunar Client launcher.",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "Installation ID of the requester",
              "example": "00000000-0000-0000-0000-000000000000"
            },
            "required": true,
            "name": "installation_id",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Language of the user to serve varying content",
              "example": "en_US"
            },
            "required": false,
            "name": "language",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "default": "latest",
              "description": "The current Launcher update stream the user is attempting to be on"
            },
            "required": false,
            "name": "launcher_update_stream",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "refreshIntervals": {
                      "$ref": "#/components/schemas/LauncherRefreshIntervals"
                    },
                    "updater": {
                      "$ref": "#/components/schemas/LauncherUpdater"
                    },
                    "modpacks": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "Modrinth modpack ID"
                      },
                      "description": "Modpacks that are immediately available for the user to install on the versions page"
                    },
                    "errorSolutions": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LauncherErrorSolution"
                      },
                      "description": "Common launch error solutions"
                    },
                    "featureFlags": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/FeatureFlag"
                      },
                      "description": "Feature Flags that should be applied to the current session"
                    },
                    "onlinePlayers": {
                      "$ref": "#/components/schemas/OnlinePlayers"
                    },
                    "language": {
                      "type": "object",
                      "properties": {
                        "latestHashes": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "sha1": {
                                "type": "string",
                                "description": "SHA1 hash"
                              }
                            },
                            "required": [
                              "sha1"
                            ]
                          },
                          "description": "Map of language codes to their latest SHA1 hashes"
                        }
                      },
                      "required": [
                        "latestHashes"
                      ],
                      "description": "Language information"
                    },
                    "terms": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "ID of the terms page"
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the terms page, in the event that the ID does not have a key in the lang"
                          },
                          "lastUpdated": {
                            "type": "string",
                            "description": "Last updated date of the terms page"
                          },
                          "hash": {
                            "type": "string",
                            "description": "SHA1 hash of the terms page"
                          },
                          "url": {
                            "type": "string",
                            "description": "URL of the terms page"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "lastUpdated",
                          "hash"
                        ],
                        "additionalProperties": false
                      },
                      "description": "Terms information"
                    },
                    "ssoDomains": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A domain"
                      },
                      "description": "List of domains that are allowed to be used for SSO authentication"
                    }
                  },
                  "required": [
                    "refreshIntervals",
                    "updater",
                    "modpacks",
                    "errorSolutions",
                    "featureFlags",
                    "onlinePlayers",
                    "language",
                    "terms",
                    "ssoDomains"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/launcher/metadata/radio": {
      "get": {
        "tags": [
          "launcher"
        ],
        "description": "Loads information about the radio in the launcher",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "stations": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LauncherRadioStation"
                      },
                      "description": "List of available radio stations for the user"
                    },
                    "premiumPackages": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LauncherRadioPremiumPackage"
                      },
                      "description": "List of available premium packages for the user"
                    }
                  },
                  "required": [
                    "stations",
                    "premiumPackages"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/launcher/metadata": {
      "get": {
        "tags": [
          "launcher"
        ],
        "description": "Loads various metadata used by the Lunar Client launcher.",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "HWID of the requester",
              "deprecated": true
            },
            "required": false,
            "name": "hwid",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "HWID Private of the requester",
              "deprecated": true
            },
            "required": false,
            "name": "hwid_private",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "Installation ID of the requester"
            },
            "required": false,
            "name": "installation_id",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Operating system of the requester",
              "example": "win32"
            },
            "required": true,
            "name": "os",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Operating system release of the requester"
            },
            "required": false,
            "name": "os_release",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "CPU Architecture of the requester",
              "example": "x64"
            },
            "required": true,
            "name": "arch",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Current launcher version of the requester"
            },
            "required": true,
            "name": "launcher_version",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "OPT_IN",
                "OPT_OUT",
                "NEUTRAL"
              ],
              "description": "The canary preference of the user"
            },
            "required": false,
            "name": "canary_preference",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "default": "master",
              "description": "Branch of the game the user is attempting to use"
            },
            "required": false,
            "name": "branch",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Language of the user to serve varying content",
              "example": "en_US"
            },
            "required": false,
            "name": "language",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "default": "latest",
              "description": "The current Launcher update stream the user is attempting to be on"
            },
            "required": false,
            "name": "launcher_update_stream",
            "in": "query"
          },
          {
            "schema": {
              "type": "integer",
              "nullable": true,
              "maximum": 100,
              "default": 3,
              "description": "The amount of blog posts to return for display on the home page"
            },
            "required": false,
            "name": "blog_amount",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean",
              "nullable": true,
              "default": false,
              "description": "Whether the user is attempting to view private version/modules"
            },
            "required": false,
            "name": "private",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Whether the branch has changed"
            },
            "required": false,
            "name": "branch_change",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Whether the branch has changed"
            },
            "required": false,
            "name": "branch_changed",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "versions": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LauncherVersion"
                      },
                      "description": "Playable versions for the user"
                    },
                    "branchReset": {
                      "type": "boolean",
                      "description": "Whether the internal branch should be reset to master (this happens when they try get the metadata for a branch they are not authorised to get)"
                    },
                    "updater": {
                      "$ref": "#/components/schemas/LauncherUpdater"
                    },
                    "serversCta": {
                      "$ref": "#/components/schemas/LauncherServersCTA"
                    },
                    "servers": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MetadataShelfServer"
                      },
                      "description": "Quick join servers (partnered)"
                    },
                    "blogPosts": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LauncherBlogPost"
                      },
                      "description": "Recent news to be shown on the home page"
                    },
                    "navItems": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LauncherNavItem"
                      },
                      "description": "Additional Sidebar Items"
                    },
                    "theme": {
                      "type": "string",
                      "default": "default",
                      "description": "Seasonal theme that Launcher should respect"
                    },
                    "onlinePlayers": {
                      "$ref": "#/components/schemas/OnlinePlayers"
                    },
                    "featureFlags": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/FeatureFlag"
                      },
                      "description": "Feature Flags that should be applied to the current session"
                    },
                    "alert": {
                      "$ref": "#/components/schemas/LauncherAlert"
                    },
                    "videoPromotion": {
                      "$ref": "#/components/schemas/VideoPromotion"
                    },
                    "errorSolutions": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LauncherErrorSolution"
                      },
                      "description": "Common launch error solutions"
                    },
                    "sentryFilteredExceptions": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SentryFilter"
                      },
                      "description": "List of exceptions that are filtered client-side before sending"
                    },
                    "refreshIntervals": {
                      "$ref": "#/components/schemas/LauncherRefreshIntervals"
                    },
                    "modpacks": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "Modrinth modpack ID"
                      },
                      "description": "Modpacks that are immediately available for the user to install on the versions page"
                    },
                    "recommendedLibraries": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/RecommendedLibrary"
                      },
                      "description": "Libraries and their versions that are recommended"
                    },
                    "vanillaVersions": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LauncherVanillaVersion"
                      },
                      "description": "Playable versions without Lunar modifications"
                    },
                    "ads": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Ad"
                      },
                      "description": "Advertisements"
                    },
                    "topbarSocials": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TopbarSocial"
                      },
                      "description": "Socials displayed in the launcher topbar"
                    }
                  },
                  "required": [
                    "versions",
                    "branchReset",
                    "updater",
                    "servers",
                    "blogPosts",
                    "navItems",
                    "onlinePlayers",
                    "featureFlags",
                    "videoPromotion",
                    "errorSolutions",
                    "sentryFilteredExceptions",
                    "refreshIntervals",
                    "modpacks",
                    "recommendedLibraries",
                    "vanillaVersions",
                    "ads",
                    "topbarSocials"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/launcher/servers": {
      "get": {
        "tags": [
          "launcher"
        ],
        "description": "Server discovery within Launcher",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "HWID of the requester",
              "deprecated": true
            },
            "required": false,
            "name": "hwid",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "HWID Private of the requester",
              "deprecated": true
            },
            "required": false,
            "name": "hwid_private",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "Installation ID of the requester",
              "example": "00000000-0000-0000-0000-000000000000"
            },
            "required": true,
            "name": "installation_id",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Operating system of the requester",
              "example": "win32"
            },
            "required": true,
            "name": "os",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Operating system release of the requester",
              "example": "10.0.19045"
            },
            "required": true,
            "name": "os_release",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "CPU Architecture of the requester",
              "example": "x64"
            },
            "required": true,
            "name": "arch",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Current launcher version of the requester"
            },
            "required": true,
            "name": "launcher_version",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Whether non-partnered servers should be included"
            },
            "required": false,
            "name": "community",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Filter by server name",
              "example": "hypixel"
            },
            "required": false,
            "name": "search",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Filter by specific minecraft version"
            },
            "required": false,
            "name": "minecraftVersion",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Filter by specific region"
            },
            "required": false,
            "name": "region",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Filter by specific Game Type"
            },
            "required": false,
            "name": "gameType",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "recommended",
                "name_asc",
                "name_desc"
              ],
              "default": "recommended",
              "description": "How the results should be ordered"
            },
            "required": false,
            "name": "sort",
            "in": "query"
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "Server mappings ID"
              },
              "default": [],
              "description": "List of favorited IDs to include above the community filter"
            },
            "required": false,
            "name": "favorites",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Whether to include the filters in the response (for init)"
            },
            "required": false,
            "name": "showFilters",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Language of the user to serve varying content",
              "example": "en_US"
            },
            "required": false,
            "name": "language",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "servers": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LauncherServer"
                      },
                      "description": "List of servers"
                    },
                    "filters": {
                      "$ref": "#/components/schemas/LauncherServerFilters"
                    }
                  },
                  "required": [
                    "servers"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/launcher/server/{identifierOrAddress}": {
      "get": {
        "tags": [
          "launcher"
        ],
        "description": "Get specific server from discovery within Launcher",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "Server ID (from ServerMappings) or server address without the port (e.g. `mc.hypixel.net`)",
              "example": "hypixel"
            },
            "required": true,
            "name": "identifierOrAddress",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "description": "HWID of the requester",
              "deprecated": true
            },
            "required": false,
            "name": "hwid",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "HWID Private of the requester",
              "deprecated": true
            },
            "required": false,
            "name": "hwid_private",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "Installation ID of the requester",
              "example": "00000000-0000-0000-0000-000000000000"
            },
            "required": true,
            "name": "installation_id",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Operating system of the requester",
              "example": "win32"
            },
            "required": true,
            "name": "os",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Operating system release of the requester",
              "example": "10.0.19045"
            },
            "required": true,
            "name": "os_release",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "CPU Architecture of the requester",
              "example": "x64"
            },
            "required": true,
            "name": "arch",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Current launcher version of the requester"
            },
            "required": true,
            "name": "launcher_version",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Language of the user to serve varying content"
            },
            "required": false,
            "name": "language",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LauncherServer"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code",
                      "example": "not_found"
                    },
                    "message": {
                      "type": "string",
                      "description": "Full text error message",
                      "example": "Server not found"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/launcher/status": {
      "get": {
        "tags": [
          "launcher"
        ],
        "description": "Basic connection status endpoint",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "HWID of the requester",
              "deprecated": true
            },
            "required": false,
            "name": "hwid",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "HWID Private of the requester",
              "deprecated": true
            },
            "required": false,
            "name": "hwid_private",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "Installation ID of the requester",
              "example": "00000000-0000-0000-0000-000000000000"
            },
            "required": true,
            "name": "installation_id",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Operating system of the requester",
              "example": "win32"
            },
            "required": true,
            "name": "os",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Operating system release of the requester",
              "example": "10.0.19045"
            },
            "required": true,
            "name": "os_release",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "CPU Architecture of the requester",
              "example": "x64"
            },
            "required": true,
            "name": "arch",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Current launcher version of the requester"
            },
            "required": true,
            "name": "launcher_version",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "ok"
                      ],
                      "description": "Always returns 'ok'"
                    }
                  },
                  "required": [
                    "status"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/launcher/moderation/profanity": {
      "post": {
        "tags": [
          "launcher"
        ],
        "description": "Check if a text is allowed based on the profanity filter",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "hwid": {
                    "type": "string",
                    "description": "HWID of the requester",
                    "deprecated": true
                  },
                  "hwid_private": {
                    "type": "string",
                    "description": "HWID Private of the requester",
                    "deprecated": true
                  },
                  "installation_id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Installation ID of the requester",
                    "example": "00000000-0000-0000-0000-000000000000"
                  },
                  "os": {
                    "type": "string",
                    "description": "Operating system of the requester",
                    "example": "win32"
                  },
                  "os_release": {
                    "type": "string",
                    "description": "Operating system release of the requester",
                    "example": "10.0.19045"
                  },
                  "arch": {
                    "type": "string",
                    "description": "CPU Architecture of the requester",
                    "example": "x64"
                  },
                  "launcher_version": {
                    "type": "string",
                    "description": "Current launcher version of the requester"
                  },
                  "text": {
                    "type": "string",
                    "description": "The text to check against the profanity filter"
                  }
                },
                "required": [
                  "installation_id",
                  "os",
                  "os_release",
                  "arch",
                  "launcher_version",
                  "text"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "allowed": {
                      "type": "boolean",
                      "description": "Whether the text is allowed or not based on the profanity filter"
                    }
                  },
                  "required": [
                    "allowed"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/launcher/moderation/nsfw": {
      "post": {
        "tags": [
          "launcher"
        ],
        "description": "Check if an image is allowed based on the Content Moderation (including NSFW) filter",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "hwid": {
                    "type": "string",
                    "description": "HWID of the requester",
                    "deprecated": true
                  },
                  "hwid_private": {
                    "type": "string",
                    "description": "HWID Private of the requester",
                    "deprecated": true
                  },
                  "installation_id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Installation ID of the requester",
                    "example": "00000000-0000-0000-0000-000000000000"
                  },
                  "os": {
                    "type": "string",
                    "description": "Operating system of the requester",
                    "example": "win32"
                  },
                  "os_release": {
                    "type": "string",
                    "description": "Operating system release of the requester",
                    "example": "10.0.19045"
                  },
                  "arch": {
                    "type": "string",
                    "description": "CPU Architecture of the requester",
                    "example": "x64"
                  },
                  "launcher_version": {
                    "type": "string",
                    "description": "Current launcher version of the requester"
                  },
                  "img": {
                    "type": "string",
                    "description": "The image to analyze for NSFW / inappropriate content",
                    "format": "binary"
                  },
                  "placement": {
                    "type": "string",
                    "enum": [
                      "modpack-icon",
                      "modpack-featured-image"
                    ],
                    "description": "The placement of the image (icon or featured image)"
                  }
                },
                "required": [
                  "installation_id",
                  "os",
                  "os_release",
                  "arch",
                  "launcher_version",
                  "placement"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "allowed": {
                      "type": "boolean",
                      "description": "Whether the image is allowed or not"
                    },
                    "reason": {
                      "type": "string",
                      "description": "Why the image was disallowed"
                    }
                  },
                  "required": [
                    "allowed",
                    "reason"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/wrapped/country": {
      "get": {
        "tags": [
          "wrapped"
        ],
        "description": "Retrieves Wrapped country data",
        "parameters": [
          {
            "schema": {
              "type": "integer",
              "nullable": true,
              "description": "Year to retrieve Wrapped data for",
              "example": 2022
            },
            "required": false,
            "name": "year",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "2 letter country code to retrieve Wrapped data for",
              "example": "FR"
            },
            "required": true,
            "name": "country",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WrappedCountryData"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Code indicating why Wrapped data could not be found",
                      "example": "NOT_COMPUTED"
                    }
                  },
                  "required": [
                    "code"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/wrapped/global": {
      "get": {
        "tags": [
          "wrapped"
        ],
        "description": "Retrieves Wrapped global data",
        "parameters": [
          {
            "schema": {
              "type": "integer",
              "nullable": true,
              "description": "Year to retrieve Wrapped data for",
              "example": 2022
            },
            "required": false,
            "name": "year",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WrappedGlobalData"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Code indicating why Wrapped data could not be found",
                      "example": "NOT_COMPUTED"
                    }
                  },
                  "required": [
                    "code"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/wrapped/player": {
      "get": {
        "tags": [
          "wrapped"
        ],
        "description": "Retrieves Wrapped player data",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "integer",
              "nullable": true,
              "description": "Year to retrieve Wrapped data for",
              "example": 2022
            },
            "required": false,
            "name": "year",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "UUID to assume the player as, if they have permission to assume other players"
            },
            "required": false,
            "name": "assumeUuid",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "The user's JWT token"
            },
            "required": true,
            "name": "Authorization",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WrappedPlayerData"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Code indicating why authentication failed",
                      "example": "JWT_AUTHENTICATION_FAILED"
                    }
                  },
                  "required": [
                    "code"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Code indicating why Wrapped data could not be found",
                      "example": "NOT_COMPUTED"
                    }
                  },
                  "required": [
                    "code"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/wrapped/server": {
      "get": {
        "tags": [
          "wrapped"
        ],
        "description": "Retrieves Wrapped server data",
        "parameters": [
          {
            "schema": {
              "type": "integer",
              "nullable": true,
              "description": "Year to retrieve Wrapped data for",
              "example": 2022
            },
            "required": false,
            "name": "year",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "ServerMappings ID to retrieve Wrapped data for",
              "example": "hypixel"
            },
            "required": true,
            "name": "serverMappingsId",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WrappedServerData"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Code indicating why Wrapped data could not be found",
                      "example": "NOT_COMPUTED"
                    }
                  },
                  "required": [
                    "code"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/live-experience/heartbeat": {
      "post": {
        "tags": [
          "live-experience"
        ],
        "description": "Heartbeat for a live experience server",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Server ID"
                  },
                  "heartbeatKey": {
                    "type": "string",
                    "description": "Secret key for authenticating server requests"
                  },
                  "state": {
                    "type": "string",
                    "enum": [
                      "BOOTING",
                      "JOINABLE",
                      "DRAINING"
                    ],
                    "description": "State of the server"
                  },
                  "joinAddress": {
                    "type": "string",
                    "description": "Minecraft address that players connect with"
                  },
                  "joinPort": {
                    "type": "integer",
                    "description": "Minecraft port that players connect with"
                  },
                  "onlinePlayers": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Minecraft UUID"
                    },
                    "description": "Minecraft UUIDs that are currently online"
                  },
                  "softMaxPlayers": {
                    "type": "integer",
                    "description": "Max number of players that can join this server under normal circumstances"
                  },
                  "hardMaxPlayers": {
                    "type": "integer",
                    "description": "Max number of players that can join this server when including staff/friend joins"
                  }
                },
                "required": [
                  "id",
                  "heartbeatKey",
                  "state",
                  "joinAddress",
                  "joinPort",
                  "onlinePlayers",
                  "softMaxPlayers",
                  "hardMaxPlayers"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the heartbeat was successful"
                    },
                    "trigger_drain": {
                      "type": "boolean",
                      "description": "If we should trigger the server to start draining"
                    }
                  },
                  "required": [
                    "success",
                    "trigger_drain"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the heartbeat was successful"
                    },
                    "trigger_drain": {
                      "type": "boolean",
                      "description": "If we should trigger the server to start draining"
                    }
                  },
                  "required": [
                    "success",
                    "trigger_drain"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/live-experience/login": {
      "post": {
        "tags": [
          "live-experience"
        ],
        "description": "Player join for a live experience server",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "heartbeatKey": {
                    "type": "string",
                    "description": "Secret key for authenticating server requests"
                  },
                  "playerUuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Minecraft UUID"
                  }
                },
                "required": [
                  "heartbeatKey",
                  "playerUuid"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "player": {
                      "type": "object",
                      "properties": {
                        "has_lunar_plus": {
                          "type": "boolean",
                          "description": "If this player has Lunar+"
                        }
                      },
                      "required": [
                        "has_lunar_plus"
                      ],
                      "additionalProperties": false,
                      "description": "Metadata about the player joining"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Why we failed to authenticate"
                    }
                  },
                  "required": [
                    "code"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/live-experience/objective-completed": {
      "post": {
        "tags": [
          "live-experience"
        ],
        "description": "Record objective completion for a player on a live experience",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "heartbeatKey": {
                    "type": "string",
                    "description": "Secret key for authenticating server requests"
                  },
                  "playerUuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Minecraft UUID"
                  }
                },
                "required": [
                  "heartbeatKey",
                  "playerUuid"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the request was successful"
                    }
                  },
                  "required": [
                    "success"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If the request was successful"
                    }
                  },
                  "required": [
                    "success"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/fabric/v2/versions/loader/{gameVersion}": {
      "get": {
        "tags": [
          "fabric"
        ],
        "description": "Get the fabric loader versions compatible with the specified game version",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "The Minecraft game version",
              "example": "1.20.2"
            },
            "required": true,
            "description": "The Minecraft game version",
            "name": "gameVersion",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "description": "HWID of the requester",
              "deprecated": true
            },
            "required": false,
            "name": "hwid",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "HWID Private of the requester",
              "deprecated": true
            },
            "required": false,
            "name": "hwid_private",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "Installation ID of the requester",
              "example": "00000000-0000-0000-0000-000000000000"
            },
            "required": true,
            "name": "installation_id",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Operating system of the requester",
              "example": "win32"
            },
            "required": true,
            "name": "os",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Operating system release of the requester",
              "example": "10.0.19045"
            },
            "required": true,
            "name": "os_release",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "CPU Architecture of the requester",
              "example": "x64"
            },
            "required": true,
            "name": "arch",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Current launcher version of the requester"
            },
            "required": true,
            "name": "launcher_version",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "The list of fabric loader versions"
                  },
                  "description": "The list of fabric loader versions",
                  "example": [
                    "0.15.7",
                    "0.15.6",
                    "0.15.5",
                    "0.15.4",
                    "0.15.3",
                    "0.15.2",
                    "0.15.1",
                    "0.15.0"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/webstore/metadata": {
      "get": {
        "tags": [
          "webstore"
        ],
        "description": "Lunar Client Store metadata lookup",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "alert": {
                      "type": "object",
                      "nullable": true,
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "ID of the alert"
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of the alert"
                        },
                        "text": {
                          "type": "string",
                          "description": "Contents of the alert"
                        },
                        "color": {
                          "type": "string",
                          "description": "Color variant of the alert"
                        },
                        "icon": {
                          "type": "string",
                          "description": "Icon for this alert"
                        },
                        "dismissable": {
                          "type": "boolean",
                          "description": "If this alert can be dismissed"
                        },
                        "link": {
                          "type": "string",
                          "format": "uri",
                          "description": "Whether the alert is clickable and should open up a link"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "text",
                        "color",
                        "icon",
                        "dismissable"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "alert"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/webstore/cosmetics-by-package": {
      "get": {
        "tags": [
          "site",
          "pics"
        ],
        "description": "Package lookup",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "The package to lookup."
            },
            "required": true,
            "name": "packageId",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "COSMETIC"
                                ],
                                "description": "The type of the item."
                              },
                              "data": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "modelType": {
                                        "type": "string",
                                        "enum": [
                                          "default"
                                        ],
                                        "description": "The type of the cosmetic"
                                      },
                                      "type": {
                                        "type": "string",
                                        "description": "The type of the cosmetic"
                                      },
                                      "transformations": {
                                        "type": "array",
                                        "items": {
                                          "nullable": true
                                        },
                                        "description": "The transformations of the cosmetic"
                                      },
                                      "texture": {
                                        "anyOf": [
                                          {
                                            "type": "string",
                                            "description": "Direct path to the hash"
                                          },
                                          {
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string",
                                              "description": "Condition for the hash to be applied"
                                            },
                                            "description": "Map of paths to conditions"
                                          },
                                          {
                                            "nullable": true
                                          }
                                        ],
                                        "description": "The texture of the cosmetic"
                                      },
                                      "meta": {
                                        "anyOf": [
                                          {
                                            "type": "string",
                                            "description": "Direct path to the hash"
                                          },
                                          {
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string",
                                              "description": "Condition for the hash to be applied"
                                            },
                                            "description": "Map of paths to conditions"
                                          },
                                          {
                                            "nullable": true
                                          }
                                        ],
                                        "description": "The meta of the cosmetic"
                                      },
                                      "model": {
                                        "anyOf": [
                                          {
                                            "type": "string",
                                            "description": "Direct path to the hash"
                                          },
                                          {
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string",
                                              "description": "Condition for the hash to be applied"
                                            },
                                            "description": "Map of paths to conditions"
                                          },
                                          {
                                            "nullable": true
                                          }
                                        ],
                                        "description": "The model of the cosmetic. Can be a single path or a map of paths to conditions"
                                      },
                                      "extra": {
                                        "nullable": true,
                                        "description": "The extra data of the cosmetic"
                                      },
                                      "morph": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "nullable": true,
                                            "description": "The id of the morph"
                                          },
                                          "duration": {
                                            "type": "number",
                                            "nullable": true,
                                            "description": "The duration of the morph"
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "duration"
                                        ],
                                        "additionalProperties": false,
                                        "description": "The morph of the cosmetic"
                                      }
                                    },
                                    "required": [
                                      "modelType",
                                      "type",
                                      "transformations",
                                      "texture",
                                      "meta",
                                      "model",
                                      "morph"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "modelType": {
                                        "type": "string",
                                        "enum": [
                                          "json"
                                        ],
                                        "description": "The type of the cosmetic"
                                      },
                                      "type": {
                                        "type": "string",
                                        "description": "The type of the cosmetic"
                                      },
                                      "transformations": {
                                        "type": "array",
                                        "items": {
                                          "nullable": true
                                        },
                                        "description": "The transformations of the cosmetic"
                                      },
                                      "texture": {
                                        "anyOf": [
                                          {
                                            "type": "string",
                                            "description": "Direct path to the hash"
                                          },
                                          {
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string",
                                              "description": "Condition for the hash to be applied"
                                            },
                                            "description": "Map of paths to conditions"
                                          },
                                          {
                                            "nullable": true
                                          }
                                        ],
                                        "description": "The texture of the cosmetic"
                                      },
                                      "meta": {
                                        "anyOf": [
                                          {
                                            "type": "string",
                                            "description": "Direct path to the hash"
                                          },
                                          {
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string",
                                              "description": "Condition for the hash to be applied"
                                            },
                                            "description": "Map of paths to conditions"
                                          },
                                          {
                                            "nullable": true
                                          }
                                        ],
                                        "description": "The meta of the cosmetic"
                                      },
                                      "model": {
                                        "anyOf": [
                                          {
                                            "type": "string",
                                            "description": "Direct path to the hash"
                                          },
                                          {
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string",
                                              "description": "Condition for the hash to be applied"
                                            },
                                            "description": "Map of paths to conditions"
                                          },
                                          {
                                            "nullable": true
                                          }
                                        ],
                                        "description": "The model of the cosmetic. Can be a single path or a map of paths to conditions"
                                      },
                                      "extra": {
                                        "nullable": true,
                                        "description": "The extra data of the cosmetic"
                                      },
                                      "morph": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "nullable": true,
                                            "description": "The id of the morph"
                                          },
                                          "duration": {
                                            "type": "number",
                                            "nullable": true,
                                            "description": "The duration of the morph"
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "duration"
                                        ],
                                        "additionalProperties": false,
                                        "description": "The morph of the cosmetic"
                                      },
                                      "textureMeta": {
                                        "anyOf": [
                                          {
                                            "type": "string",
                                            "description": "Direct path to the hash"
                                          },
                                          {
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string",
                                              "description": "Condition for the hash to be applied"
                                            },
                                            "description": "Map of paths to conditions"
                                          },
                                          {
                                            "nullable": true
                                          }
                                        ],
                                        "description": "The texture meta of the cosmetic"
                                      }
                                    },
                                    "required": [
                                      "modelType",
                                      "type",
                                      "transformations",
                                      "texture",
                                      "meta",
                                      "model",
                                      "morph",
                                      "textureMeta"
                                    ],
                                    "additionalProperties": false
                                  }
                                ],
                                "description": "The data of the cosmetic."
                              }
                            },
                            "required": [
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "EMOTE"
                                ],
                                "description": "The type of the item."
                              },
                              "data": {
                                "type": "object",
                                "properties": {},
                                "description": "The data of the emote."
                              }
                            },
                            "required": [
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "JAM"
                                ],
                                "description": "The type of the item."
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "image": {
                                    "type": "string",
                                    "nullable": true,
                                    "format": "uri",
                                    "description": "The image URL of the jam."
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the jam."
                                  },
                                  "song": {
                                    "type": "string",
                                    "description": "The song that the jam is from"
                                  },
                                  "artist": {
                                    "type": "string",
                                    "description": "The artists of the jam"
                                  },
                                  "album": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The album that the jam is from"
                                  },
                                  "genres": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "description": "The genre of the jam"
                                    },
                                    "description": "The genres of the jam"
                                  },
                                  "durationMillis": {
                                    "type": "number",
                                    "description": "The duration of the jam in milliseconds"
                                  },
                                  "previewUrl": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "The preview URL of the jam"
                                  }
                                },
                                "required": [
                                  "image",
                                  "name",
                                  "song",
                                  "artist",
                                  "album",
                                  "genres",
                                  "durationMillis",
                                  "previewUrl"
                                ],
                                "additionalProperties": false,
                                "description": "The data of the jam."
                              }
                            },
                            "required": [
                              "type",
                              "data"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      },
                      "description": "The items in the package."
                    },
                    "global_extras": {
                      "type": "object",
                      "properties": {
                        "molang": {
                          "type": "object",
                          "properties": {
                            "constants": {
                              "type": "string",
                              "nullable": true,
                              "description": "The Molang constants, for the cosmetic"
                            },
                            "functions": {
                              "type": "string",
                              "nullable": true,
                              "description": "The Molang functions, for the cosmetic"
                            }
                          },
                          "required": [
                            "constants",
                            "functions"
                          ],
                          "additionalProperties": false,
                          "description": "The Molang data for the cosmetic"
                        }
                      },
                      "required": [
                        "molang"
                      ],
                      "additionalProperties": false,
                      "description": "The global extras (molang) of the package."
                    },
                    "particles": {
                      "type": "object",
                      "properties": {
                        "morphs": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string",
                                "description": "Name of the morph",
                                "example": "Air"
                              },
                              "description": {
                                "type": "string",
                                "description": "Description of the Morph, usually the emote it's attributed to",
                                "example": "Avatar: Air bending"
                              },
                              "morphs": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "morph": {
                                      "type": "string",
                                      "description": "Stringified JSON object of the particle system",
                                      "example": "{Scheme:\"avatar_air1\",Name:\"snowstorm\"}"
                                    },
                                    "bone": {
                                      "type": "string",
                                      "description": "The bone that the particle is attached to",
                                      "example": "low_right_arm.end"
                                    },
                                    "start": {
                                      "type": "number",
                                      "description": "The start frame of the particle in ticks",
                                      "example": 30
                                    },
                                    "length": {
                                      "type": "number",
                                      "description": "The length of the particle in ticks",
                                      "example": 15
                                    },
                                    "target": {
                                      "type": "boolean",
                                      "description": "TODO: Unknown"
                                    },
                                    "fade_in": {
                                      "type": "number",
                                      "description": "The length of the fade in of the particle in ticks",
                                      "example": 0
                                    },
                                    "fade_out": {
                                      "type": "number",
                                      "description": "The length of the fade out of the particle in ticks",
                                      "example": 0
                                    },
                                    "translate": {
                                      "type": "array",
                                      "items": {
                                        "type": "number",
                                        "description": "X, Y, or Z value",
                                        "example": 0
                                      },
                                      "description": "The X, Y, Z translation of the particle from the bone pivot",
                                      "example": [
                                        0,
                                        0,
                                        0
                                      ]
                                    },
                                    "rotation": {
                                      "type": "array",
                                      "items": {
                                        "type": "number",
                                        "description": "X, Y, or Z value",
                                        "example": 0
                                      },
                                      "description": "The X, Y, Z rotation of the particle from the bone pivot",
                                      "example": [
                                        0,
                                        0,
                                        0
                                      ]
                                    },
                                    "scale": {
                                      "type": "array",
                                      "items": {
                                        "type": "number",
                                        "description": "X, Y, or Z value",
                                        "example": 0
                                      },
                                      "description": "The X, Y, Z scale of the particle",
                                      "example": [
                                        1,
                                        1,
                                        1
                                      ]
                                    }
                                  },
                                  "required": [
                                    "morph",
                                    "bone",
                                    "start",
                                    "length",
                                    "target",
                                    "fade_in",
                                    "fade_out"
                                  ],
                                  "additionalProperties": false
                                },
                                "description": "Associated inner morphs (particle systems) of the whole morph"
                              }
                            },
                            "required": [
                              "title",
                              "description",
                              "morphs"
                            ],
                            "additionalProperties": false
                          },
                          "description": "Morphs mapping"
                        },
                        "schemes": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string",
                            "nullable": true,
                            "description": "Scheme"
                          },
                          "description": "Particle schemes mapping"
                        },
                        "textures": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string",
                            "description": "Texture"
                          },
                          "description": "Particle textures mapping"
                        }
                      },
                      "required": [
                        "morphs",
                        "schemes",
                        "textures"
                      ],
                      "additionalProperties": false,
                      "description": "The particles of the package."
                    }
                  },
                  "required": [
                    "items"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/webstore/package-by-cosmetic": {
      "get": {
        "tags": [
          "webstore",
          "pics"
        ],
        "description": "Retrieve active webstore packages for cosmetics and emotes by ID",
        "parameters": [
          {
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "nullable": true,
                  "description": "Single Cosmetic ID"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "nullable": true,
                    "description": "Single Cosmetic ID"
                  },
                  "description": "Array of Cosmetic IDs"
                },
                {
                  "nullable": true
                }
              ],
              "description": "List of Cosmetic IDs to query for packages."
            },
            "required": false,
            "description": "List of Cosmetic IDs to query for packages.",
            "name": "cosmeticId",
            "in": "query"
          },
          {
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "nullable": true,
                  "description": "Single Emote ID"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "nullable": true,
                    "description": "Single Emote ID"
                  },
                  "description": "Array of Emote IDs"
                },
                {
                  "nullable": true
                }
              ],
              "description": "List of Emote IDs to query for packages."
            },
            "required": false,
            "description": "List of Emote IDs to query for packages.",
            "name": "emoteId",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "default": "false",
              "description": "\"true\" if you want to exclude bundles from the returning result"
            },
            "required": false,
            "description": "\"true\" if you want to exclude bundles from the returning result",
            "name": "excludeBundles",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "cosmetic"
                            ],
                            "description": "Type of the package"
                          },
                          "cosmetic": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "number",
                                "description": "ID of the cosmetic/emote"
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of the cosmetic/emote"
                              },
                              "image": {
                                "type": "string",
                                "nullable": true,
                                "description": "Image URL for the cosmetic/emote"
                              },
                              "category": {
                                "type": "string",
                                "enum": [
                                  "cloak",
                                  "dragon_wings",
                                  "hat",
                                  "bandanna",
                                  "mask",
                                  "bodywear",
                                  "backpack",
                                  "neckwear",
                                  "glasses",
                                  "belts",
                                  "pet",
                                  "shoes",
                                  "suits",
                                  "event",
                                  "auras",
                                  "wristwear",
                                  "shields",
                                  "emote"
                                ],
                                "description": "The category this cosmetic belongs to"
                              }
                            },
                            "required": [
                              "id",
                              "name",
                              "image",
                              "category"
                            ],
                            "additionalProperties": false,
                            "description": "Information about the cosmetic"
                          },
                          "package": {
                            "type": "object",
                            "properties": {
                              "uniqueId": {
                                "type": "string",
                                "description": "Store Package ID"
                              },
                              "title": {
                                "type": "string",
                                "description": "Name of the package"
                              },
                              "url": {
                                "type": "string",
                                "description": "URL to prompt user to this package"
                              },
                              "imageUrl": {
                                "type": "string",
                                "description": "Image URL for the store package"
                              },
                              "description": {
                                "type": "string",
                                "description": "Description of the store package"
                              },
                              "price": {
                                "type": "number",
                                "description": "Price of the package"
                              },
                              "categories": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A category on the store"
                                },
                                "description": "List of categories that this item is viewable in"
                              }
                            },
                            "required": [
                              "uniqueId",
                              "title",
                              "url",
                              "imageUrl",
                              "description",
                              "price",
                              "categories"
                            ],
                            "additionalProperties": false,
                            "description": "Information about the cosmetic's package"
                          }
                        },
                        "required": [
                          "type",
                          "cosmetic"
                        ],
                        "additionalProperties": false,
                        "description": "Information found for the given cosmetic ID"
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "emote"
                            ],
                            "description": "Type of the package"
                          },
                          "emote": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "number",
                                "description": "ID of the cosmetic/emote"
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of the cosmetic/emote"
                              },
                              "image": {
                                "type": "string",
                                "nullable": true,
                                "description": "Image URL for the cosmetic/emote"
                              },
                              "category": {
                                "type": "string",
                                "enum": [
                                  "cloak",
                                  "dragon_wings",
                                  "hat",
                                  "bandanna",
                                  "mask",
                                  "bodywear",
                                  "backpack",
                                  "neckwear",
                                  "glasses",
                                  "belts",
                                  "pet",
                                  "shoes",
                                  "suits",
                                  "event",
                                  "auras",
                                  "wristwear",
                                  "shields",
                                  "emote"
                                ],
                                "description": "The category this cosmetic belongs to"
                              }
                            },
                            "required": [
                              "id",
                              "name",
                              "image",
                              "category"
                            ],
                            "additionalProperties": false,
                            "description": "Information about the emote"
                          },
                          "package": {
                            "type": "object",
                            "properties": {
                              "uniqueId": {
                                "type": "string",
                                "description": "Store Package ID"
                              },
                              "title": {
                                "type": "string",
                                "description": "Name of the package"
                              },
                              "url": {
                                "type": "string",
                                "description": "URL to prompt user to this package"
                              },
                              "imageUrl": {
                                "type": "string",
                                "description": "Image URL for the store package"
                              },
                              "description": {
                                "type": "string",
                                "description": "Description of the store package"
                              },
                              "price": {
                                "type": "number",
                                "description": "Price of the package"
                              },
                              "categories": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A category on the store"
                                },
                                "description": "List of categories that this item is viewable in"
                              }
                            },
                            "required": [
                              "uniqueId",
                              "title",
                              "url",
                              "imageUrl",
                              "description",
                              "price",
                              "categories"
                            ],
                            "additionalProperties": false,
                            "description": "Information about the emote's package"
                          }
                        },
                        "required": [
                          "type",
                          "emote"
                        ],
                        "additionalProperties": false,
                        "description": "Information found for the given emote ID"
                      }
                    ],
                    "description": "Information found about the given cosmetic/emote ID"
                  },
                  "description": "Cosmetics from the given cosmetic/emote IDs, with packages, entries are not included if no package is found."
                }
              }
            }
          }
        }
      }
    },
    "/webstore/free-product-code": {
      "post": {
        "tags": [
          "webstore"
        ],
        "description": "Generate a free product code",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "discordUserId": {
                    "type": "number",
                    "description": "Discord user ID generating this code"
                  }
                },
                "required": [
                  "discordUserId"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Generated coupon code"
                    }
                  },
                  "required": [
                    "code"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "Details about authorization fail"
                    }
                  },
                  "required": [
                    "detail"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/webstore/playerVerification": {
      "get": {
        "tags": [
          "webstore"
        ],
        "description": "Webhook to validate player info for store logins",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$|^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
              "description": "UUID of the player logging into the store (with or without dashes)"
            },
            "required": true,
            "name": "uuid",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "verified": {
                          "type": "boolean",
                          "description": "If the player was able to be verified"
                        },
                        "error": {
                          "type": "string",
                          "description": "A message explaining why the player could not be verified"
                        }
                      },
                      "required": [
                        "verified",
                        "error"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "verified": {
                          "type": "boolean",
                          "description": "If the player was able to be verified"
                        },
                        "plus": {
                          "type": "boolean",
                          "description": "If the user has Lunar+"
                        },
                        "ownsEmote": {
                          "type": "boolean",
                          "description": "If the user owns the emote"
                        },
                        "ownsCosmetic": {
                          "type": "boolean",
                          "description": "If the user owns the cosmetic"
                        },
                        "ownsJam": {
                          "type": "boolean",
                          "description": "If the user owns the jam"
                        }
                      },
                      "required": [
                        "verified",
                        "plus",
                        "ownsEmote",
                        "ownsCosmetic",
                        "ownsJam"
                      ],
                      "additionalProperties": false
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/webstore/webhook": {
      "post": {
        "tags": [
          "webstore"
        ],
        "description": "Webhook to process store events",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Webhook ID"
                      },
                      "date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Webhook timestamp"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "validation.webhook"
                        ],
                        "description": "Validation type"
                      }
                    },
                    "required": [
                      "id",
                      "date",
                      "type"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Webhook ID"
                      },
                      "date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Webhook timestamp"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "payment.completed",
                          "payment.declined",
                          "payment.refunded",
                          "payment.dispute.opened",
                          "payment.dispute.won",
                          "payment.dispute.lost",
                          "payment.dispute.closed"
                        ],
                        "description": "Type of event included in this webhook"
                      },
                      "subject": {
                        "type": "object",
                        "properties": {
                          "transaction_id": {
                            "type": "string",
                            "description": "Tebex transaction ID assigned to this payment"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "description": "When this payment was created"
                          },
                          "creator_code": {
                            "type": "object",
                            "nullable": true,
                            "enum": [
                              null
                            ],
                            "description": "Creator code used for this payment"
                          },
                          "custom": {
                            "type": "object",
                            "nullable": true,
                            "properties": {
                              "utm_source": {
                                "type": "string",
                                "nullable": true,
                                "description": "UTM Source"
                              },
                              "utm_medium": {
                                "type": "string",
                                "nullable": true,
                                "description": "UTM Medium"
                              },
                              "utm_campaign": {
                                "type": "string",
                                "nullable": true,
                                "description": "UTM Campaign"
                              },
                              "utm_term": {
                                "type": "string",
                                "nullable": true,
                                "description": "UTM Term"
                              },
                              "utm_content": {
                                "type": "string",
                                "nullable": true,
                                "description": "UTM Content"
                              },
                              "gift": {
                                "type": "string",
                                "nullable": true,
                                "description": "Gift"
                              }
                            },
                            "additionalProperties": {
                              "type": "string",
                              "nullable": true,
                              "description": "Value"
                            },
                            "description": "Custom key-value data added via the API, including UTM parameters and arbitrary keys"
                          },
                          "status": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "number",
                                "description": "Status ID"
                              },
                              "description": {
                                "type": "string",
                                "enum": [
                                  "Complete",
                                  "Refund",
                                  "Chargeback",
                                  "Declined"
                                ],
                                "description": "Status description"
                              }
                            },
                            "required": [
                              "id",
                              "description"
                            ],
                            "description": "Status of the payment"
                          },
                          "price": {
                            "type": "object",
                            "properties": {
                              "amount": {
                                "type": "number",
                                "description": "Amount of currency"
                              },
                              "base_currency": {
                                "type": "string",
                                "nullable": true,
                                "description": "Base currency used for amount"
                              },
                              "base_currency_price": {
                                "type": "number",
                                "nullable": true,
                                "description": "Amount of base currency"
                              },
                              "currency": {
                                "type": "string",
                                "description": "Currency used for amount"
                              }
                            },
                            "required": [
                              "amount",
                              "base_currency",
                              "base_currency_price",
                              "currency"
                            ],
                            "description": "Info about the list price for this payment"
                          },
                          "price_paid": {
                            "type": "object",
                            "properties": {
                              "amount": {
                                "type": "number",
                                "description": "Amount of currency"
                              },
                              "base_currency": {
                                "type": "string",
                                "nullable": true,
                                "description": "Base currency used for amount"
                              },
                              "base_currency_price": {
                                "type": "number",
                                "nullable": true,
                                "description": "Amount of base currency"
                              },
                              "currency": {
                                "type": "string",
                                "description": "Currency used for amount"
                              }
                            },
                            "required": [
                              "amount",
                              "base_currency",
                              "base_currency_price",
                              "currency"
                            ],
                            "description": "Info about the price paid for this payment"
                          },
                          "payment_sequence": {
                            "type": "string",
                            "enum": [
                              "oneoff",
                              "mixed",
                              "first",
                              "recurring"
                            ],
                            "description": "If this payment is part of a subscription"
                          },
                          "customer": {
                            "type": "object",
                            "properties": {
                              "first_name": {
                                "type": "string",
                                "description": "Customer first name"
                              },
                              "last_name": {
                                "type": "string",
                                "description": "Customer last name"
                              },
                              "email": {
                                "type": "string",
                                "description": "Customer email"
                              },
                              "username": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Minecraft UUID"
                                  },
                                  "username": {
                                    "type": "string",
                                    "description": "Minecraft username"
                                  }
                                },
                                "required": [
                                  "id",
                                  "username"
                                ],
                                "description": "Customer UUID and username"
                              },
                              "ip": {
                                "type": "string",
                                "description": "Customer's IP address used at checkout"
                              },
                              "marketing_consent": {
                                "type": "boolean",
                                "description": "If the customer has provided marketing consent"
                              },
                              "country": {
                                "type": "string",
                                "description": "Customer's country"
                              },
                              "postal_code": {
                                "type": "string",
                                "nullable": true,
                                "description": "Customer's postal code"
                              }
                            },
                            "required": [
                              "first_name",
                              "last_name",
                              "email",
                              "username",
                              "ip",
                              "marketing_consent",
                              "country",
                              "postal_code"
                            ],
                            "description": "Customer making this payment"
                          },
                          "gift_cards": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {}
                            },
                            "description": "Gift cards used on this payment"
                          },
                          "coupons": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "string",
                                  "description": "Coupon code entered by user"
                                },
                                "discount_type": {
                                  "type": "string",
                                  "enum": [
                                    "percentage",
                                    "amount",
                                    "value"
                                  ],
                                  "description": "Type of discount"
                                },
                                "discount_amount": {
                                  "type": "number",
                                  "description": "Amount of discount, if type is amount"
                                },
                                "discount_percentage": {
                                  "type": "number",
                                  "description": "Percentage discount, if type is percentage"
                                },
                                "id": {
                                  "type": "integer",
                                  "description": "Coupon code ID in Tebex"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "What this coupon is effective on"
                                }
                              },
                              "required": [
                                "code",
                                "discount_type",
                                "discount_amount",
                                "discount_percentage",
                                "id",
                                "type"
                              ],
                              "description": "Coupon used on this payment"
                            },
                            "description": "Coupons used on this payment"
                          },
                          "recurring_payment_reference": {
                            "type": "string",
                            "nullable": true,
                            "description": "Subscription this payment is part of, if any"
                          },
                          "revenue_share": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {}
                            },
                            "description": "Other Tebex wallets this payment is shared with"
                          },
                          "decline_reason": {
                            "type": "object",
                            "nullable": true,
                            "properties": {
                              "code": {
                                "type": "string",
                                "description": "Code for decline"
                              },
                              "message": {
                                "type": "string",
                                "description": "Friendly message for decline"
                              }
                            },
                            "required": [
                              "code",
                              "message"
                            ],
                            "description": "Why this payment was declined, if it was"
                          },
                          "payment_method": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of payment method"
                              },
                              "refundable": {
                                "type": "boolean",
                                "description": "If payment method supports refunds"
                              }
                            },
                            "required": [
                              "name",
                              "refundable"
                            ],
                            "description": "Payment method used to make this payment"
                          },
                          "fees": {
                            "type": "object",
                            "properties": {
                              "gateway": {
                                "type": "object",
                                "properties": {
                                  "amount": {
                                    "type": "number",
                                    "description": "Amount of currency"
                                  },
                                  "base_currency": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "Base currency used for amount"
                                  },
                                  "base_currency_price": {
                                    "type": "number",
                                    "nullable": true,
                                    "description": "Amount of base currency"
                                  },
                                  "currency": {
                                    "type": "string",
                                    "description": "Currency used for amount"
                                  }
                                },
                                "required": [
                                  "amount",
                                  "base_currency",
                                  "base_currency_price",
                                  "currency"
                                ],
                                "description": "Fee added by the payment gateway"
                              },
                              "tax": {
                                "type": "object",
                                "properties": {
                                  "amount": {
                                    "type": "number",
                                    "description": "Amount of currency"
                                  },
                                  "base_currency": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "Base currency used for amount"
                                  },
                                  "base_currency_price": {
                                    "type": "number",
                                    "nullable": true,
                                    "description": "Amount of base currency"
                                  },
                                  "currency": {
                                    "type": "string",
                                    "description": "Currency used for amount"
                                  }
                                },
                                "required": [
                                  "amount",
                                  "base_currency",
                                  "base_currency_price",
                                  "currency"
                                ],
                                "description": "Tax added by the government"
                              }
                            },
                            "required": [
                              "gateway",
                              "tax"
                            ],
                            "description": "Fees added to this payment"
                          },
                          "products": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "description": "Tebex package ID"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Tebex package name"
                                },
                                "quantity": {
                                  "type": "integer",
                                  "description": "Quantity of package purchased"
                                },
                                "expires_at": {
                                  "type": "string",
                                  "nullable": true,
                                  "format": "date-time",
                                  "description": "When the items in this product expire"
                                },
                                "paid_price": {
                                  "type": "object",
                                  "properties": {
                                    "amount": {
                                      "type": "number",
                                      "description": "Amount of currency"
                                    },
                                    "base_currency": {
                                      "type": "string",
                                      "nullable": true,
                                      "description": "Base currency used for amount"
                                    },
                                    "base_currency_price": {
                                      "type": "number",
                                      "nullable": true,
                                      "description": "Amount of base currency"
                                    },
                                    "currency": {
                                      "type": "string",
                                      "description": "Currency used for amount"
                                    }
                                  },
                                  "required": [
                                    "amount",
                                    "base_currency",
                                    "base_currency_price",
                                    "currency"
                                  ],
                                  "description": "Price for this package"
                                },
                                "base_price": {
                                  "type": "object",
                                  "properties": {
                                    "amount": {
                                      "type": "number",
                                      "description": "Amount of currency"
                                    },
                                    "base_currency": {
                                      "type": "string",
                                      "nullable": true,
                                      "description": "Base currency used for amount"
                                    },
                                    "base_currency_price": {
                                      "type": "number",
                                      "nullable": true,
                                      "description": "Amount of base currency"
                                    },
                                    "currency": {
                                      "type": "string",
                                      "description": "Currency used for amount"
                                    }
                                  },
                                  "required": [
                                    "amount",
                                    "base_currency",
                                    "base_currency_price",
                                    "currency"
                                  ],
                                  "description": "Price for this package excluding any sales/discounts/etc."
                                },
                                "variables": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "identifier": {
                                        "type": "string",
                                        "description": "Variable identifier"
                                      },
                                      "option": {
                                        "type": "string",
                                        "description": "Variable selected value"
                                      }
                                    },
                                    "required": [
                                      "identifier",
                                      "option"
                                    ],
                                    "description": "Variable set on a Tebex package"
                                  },
                                  "description": "Variables set on this package"
                                },
                                "username": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "Minecraft UUID"
                                    },
                                    "username": {
                                      "type": "string",
                                      "description": "Minecraft username"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "username"
                                  ],
                                  "description": "Receiver UUID and username"
                                },
                                "custom": {
                                  "type": "object",
                                  "nullable": true,
                                  "properties": {
                                    "utm_source": {
                                      "type": "string",
                                      "nullable": true,
                                      "description": "UTM Source"
                                    },
                                    "utm_medium": {
                                      "type": "string",
                                      "nullable": true,
                                      "description": "UTM Medium"
                                    },
                                    "utm_campaign": {
                                      "type": "string",
                                      "nullable": true,
                                      "description": "UTM Campaign"
                                    },
                                    "utm_term": {
                                      "type": "string",
                                      "nullable": true,
                                      "description": "UTM Term"
                                    },
                                    "utm_content": {
                                      "type": "string",
                                      "nullable": true,
                                      "description": "UTM Content"
                                    },
                                    "gift": {
                                      "type": "string",
                                      "nullable": true,
                                      "description": "Gift"
                                    }
                                  },
                                  "additionalProperties": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "Value"
                                  },
                                  "description": "Custom key-value data added via the API, including UTM parameters and arbitrary keys"
                                },
                                "type": {
                                  "type": "string",
                                  "nullable": true,
                                  "enum": [
                                    "single",
                                    "subscription"
                                  ],
                                  "description": "Type of the product being purchased"
                                },
                                "servers": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "integer",
                                        "description": "Server ID"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "Server name"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "name"
                                    ],
                                    "description": "Server to deliver this product on"
                                  },
                                  "description": "Servers to deliver this product on"
                                }
                              },
                              "required": [
                                "id",
                                "name",
                                "quantity",
                                "expires_at",
                                "paid_price",
                                "base_price",
                                "variables",
                                "username",
                                "custom",
                                "servers"
                              ],
                              "description": "Tebex package in this payment"
                            },
                            "description": "Tebex packages in this payment"
                          }
                        },
                        "required": [
                          "transaction_id",
                          "created_at",
                          "custom",
                          "status",
                          "price",
                          "price_paid",
                          "payment_sequence",
                          "customer",
                          "gift_cards",
                          "coupons",
                          "recurring_payment_reference",
                          "revenue_share",
                          "decline_reason",
                          "payment_method",
                          "fees",
                          "products"
                        ],
                        "description": "Subject of this webhook"
                      }
                    },
                    "required": [
                      "id",
                      "date",
                      "type",
                      "subject"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Webhook ID"
                      },
                      "date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Webhook timestamp"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "recurring-payment.started",
                          "recurring-payment.renewed",
                          "recurring-payment.ended",
                          "recurring-payment.cancellation.requested",
                          "recurring-payment.cancellation.aborted"
                        ],
                        "description": "Type of event included in this webhook"
                      },
                      "subject": {
                        "type": "object",
                        "properties": {
                          "reference": {
                            "type": "string",
                            "description": "Tebex reference assigned to this subscription"
                          },
                          "cancel_reason": {
                            "type": "string",
                            "nullable": true,
                            "description": "Reason for cancelling subscription"
                          },
                          "cancelled_at": {
                            "type": "string",
                            "nullable": true,
                            "format": "date-time",
                            "description": "When this subscription was cancelled"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "description": "When this subscription was created"
                          },
                          "fail_count": {
                            "type": "integer",
                            "description": "Charge failures when trying to renew this subscription"
                          },
                          "next_payment_at": {
                            "type": "string",
                            "format": "date-time",
                            "description": "When the customer will be charged next"
                          },
                          "paused_at": {
                            "type": "string",
                            "nullable": true,
                            "format": "date-time",
                            "description": "When this subscription was paused"
                          },
                          "paused_until": {
                            "type": "string",
                            "nullable": true,
                            "format": "date-time",
                            "description": "When this subscription will be unpaused"
                          },
                          "status": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "number",
                                "description": "Status ID"
                              },
                              "description": {
                                "type": "string",
                                "description": "Status description"
                              }
                            },
                            "required": [
                              "id",
                              "description"
                            ],
                            "description": "Status of the subscription"
                          },
                          "price": {
                            "type": "object",
                            "properties": {
                              "amount": {
                                "type": "number",
                                "description": "Amount of currency"
                              },
                              "base_currency": {
                                "type": "string",
                                "nullable": true,
                                "description": "Base currency used for amount"
                              },
                              "base_currency_price": {
                                "type": "number",
                                "nullable": true,
                                "description": "Amount of base currency"
                              },
                              "currency": {
                                "type": "string",
                                "description": "Currency used for amount"
                              }
                            },
                            "required": [
                              "amount",
                              "base_currency",
                              "base_currency_price",
                              "currency"
                            ],
                            "description": "Info about the price for this subscription"
                          },
                          "initial_payment": {
                            "type": "object",
                            "properties": {
                              "transaction_id": {
                                "type": "string",
                                "description": "Tebex transaction ID assigned to this payment"
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "When this payment was created"
                              },
                              "creator_code": {
                                "type": "object",
                                "nullable": true,
                                "enum": [
                                  null
                                ],
                                "description": "Creator code used for this payment"
                              },
                              "custom": {
                                "type": "object",
                                "nullable": true,
                                "properties": {
                                  "utm_source": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "UTM Source"
                                  },
                                  "utm_medium": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "UTM Medium"
                                  },
                                  "utm_campaign": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "UTM Campaign"
                                  },
                                  "utm_term": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "UTM Term"
                                  },
                                  "utm_content": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "UTM Content"
                                  },
                                  "gift": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "Gift"
                                  }
                                },
                                "additionalProperties": {
                                  "type": "string",
                                  "nullable": true,
                                  "description": "Value"
                                },
                                "description": "Custom key-value data added via the API, including UTM parameters and arbitrary keys"
                              },
                              "status": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "number",
                                    "description": "Status ID"
                                  },
                                  "description": {
                                    "type": "string",
                                    "enum": [
                                      "Complete",
                                      "Refund",
                                      "Chargeback",
                                      "Declined"
                                    ],
                                    "description": "Status description"
                                  }
                                },
                                "required": [
                                  "id",
                                  "description"
                                ],
                                "description": "Status of the payment"
                              },
                              "price": {
                                "type": "object",
                                "properties": {
                                  "amount": {
                                    "type": "number",
                                    "description": "Amount of currency"
                                  },
                                  "base_currency": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "Base currency used for amount"
                                  },
                                  "base_currency_price": {
                                    "type": "number",
                                    "nullable": true,
                                    "description": "Amount of base currency"
                                  },
                                  "currency": {
                                    "type": "string",
                                    "description": "Currency used for amount"
                                  }
                                },
                                "required": [
                                  "amount",
                                  "base_currency",
                                  "base_currency_price",
                                  "currency"
                                ],
                                "description": "Info about the list price for this payment"
                              },
                              "price_paid": {
                                "type": "object",
                                "properties": {
                                  "amount": {
                                    "type": "number",
                                    "description": "Amount of currency"
                                  },
                                  "base_currency": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "Base currency used for amount"
                                  },
                                  "base_currency_price": {
                                    "type": "number",
                                    "nullable": true,
                                    "description": "Amount of base currency"
                                  },
                                  "currency": {
                                    "type": "string",
                                    "description": "Currency used for amount"
                                  }
                                },
                                "required": [
                                  "amount",
                                  "base_currency",
                                  "base_currency_price",
                                  "currency"
                                ],
                                "description": "Info about the price paid for this payment"
                              },
                              "payment_sequence": {
                                "type": "string",
                                "enum": [
                                  "oneoff",
                                  "mixed",
                                  "first",
                                  "recurring"
                                ],
                                "description": "If this payment is part of a subscription"
                              },
                              "customer": {
                                "type": "object",
                                "properties": {
                                  "first_name": {
                                    "type": "string",
                                    "description": "Customer first name"
                                  },
                                  "last_name": {
                                    "type": "string",
                                    "description": "Customer last name"
                                  },
                                  "email": {
                                    "type": "string",
                                    "description": "Customer email"
                                  },
                                  "username": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "Minecraft UUID"
                                      },
                                      "username": {
                                        "type": "string",
                                        "description": "Minecraft username"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "username"
                                    ],
                                    "description": "Customer UUID and username"
                                  },
                                  "ip": {
                                    "type": "string",
                                    "description": "Customer's IP address used at checkout"
                                  },
                                  "marketing_consent": {
                                    "type": "boolean",
                                    "description": "If the customer has provided marketing consent"
                                  },
                                  "country": {
                                    "type": "string",
                                    "description": "Customer's country"
                                  },
                                  "postal_code": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "Customer's postal code"
                                  }
                                },
                                "required": [
                                  "first_name",
                                  "last_name",
                                  "email",
                                  "username",
                                  "ip",
                                  "marketing_consent",
                                  "country",
                                  "postal_code"
                                ],
                                "description": "Customer making this payment"
                              },
                              "gift_cards": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {}
                                },
                                "description": "Gift cards used on this payment"
                              },
                              "coupons": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "string",
                                      "description": "Coupon code entered by user"
                                    },
                                    "discount_type": {
                                      "type": "string",
                                      "enum": [
                                        "percentage",
                                        "amount",
                                        "value"
                                      ],
                                      "description": "Type of discount"
                                    },
                                    "discount_amount": {
                                      "type": "number",
                                      "description": "Amount of discount, if type is amount"
                                    },
                                    "discount_percentage": {
                                      "type": "number",
                                      "description": "Percentage discount, if type is percentage"
                                    },
                                    "id": {
                                      "type": "integer",
                                      "description": "Coupon code ID in Tebex"
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "What this coupon is effective on"
                                    }
                                  },
                                  "required": [
                                    "code",
                                    "discount_type",
                                    "discount_amount",
                                    "discount_percentage",
                                    "id",
                                    "type"
                                  ],
                                  "description": "Coupon used on this payment"
                                },
                                "description": "Coupons used on this payment"
                              },
                              "recurring_payment_reference": {
                                "type": "string",
                                "nullable": true,
                                "description": "Subscription this payment is part of, if any"
                              },
                              "revenue_share": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {}
                                },
                                "description": "Other Tebex wallets this payment is shared with"
                              },
                              "decline_reason": {
                                "type": "object",
                                "nullable": true,
                                "properties": {
                                  "code": {
                                    "type": "string",
                                    "description": "Code for decline"
                                  },
                                  "message": {
                                    "type": "string",
                                    "description": "Friendly message for decline"
                                  }
                                },
                                "required": [
                                  "code",
                                  "message"
                                ],
                                "description": "Why this payment was declined, if it was"
                              },
                              "payment_method": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Name of payment method"
                                  },
                                  "refundable": {
                                    "type": "boolean",
                                    "description": "If payment method supports refunds"
                                  }
                                },
                                "required": [
                                  "name",
                                  "refundable"
                                ],
                                "description": "Payment method used to make this payment"
                              },
                              "fees": {
                                "type": "object",
                                "properties": {
                                  "gateway": {
                                    "type": "object",
                                    "properties": {
                                      "amount": {
                                        "type": "number",
                                        "description": "Amount of currency"
                                      },
                                      "base_currency": {
                                        "type": "string",
                                        "nullable": true,
                                        "description": "Base currency used for amount"
                                      },
                                      "base_currency_price": {
                                        "type": "number",
                                        "nullable": true,
                                        "description": "Amount of base currency"
                                      },
                                      "currency": {
                                        "type": "string",
                                        "description": "Currency used for amount"
                                      }
                                    },
                                    "required": [
                                      "amount",
                                      "base_currency",
                                      "base_currency_price",
                                      "currency"
                                    ],
                                    "description": "Fee added by the payment gateway"
                                  },
                                  "tax": {
                                    "type": "object",
                                    "properties": {
                                      "amount": {
                                        "type": "number",
                                        "description": "Amount of currency"
                                      },
                                      "base_currency": {
                                        "type": "string",
                                        "nullable": true,
                                        "description": "Base currency used for amount"
                                      },
                                      "base_currency_price": {
                                        "type": "number",
                                        "nullable": true,
                                        "description": "Amount of base currency"
                                      },
                                      "currency": {
                                        "type": "string",
                                        "description": "Currency used for amount"
                                      }
                                    },
                                    "required": [
                                      "amount",
                                      "base_currency",
                                      "base_currency_price",
                                      "currency"
                                    ],
                                    "description": "Tax added by the government"
                                  }
                                },
                                "required": [
                                  "gateway",
                                  "tax"
                                ],
                                "description": "Fees added to this payment"
                              },
                              "products": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "description": "Tebex package ID"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "Tebex package name"
                                    },
                                    "quantity": {
                                      "type": "integer",
                                      "description": "Quantity of package purchased"
                                    },
                                    "expires_at": {
                                      "type": "string",
                                      "nullable": true,
                                      "format": "date-time",
                                      "description": "When the items in this product expire"
                                    },
                                    "paid_price": {
                                      "type": "object",
                                      "properties": {
                                        "amount": {
                                          "type": "number",
                                          "description": "Amount of currency"
                                        },
                                        "base_currency": {
                                          "type": "string",
                                          "nullable": true,
                                          "description": "Base currency used for amount"
                                        },
                                        "base_currency_price": {
                                          "type": "number",
                                          "nullable": true,
                                          "description": "Amount of base currency"
                                        },
                                        "currency": {
                                          "type": "string",
                                          "description": "Currency used for amount"
                                        }
                                      },
                                      "required": [
                                        "amount",
                                        "base_currency",
                                        "base_currency_price",
                                        "currency"
                                      ],
                                      "description": "Price for this package"
                                    },
                                    "base_price": {
                                      "type": "object",
                                      "properties": {
                                        "amount": {
                                          "type": "number",
                                          "description": "Amount of currency"
                                        },
                                        "base_currency": {
                                          "type": "string",
                                          "nullable": true,
                                          "description": "Base currency used for amount"
                                        },
                                        "base_currency_price": {
                                          "type": "number",
                                          "nullable": true,
                                          "description": "Amount of base currency"
                                        },
                                        "currency": {
                                          "type": "string",
                                          "description": "Currency used for amount"
                                        }
                                      },
                                      "required": [
                                        "amount",
                                        "base_currency",
                                        "base_currency_price",
                                        "currency"
                                      ],
                                      "description": "Price for this package excluding any sales/discounts/etc."
                                    },
                                    "variables": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "identifier": {
                                            "type": "string",
                                            "description": "Variable identifier"
                                          },
                                          "option": {
                                            "type": "string",
                                            "description": "Variable selected value"
                                          }
                                        },
                                        "required": [
                                          "identifier",
                                          "option"
                                        ],
                                        "description": "Variable set on a Tebex package"
                                      },
                                      "description": "Variables set on this package"
                                    },
                                    "username": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "description": "Minecraft UUID"
                                        },
                                        "username": {
                                          "type": "string",
                                          "description": "Minecraft username"
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "username"
                                      ],
                                      "description": "Receiver UUID and username"
                                    },
                                    "custom": {
                                      "type": "object",
                                      "nullable": true,
                                      "properties": {
                                        "utm_source": {
                                          "type": "string",
                                          "nullable": true,
                                          "description": "UTM Source"
                                        },
                                        "utm_medium": {
                                          "type": "string",
                                          "nullable": true,
                                          "description": "UTM Medium"
                                        },
                                        "utm_campaign": {
                                          "type": "string",
                                          "nullable": true,
                                          "description": "UTM Campaign"
                                        },
                                        "utm_term": {
                                          "type": "string",
                                          "nullable": true,
                                          "description": "UTM Term"
                                        },
                                        "utm_content": {
                                          "type": "string",
                                          "nullable": true,
                                          "description": "UTM Content"
                                        },
                                        "gift": {
                                          "type": "string",
                                          "nullable": true,
                                          "description": "Gift"
                                        }
                                      },
                                      "additionalProperties": {
                                        "type": "string",
                                        "nullable": true,
                                        "description": "Value"
                                      },
                                      "description": "Custom key-value data added via the API, including UTM parameters and arbitrary keys"
                                    },
                                    "type": {
                                      "type": "string",
                                      "nullable": true,
                                      "enum": [
                                        "single",
                                        "subscription"
                                      ],
                                      "description": "Type of the product being purchased"
                                    },
                                    "servers": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "integer",
                                            "description": "Server ID"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "Server name"
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "name"
                                        ],
                                        "description": "Server to deliver this product on"
                                      },
                                      "description": "Servers to deliver this product on"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "name",
                                    "quantity",
                                    "expires_at",
                                    "paid_price",
                                    "base_price",
                                    "variables",
                                    "username",
                                    "custom",
                                    "servers"
                                  ],
                                  "description": "Tebex package in this payment"
                                },
                                "description": "Tebex packages in this payment"
                              }
                            },
                            "required": [
                              "transaction_id",
                              "created_at",
                              "custom",
                              "status",
                              "price",
                              "price_paid",
                              "payment_sequence",
                              "customer",
                              "gift_cards",
                              "coupons",
                              "recurring_payment_reference",
                              "revenue_share",
                              "decline_reason",
                              "payment_method",
                              "fees",
                              "products"
                            ],
                            "description": "Subject of this webhook"
                          },
                          "last_payment": {
                            "type": "object",
                            "properties": {
                              "transaction_id": {
                                "type": "string",
                                "description": "Tebex transaction ID assigned to this payment"
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "When this payment was created"
                              },
                              "creator_code": {
                                "type": "object",
                                "nullable": true,
                                "enum": [
                                  null
                                ],
                                "description": "Creator code used for this payment"
                              },
                              "custom": {
                                "type": "object",
                                "nullable": true,
                                "properties": {
                                  "utm_source": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "UTM Source"
                                  },
                                  "utm_medium": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "UTM Medium"
                                  },
                                  "utm_campaign": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "UTM Campaign"
                                  },
                                  "utm_term": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "UTM Term"
                                  },
                                  "utm_content": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "UTM Content"
                                  },
                                  "gift": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "Gift"
                                  }
                                },
                                "additionalProperties": {
                                  "type": "string",
                                  "nullable": true,
                                  "description": "Value"
                                },
                                "description": "Custom key-value data added via the API, including UTM parameters and arbitrary keys"
                              },
                              "status": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "number",
                                    "description": "Status ID"
                                  },
                                  "description": {
                                    "type": "string",
                                    "enum": [
                                      "Complete",
                                      "Refund",
                                      "Chargeback",
                                      "Declined"
                                    ],
                                    "description": "Status description"
                                  }
                                },
                                "required": [
                                  "id",
                                  "description"
                                ],
                                "description": "Status of the payment"
                              },
                              "price": {
                                "type": "object",
                                "properties": {
                                  "amount": {
                                    "type": "number",
                                    "description": "Amount of currency"
                                  },
                                  "base_currency": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "Base currency used for amount"
                                  },
                                  "base_currency_price": {
                                    "type": "number",
                                    "nullable": true,
                                    "description": "Amount of base currency"
                                  },
                                  "currency": {
                                    "type": "string",
                                    "description": "Currency used for amount"
                                  }
                                },
                                "required": [
                                  "amount",
                                  "base_currency",
                                  "base_currency_price",
                                  "currency"
                                ],
                                "description": "Info about the list price for this payment"
                              },
                              "price_paid": {
                                "type": "object",
                                "properties": {
                                  "amount": {
                                    "type": "number",
                                    "description": "Amount of currency"
                                  },
                                  "base_currency": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "Base currency used for amount"
                                  },
                                  "base_currency_price": {
                                    "type": "number",
                                    "nullable": true,
                                    "description": "Amount of base currency"
                                  },
                                  "currency": {
                                    "type": "string",
                                    "description": "Currency used for amount"
                                  }
                                },
                                "required": [
                                  "amount",
                                  "base_currency",
                                  "base_currency_price",
                                  "currency"
                                ],
                                "description": "Info about the price paid for this payment"
                              },
                              "payment_sequence": {
                                "type": "string",
                                "enum": [
                                  "oneoff",
                                  "mixed",
                                  "first",
                                  "recurring"
                                ],
                                "description": "If this payment is part of a subscription"
                              },
                              "customer": {
                                "type": "object",
                                "properties": {
                                  "first_name": {
                                    "type": "string",
                                    "description": "Customer first name"
                                  },
                                  "last_name": {
                                    "type": "string",
                                    "description": "Customer last name"
                                  },
                                  "email": {
                                    "type": "string",
                                    "description": "Customer email"
                                  },
                                  "username": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "Minecraft UUID"
                                      },
                                      "username": {
                                        "type": "string",
                                        "description": "Minecraft username"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "username"
                                    ],
                                    "description": "Customer UUID and username"
                                  },
                                  "ip": {
                                    "type": "string",
                                    "description": "Customer's IP address used at checkout"
                                  },
                                  "marketing_consent": {
                                    "type": "boolean",
                                    "description": "If the customer has provided marketing consent"
                                  },
                                  "country": {
                                    "type": "string",
                                    "description": "Customer's country"
                                  },
                                  "postal_code": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "Customer's postal code"
                                  }
                                },
                                "required": [
                                  "first_name",
                                  "last_name",
                                  "email",
                                  "username",
                                  "ip",
                                  "marketing_consent",
                                  "country",
                                  "postal_code"
                                ],
                                "description": "Customer making this payment"
                              },
                              "gift_cards": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {}
                                },
                                "description": "Gift cards used on this payment"
                              },
                              "coupons": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "string",
                                      "description": "Coupon code entered by user"
                                    },
                                    "discount_type": {
                                      "type": "string",
                                      "enum": [
                                        "percentage",
                                        "amount",
                                        "value"
                                      ],
                                      "description": "Type of discount"
                                    },
                                    "discount_amount": {
                                      "type": "number",
                                      "description": "Amount of discount, if type is amount"
                                    },
                                    "discount_percentage": {
                                      "type": "number",
                                      "description": "Percentage discount, if type is percentage"
                                    },
                                    "id": {
                                      "type": "integer",
                                      "description": "Coupon code ID in Tebex"
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "What this coupon is effective on"
                                    }
                                  },
                                  "required": [
                                    "code",
                                    "discount_type",
                                    "discount_amount",
                                    "discount_percentage",
                                    "id",
                                    "type"
                                  ],
                                  "description": "Coupon used on this payment"
                                },
                                "description": "Coupons used on this payment"
                              },
                              "recurring_payment_reference": {
                                "type": "string",
                                "nullable": true,
                                "description": "Subscription this payment is part of, if any"
                              },
                              "revenue_share": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {}
                                },
                                "description": "Other Tebex wallets this payment is shared with"
                              },
                              "decline_reason": {
                                "type": "object",
                                "nullable": true,
                                "properties": {
                                  "code": {
                                    "type": "string",
                                    "description": "Code for decline"
                                  },
                                  "message": {
                                    "type": "string",
                                    "description": "Friendly message for decline"
                                  }
                                },
                                "required": [
                                  "code",
                                  "message"
                                ],
                                "description": "Why this payment was declined, if it was"
                              },
                              "payment_method": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Name of payment method"
                                  },
                                  "refundable": {
                                    "type": "boolean",
                                    "description": "If payment method supports refunds"
                                  }
                                },
                                "required": [
                                  "name",
                                  "refundable"
                                ],
                                "description": "Payment method used to make this payment"
                              },
                              "fees": {
                                "type": "object",
                                "properties": {
                                  "gateway": {
                                    "type": "object",
                                    "properties": {
                                      "amount": {
                                        "type": "number",
                                        "description": "Amount of currency"
                                      },
                                      "base_currency": {
                                        "type": "string",
                                        "nullable": true,
                                        "description": "Base currency used for amount"
                                      },
                                      "base_currency_price": {
                                        "type": "number",
                                        "nullable": true,
                                        "description": "Amount of base currency"
                                      },
                                      "currency": {
                                        "type": "string",
                                        "description": "Currency used for amount"
                                      }
                                    },
                                    "required": [
                                      "amount",
                                      "base_currency",
                                      "base_currency_price",
                                      "currency"
                                    ],
                                    "description": "Fee added by the payment gateway"
                                  },
                                  "tax": {
                                    "type": "object",
                                    "properties": {
                                      "amount": {
                                        "type": "number",
                                        "description": "Amount of currency"
                                      },
                                      "base_currency": {
                                        "type": "string",
                                        "nullable": true,
                                        "description": "Base currency used for amount"
                                      },
                                      "base_currency_price": {
                                        "type": "number",
                                        "nullable": true,
                                        "description": "Amount of base currency"
                                      },
                                      "currency": {
                                        "type": "string",
                                        "description": "Currency used for amount"
                                      }
                                    },
                                    "required": [
                                      "amount",
                                      "base_currency",
                                      "base_currency_price",
                                      "currency"
                                    ],
                                    "description": "Tax added by the government"
                                  }
                                },
                                "required": [
                                  "gateway",
                                  "tax"
                                ],
                                "description": "Fees added to this payment"
                              },
                              "products": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "description": "Tebex package ID"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "Tebex package name"
                                    },
                                    "quantity": {
                                      "type": "integer",
                                      "description": "Quantity of package purchased"
                                    },
                                    "expires_at": {
                                      "type": "string",
                                      "nullable": true,
                                      "format": "date-time",
                                      "description": "When the items in this product expire"
                                    },
                                    "paid_price": {
                                      "type": "object",
                                      "properties": {
                                        "amount": {
                                          "type": "number",
                                          "description": "Amount of currency"
                                        },
                                        "base_currency": {
                                          "type": "string",
                                          "nullable": true,
                                          "description": "Base currency used for amount"
                                        },
                                        "base_currency_price": {
                                          "type": "number",
                                          "nullable": true,
                                          "description": "Amount of base currency"
                                        },
                                        "currency": {
                                          "type": "string",
                                          "description": "Currency used for amount"
                                        }
                                      },
                                      "required": [
                                        "amount",
                                        "base_currency",
                                        "base_currency_price",
                                        "currency"
                                      ],
                                      "description": "Price for this package"
                                    },
                                    "base_price": {
                                      "type": "object",
                                      "properties": {
                                        "amount": {
                                          "type": "number",
                                          "description": "Amount of currency"
                                        },
                                        "base_currency": {
                                          "type": "string",
                                          "nullable": true,
                                          "description": "Base currency used for amount"
                                        },
                                        "base_currency_price": {
                                          "type": "number",
                                          "nullable": true,
                                          "description": "Amount of base currency"
                                        },
                                        "currency": {
                                          "type": "string",
                                          "description": "Currency used for amount"
                                        }
                                      },
                                      "required": [
                                        "amount",
                                        "base_currency",
                                        "base_currency_price",
                                        "currency"
                                      ],
                                      "description": "Price for this package excluding any sales/discounts/etc."
                                    },
                                    "variables": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "identifier": {
                                            "type": "string",
                                            "description": "Variable identifier"
                                          },
                                          "option": {
                                            "type": "string",
                                            "description": "Variable selected value"
                                          }
                                        },
                                        "required": [
                                          "identifier",
                                          "option"
                                        ],
                                        "description": "Variable set on a Tebex package"
                                      },
                                      "description": "Variables set on this package"
                                    },
                                    "username": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "description": "Minecraft UUID"
                                        },
                                        "username": {
                                          "type": "string",
                                          "description": "Minecraft username"
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "username"
                                      ],
                                      "description": "Receiver UUID and username"
                                    },
                                    "custom": {
                                      "type": "object",
                                      "nullable": true,
                                      "properties": {
                                        "utm_source": {
                                          "type": "string",
                                          "nullable": true,
                                          "description": "UTM Source"
                                        },
                                        "utm_medium": {
                                          "type": "string",
                                          "nullable": true,
                                          "description": "UTM Medium"
                                        },
                                        "utm_campaign": {
                                          "type": "string",
                                          "nullable": true,
                                          "description": "UTM Campaign"
                                        },
                                        "utm_term": {
                                          "type": "string",
                                          "nullable": true,
                                          "description": "UTM Term"
                                        },
                                        "utm_content": {
                                          "type": "string",
                                          "nullable": true,
                                          "description": "UTM Content"
                                        },
                                        "gift": {
                                          "type": "string",
                                          "nullable": true,
                                          "description": "Gift"
                                        }
                                      },
                                      "additionalProperties": {
                                        "type": "string",
                                        "nullable": true,
                                        "description": "Value"
                                      },
                                      "description": "Custom key-value data added via the API, including UTM parameters and arbitrary keys"
                                    },
                                    "type": {
                                      "type": "string",
                                      "nullable": true,
                                      "enum": [
                                        "single",
                                        "subscription"
                                      ],
                                      "description": "Type of the product being purchased"
                                    },
                                    "servers": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "integer",
                                            "description": "Server ID"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "Server name"
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "name"
                                        ],
                                        "description": "Server to deliver this product on"
                                      },
                                      "description": "Servers to deliver this product on"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "name",
                                    "quantity",
                                    "expires_at",
                                    "paid_price",
                                    "base_price",
                                    "variables",
                                    "username",
                                    "custom",
                                    "servers"
                                  ],
                                  "description": "Tebex package in this payment"
                                },
                                "description": "Tebex packages in this payment"
                              }
                            },
                            "required": [
                              "transaction_id",
                              "created_at",
                              "custom",
                              "status",
                              "price",
                              "price_paid",
                              "payment_sequence",
                              "customer",
                              "gift_cards",
                              "coupons",
                              "recurring_payment_reference",
                              "revenue_share",
                              "decline_reason",
                              "payment_method",
                              "fees",
                              "products"
                            ],
                            "description": "Subject of this webhook"
                          }
                        },
                        "required": [
                          "reference",
                          "cancel_reason",
                          "cancelled_at",
                          "created_at",
                          "fail_count",
                          "next_payment_at",
                          "paused_at",
                          "paused_until",
                          "status",
                          "price",
                          "initial_payment",
                          "last_payment"
                        ],
                        "description": "Subject of this webhook"
                      }
                    },
                    "required": [
                      "id",
                      "date",
                      "type",
                      "subject"
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Tebex webhook ID"
                        }
                      },
                      "required": [
                        "id"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "acknowledged": {
                          "type": "boolean",
                          "enum": [
                            true
                          ],
                          "description": "If the webhook was acknowledged"
                        },
                        "messageId": {
                          "type": "string",
                          "description": "Message ID that can be used to trace further handling"
                        }
                      },
                      "required": [
                        "acknowledged",
                        "messageId"
                      ],
                      "additionalProperties": false
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/webstore/recommendations": {
      "get": {
        "tags": [
          "webstore"
        ],
        "description": "Recommend other packages a player might be interested in",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "UUID of the player we're recommending packages for"
            },
            "required": true,
            "name": "uuid",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Number of packages to return"
            },
            "required": true,
            "name": "numRecommendations",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "recommendation": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "ID to identify this recommendation in analytics"
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "packageId": {
                                "type": "integer",
                                "description": "Package ID of this item"
                              }
                            },
                            "required": [
                              "packageId"
                            ],
                            "additionalProperties": false,
                            "description": "Recommended item"
                          },
                          "description": "Recommended items"
                        }
                      },
                      "required": [
                        "id",
                        "items"
                      ],
                      "additionalProperties": false,
                      "description": "Recommendation for this player"
                    }
                  },
                  "required": [
                    "recommendation"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/webstore/cms-pages": {
      "get": {
        "tags": [
          "webstore"
        ],
        "description": "Lists active CMS pages on the webstore",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "cmsPages": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "slug": {
                            "type": "string",
                            "description": "Page slug"
                          },
                          "title": {
                            "type": "string",
                            "description": "Page title"
                          },
                          "body": {
                            "type": "string",
                            "description": "Page body"
                          }
                        },
                        "required": [
                          "slug",
                          "title",
                          "body"
                        ],
                        "additionalProperties": false,
                        "description": "CMS Page"
                      },
                      "description": "CMS pages"
                    }
                  },
                  "required": [
                    "cmsPages"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/webstore/partners": {
      "get": {
        "tags": [
          "webstore"
        ],
        "description": "Lists active partners on the webstore",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "Whether to include the ranking of the partners"
            },
            "required": false,
            "name": "includeRankings",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "partners": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Partner name"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "creator",
                              "server"
                            ],
                            "description": "Partner type"
                          },
                          "ranking": {
                            "type": "number",
                            "nullable": true,
                            "description": "Ranking of this partner (if ranked in the last 14 days)"
                          },
                          "iconImage": {
                            "type": "string",
                            "format": "uri",
                            "description": "Image URL of this partner's icon"
                          },
                          "overlayIconImage": {
                            "type": "string",
                            "format": "uri",
                            "description": "Image URL of this partner's overlay icon"
                          },
                          "cardImage": {
                            "type": "string",
                            "format": "uri",
                            "description": "Image URL of this partner's store card"
                          },
                          "headerImage": {
                            "type": "string",
                            "format": "uri",
                            "description": "Image URL of this partner's store header"
                          },
                          "youtubeUsername": {
                            "type": "string",
                            "nullable": true,
                            "description": "YouTube username of this partner"
                          },
                          "twitchUsername": {
                            "type": "string",
                            "nullable": true,
                            "description": "Twitch username of this partner"
                          },
                          "instagramUsername": {
                            "type": "string",
                            "nullable": true,
                            "description": "Instagram username of this partner"
                          },
                          "tiktokUsername": {
                            "type": "string",
                            "nullable": true,
                            "description": "TikTok username of this partner"
                          },
                          "xUsername": {
                            "type": "string",
                            "nullable": true,
                            "description": "X username of this partner"
                          },
                          "linkedCategoryIds": {
                            "type": "array",
                            "items": {
                              "type": "integer",
                              "description": "Store category ID"
                            },
                            "description": "Category IDs linked to this partner"
                          },
                          "partneredAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Date and time this partner was partnered"
                          }
                        },
                        "required": [
                          "name",
                          "type",
                          "ranking",
                          "iconImage",
                          "overlayIconImage",
                          "cardImage",
                          "headerImage",
                          "youtubeUsername",
                          "twitchUsername",
                          "instagramUsername",
                          "tiktokUsername",
                          "xUsername",
                          "linkedCategoryIds",
                          "partneredAt"
                        ],
                        "additionalProperties": false,
                        "description": "Partner"
                      },
                      "description": "Partners"
                    }
                  },
                  "required": [
                    "partners"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/webstore/packages": {
      "get": {
        "tags": [
          "webstore"
        ],
        "description": "Lists active packages on the webstore",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "Whether to include the ranking of the packages"
            },
            "required": false,
            "name": "includeRankings",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "packages": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "number",
                            "description": "Package ID"
                          },
                          "image": {
                            "type": "string",
                            "nullable": true,
                            "format": "uri",
                            "description": "Image URL of this package's icon"
                          },
                          "ranking": {
                            "type": "number",
                            "nullable": true,
                            "description": "Ranking of this package (if ranked in the last 14 days)"
                          }
                        },
                        "required": [
                          "id",
                          "image",
                          "ranking"
                        ],
                        "additionalProperties": false,
                        "description": "Package"
                      },
                      "description": "Packages"
                    }
                  },
                  "required": [
                    "packages"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/webstore/country-availability": {
      "get": {
        "tags": [
          "webstore"
        ],
        "description": "Retrieve the current packages which are limited to certain countries",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "packageId": {
                        "type": "integer",
                        "description": "Package ID"
                      },
                      "countries": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "description": "Country code (ISO)"
                        },
                        "description": "List of country codes which the package is available in"
                      }
                    },
                    "required": [
                      "packageId",
                      "countries"
                    ],
                    "additionalProperties": false,
                    "description": "A package and the countries it is available in"
                  },
                  "description": "List of packages and the countries they are available in"
                }
              }
            }
          }
        }
      }
    },
    "/webstore/collections": {
      "get": {
        "tags": [
          "webstore"
        ],
        "description": "Lists active collections on the webstore",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "collections": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "Collection ID"
                          },
                          "name": {
                            "type": "string",
                            "description": "Collection name"
                          },
                          "description": {
                            "type": "string",
                            "description": "Collection description"
                          },
                          "releaseDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Collection release date"
                          },
                          "endDate": {
                            "type": "string",
                            "nullable": true,
                            "format": "date-time",
                            "description": "Collection end date"
                          },
                          "iconImage": {
                            "type": "string",
                            "format": "uri",
                            "description": "Image URL of this collection's icon"
                          },
                          "overlayIconImage": {
                            "type": "string",
                            "format": "uri",
                            "description": "Image URL of this collection's overlay icon"
                          },
                          "cardImage": {
                            "type": "string",
                            "format": "uri",
                            "description": "Image URL of this collection's store card"
                          },
                          "headerImage": {
                            "type": "string",
                            "format": "uri",
                            "description": "Image URL of this collection's store header"
                          },
                          "linkedPackageIds": {
                            "type": "array",
                            "items": {
                              "type": "integer",
                              "description": "Store package ID"
                            },
                            "description": "Package IDs linked to this collection"
                          },
                          "linkedCategoryIds": {
                            "type": "array",
                            "items": {
                              "type": "integer",
                              "description": "Store category ID"
                            },
                            "description": "Category IDs linked to this collection"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "description",
                          "releaseDate",
                          "endDate",
                          "iconImage",
                          "overlayIconImage",
                          "cardImage",
                          "headerImage",
                          "linkedPackageIds",
                          "linkedCategoryIds"
                        ],
                        "additionalProperties": false,
                        "description": "Collection"
                      },
                      "description": "Collections"
                    }
                  },
                  "required": [
                    "collections"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/site/download": {
      "get": {
        "tags": [
          "site"
        ],
        "description": "Website download redirect",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "windows",
                "macos",
                "linux"
              ],
              "description": "Operating system to generate download for"
            },
            "required": true,
            "name": "os",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "arm64"
              ],
              "description": "Architecture to generate download for (only used on Windows)"
            },
            "required": false,
            "name": "arch",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "UTM Source"
            },
            "required": false,
            "name": "utm_source",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "UTM Medium"
            },
            "required": false,
            "name": "utm_medium",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "UTM Campaign"
            },
            "required": false,
            "name": "utm_campaign",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean",
              "nullable": true,
              "default": false,
              "description": "Include encoded extra params"
            },
            "required": false,
            "name": "include_extra",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "UTM Term"
            },
            "required": false,
            "name": "utm_term",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "UTM Content"
            },
            "required": false,
            "name": "utm_content",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Google Click ID"
            },
            "required": false,
            "name": "gclid",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Google Ads Source"
            },
            "required": false,
            "name": "gad_source",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Google Click Source (360)"
            },
            "required": false,
            "name": "gclsrc",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "DoubleClick (Google Display Ads) Click ID"
            },
            "required": false,
            "name": "dclid",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Google Click ID (App -> Web)"
            },
            "required": false,
            "name": "wbraid",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Twitter Click ID"
            },
            "required": false,
            "name": "twclid",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "LinkedIn Click ID"
            },
            "required": false,
            "name": "li_fat_id",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Instagram Click ID"
            },
            "required": false,
            "name": "igshid",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Microsoft Click ID"
            },
            "required": false,
            "name": "msclkid",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Facebook Click ID"
            },
            "required": false,
            "name": "fbclid",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "TikTok Click ID"
            },
            "required": false,
            "name": "ttclid",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Reddit Click ID"
            },
            "required": false,
            "name": "rdt_cid",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Opt In to Badlion Services"
            },
            "required": false,
            "name": "bl_opt_in",
            "in": "query"
          }
        ],
        "responses": {
          "302": {
            "description": "Success"
          }
        }
      }
    },
    "/site/metadata": {
      "get": {
        "tags": [
          "site"
        ],
        "description": "Website metadata lookup",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statistics": {
                      "$ref": "#/components/schemas/OnlinePlayers"
                    },
                    "alert": {
                      "type": "object",
                      "nullable": true,
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "ID of the alert"
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of the alert"
                        },
                        "text": {
                          "type": "string",
                          "description": "Contents of the alert"
                        },
                        "color": {
                          "type": "string",
                          "description": "Color variant of the alert"
                        },
                        "icon": {
                          "type": "string",
                          "description": "Icon for this alert"
                        },
                        "dismissable": {
                          "type": "boolean",
                          "description": "If this alert can be dismissed"
                        },
                        "link": {
                          "type": "string",
                          "format": "uri",
                          "description": "Whether the alert is clickable and should open up a link"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "text",
                        "color",
                        "icon",
                        "dismissable"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "statistics",
                    "alert"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/site/packages": {
      "get": {
        "tags": [
          "site"
        ],
        "description": "Package lookup",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "The package to lookup."
            },
            "required": true,
            "name": "package",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "default": "false",
              "description": "Whether to include the global extras (molang) in the response."
            },
            "required": false,
            "name": "includeGlobalExtras",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "default": "false",
              "description": "Whether to include particles in the response."
            },
            "required": false,
            "name": "includeParticles",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "modelType": {
                                "type": "string",
                                "enum": [
                                  "json"
                                ],
                                "description": "The type of the cosmetic"
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of the cosmetic"
                              },
                              "transformations": {
                                "type": "array",
                                "items": {
                                  "nullable": true
                                },
                                "description": "The transformations of the cosmetic"
                              },
                              "texture": {
                                "anyOf": [
                                  {
                                    "type": "string",
                                    "description": "Direct path to the hash"
                                  },
                                  {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string",
                                      "description": "Condition for the hash to be applied"
                                    },
                                    "description": "Map of paths to conditions"
                                  },
                                  {
                                    "nullable": true
                                  }
                                ],
                                "description": "The texture of the cosmetic"
                              },
                              "meta": {
                                "anyOf": [
                                  {
                                    "type": "string",
                                    "description": "Direct path to the hash"
                                  },
                                  {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string",
                                      "description": "Condition for the hash to be applied"
                                    },
                                    "description": "Map of paths to conditions"
                                  },
                                  {
                                    "nullable": true
                                  }
                                ],
                                "description": "The meta of the cosmetic"
                              },
                              "model": {
                                "anyOf": [
                                  {
                                    "type": "string",
                                    "description": "Direct path to the hash"
                                  },
                                  {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string",
                                      "description": "Condition for the hash to be applied"
                                    },
                                    "description": "Map of paths to conditions"
                                  },
                                  {
                                    "nullable": true
                                  }
                                ],
                                "description": "The model of the cosmetic. Can be a single path or a map of paths to conditions"
                              },
                              "extra": {
                                "nullable": true,
                                "description": "The extra data of the cosmetic"
                              },
                              "morph": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The id of the morph"
                                  },
                                  "duration": {
                                    "type": "number",
                                    "nullable": true,
                                    "description": "The duration of the morph"
                                  }
                                },
                                "required": [
                                  "id",
                                  "duration"
                                ],
                                "additionalProperties": false,
                                "description": "The morph of the cosmetic"
                              },
                              "textureMeta": {
                                "anyOf": [
                                  {
                                    "type": "string",
                                    "description": "Direct path to the hash"
                                  },
                                  {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string",
                                      "description": "Condition for the hash to be applied"
                                    },
                                    "description": "Map of paths to conditions"
                                  },
                                  {
                                    "nullable": true
                                  }
                                ],
                                "description": "The texture meta of the cosmetic"
                              }
                            },
                            "required": [
                              "modelType",
                              "type",
                              "transformations",
                              "texture",
                              "meta",
                              "model",
                              "morph",
                              "textureMeta"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "modelType": {
                                "type": "string",
                                "enum": [
                                  "default"
                                ],
                                "description": "The type of the cosmetic"
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of the cosmetic"
                              },
                              "transformations": {
                                "type": "array",
                                "items": {
                                  "nullable": true
                                },
                                "description": "The transformations of the cosmetic"
                              },
                              "texture": {
                                "anyOf": [
                                  {
                                    "type": "string",
                                    "description": "Direct path to the hash"
                                  },
                                  {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string",
                                      "description": "Condition for the hash to be applied"
                                    },
                                    "description": "Map of paths to conditions"
                                  },
                                  {
                                    "nullable": true
                                  }
                                ],
                                "description": "The texture of the cosmetic"
                              },
                              "meta": {
                                "anyOf": [
                                  {
                                    "type": "string",
                                    "description": "Direct path to the hash"
                                  },
                                  {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string",
                                      "description": "Condition for the hash to be applied"
                                    },
                                    "description": "Map of paths to conditions"
                                  },
                                  {
                                    "nullable": true
                                  }
                                ],
                                "description": "The meta of the cosmetic"
                              },
                              "model": {
                                "anyOf": [
                                  {
                                    "type": "string",
                                    "description": "Direct path to the hash"
                                  },
                                  {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string",
                                      "description": "Condition for the hash to be applied"
                                    },
                                    "description": "Map of paths to conditions"
                                  },
                                  {
                                    "nullable": true
                                  }
                                ],
                                "description": "The model of the cosmetic. Can be a single path or a map of paths to conditions"
                              },
                              "extra": {
                                "nullable": true,
                                "description": "The extra data of the cosmetic"
                              },
                              "morph": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The id of the morph"
                                  },
                                  "duration": {
                                    "type": "number",
                                    "nullable": true,
                                    "description": "The duration of the morph"
                                  }
                                },
                                "required": [
                                  "id",
                                  "duration"
                                ],
                                "additionalProperties": false,
                                "description": "The morph of the cosmetic"
                              }
                            },
                            "required": [
                              "modelType",
                              "type",
                              "transformations",
                              "texture",
                              "meta",
                              "model",
                              "morph"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      },
                      "description": "The items in the package."
                    },
                    "global_extras": {
                      "type": "object",
                      "properties": {
                        "molang": {
                          "type": "object",
                          "properties": {
                            "constants": {
                              "type": "string",
                              "nullable": true,
                              "description": "The Molang constants, for the cosmetic"
                            },
                            "functions": {
                              "type": "string",
                              "nullable": true,
                              "description": "The Molang functions, for the cosmetic"
                            }
                          },
                          "required": [
                            "constants",
                            "functions"
                          ],
                          "additionalProperties": false,
                          "description": "The Molang data for the cosmetic"
                        }
                      },
                      "required": [
                        "molang"
                      ],
                      "additionalProperties": false,
                      "description": "The global extras (molang) of the package."
                    },
                    "particles": {
                      "type": "object",
                      "properties": {
                        "morphs": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string",
                                "description": "Name of the morph",
                                "example": "Air"
                              },
                              "description": {
                                "type": "string",
                                "description": "Description of the Morph, usually the emote it's attributed to",
                                "example": "Avatar: Air bending"
                              },
                              "morphs": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "morph": {
                                      "type": "string",
                                      "description": "Stringified JSON object of the particle system",
                                      "example": "{Scheme:\"avatar_air1\",Name:\"snowstorm\"}"
                                    },
                                    "bone": {
                                      "type": "string",
                                      "description": "The bone that the particle is attached to",
                                      "example": "low_right_arm.end"
                                    },
                                    "start": {
                                      "type": "number",
                                      "description": "The start frame of the particle in ticks",
                                      "example": 30
                                    },
                                    "length": {
                                      "type": "number",
                                      "description": "The length of the particle in ticks",
                                      "example": 15
                                    },
                                    "target": {
                                      "type": "boolean",
                                      "description": "TODO: Unknown"
                                    },
                                    "fade_in": {
                                      "type": "number",
                                      "description": "The length of the fade in of the particle in ticks",
                                      "example": 0
                                    },
                                    "fade_out": {
                                      "type": "number",
                                      "description": "The length of the fade out of the particle in ticks",
                                      "example": 0
                                    },
                                    "translate": {
                                      "type": "array",
                                      "items": {
                                        "type": "number",
                                        "description": "X, Y, or Z value",
                                        "example": 0
                                      },
                                      "description": "The X, Y, Z translation of the particle from the bone pivot",
                                      "example": [
                                        0,
                                        0,
                                        0
                                      ]
                                    },
                                    "rotation": {
                                      "type": "array",
                                      "items": {
                                        "type": "number",
                                        "description": "X, Y, or Z value",
                                        "example": 0
                                      },
                                      "description": "The X, Y, Z rotation of the particle from the bone pivot",
                                      "example": [
                                        0,
                                        0,
                                        0
                                      ]
                                    },
                                    "scale": {
                                      "type": "array",
                                      "items": {
                                        "type": "number",
                                        "description": "X, Y, or Z value",
                                        "example": 0
                                      },
                                      "description": "The X, Y, Z scale of the particle",
                                      "example": [
                                        1,
                                        1,
                                        1
                                      ]
                                    }
                                  },
                                  "required": [
                                    "morph",
                                    "bone",
                                    "start",
                                    "length",
                                    "target",
                                    "fade_in",
                                    "fade_out"
                                  ],
                                  "additionalProperties": false
                                },
                                "description": "Associated inner morphs (particle systems) of the whole morph"
                              }
                            },
                            "required": [
                              "title",
                              "description",
                              "morphs"
                            ],
                            "additionalProperties": false
                          },
                          "description": "Morphs mapping"
                        },
                        "schemes": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string",
                            "nullable": true,
                            "description": "Scheme"
                          },
                          "description": "Particle schemes mapping"
                        },
                        "textures": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string",
                            "description": "Texture"
                          },
                          "description": "Particle textures mapping"
                        }
                      },
                      "required": [
                        "morphs",
                        "schemes",
                        "textures"
                      ],
                      "additionalProperties": false,
                      "description": "The particles of the package."
                    }
                  },
                  "required": [
                    "items"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/site/server/{identifierOrAddress}": {
      "get": {
        "tags": [
          "site"
        ],
        "description": "Get specific server for the website",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "Server ID (from ServerMappings) or server address without the port (e.g. `mc.hypixel.net`)",
              "example": "hypixel"
            },
            "required": true,
            "name": "identifierOrAddress",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/SiteServer"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code",
                          "example": "not_found"
                        },
                        "message": {
                          "type": "string",
                          "description": "Full text error message",
                          "example": "Server not found"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code",
                      "example": "not_found"
                    },
                    "message": {
                      "type": "string",
                      "description": "Full text error message",
                      "example": "Server not found"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/site/uninstall": {
      "post": {
        "tags": [
          "site"
        ],
        "description": "Records uninstall feedback",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "reason": {
                    "type": "string",
                    "description": "User's response to the reason question"
                  },
                  "easy_to_use": {
                    "type": "string",
                    "description": "User's response to the easy to use question"
                  },
                  "performance": {
                    "type": "string",
                    "description": "User's response to the performance question"
                  },
                  "additional_feedback": {
                    "type": "string",
                    "nullable": true,
                    "description": "User's response to the other question"
                  },
                  "comeback": {
                    "type": "string",
                    "description": "User's response to the comeback question"
                  },
                  "install_id": {
                    "type": "string",
                    "nullable": true,
                    "description": "User's installation ID"
                  }
                },
                "required": [
                  "reason",
                  "easy_to_use",
                  "performance",
                  "comeback"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If this request was successful"
                    },
                    "reason": {
                      "type": "string",
                      "description": "Reason for success or failure"
                    }
                  },
                  "required": [
                    "success",
                    "reason"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "If this request was successful"
                    },
                    "reason": {
                      "type": "string",
                      "description": "Reason for success or failure"
                    }
                  },
                  "required": [
                    "success",
                    "reason"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/site/status": {
      "get": {
        "tags": [
          "site"
        ],
        "description": "Lunar Client status",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "lastUpdated": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Last updated time of the status"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "operational",
                        "downtime",
                        "degraded",
                        "maintenance"
                      ],
                      "description": "Aggregate status of all the services across Lunar Client"
                    }
                  },
                  "required": [
                    "lastUpdated",
                    "status"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/user/profile": {
      "get": {
        "tags": [
          "internal"
        ],
        "description": "User profile lookup",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "Player's UUID you would like to fetch",
              "example": "3a870b6c-7b93-40e7-acb4-26f566360637"
            },
            "required": true,
            "name": "uuid",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/UserProfile"
                    }
                  },
                  "required": [
                    "user"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "enum": [
                        "Unauthorized"
                      ],
                      "description": "The reason for the unauthorized response",
                      "example": "Unauthorized"
                    }
                  },
                  "required": [
                    "detail"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "nullable": true,
                      "description": "User not found"
                    }
                  },
                  "required": [
                    "user"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/twitter/verification": {
      "post": {
        "tags": [
          "twitter"
        ],
        "description": "Links a Twitter profile",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "The user's JWT token"
            },
            "required": true,
            "name": "Authorization",
            "in": "header"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "oauth_token": {
                    "type": "string",
                    "description": "Twitter OAuth token"
                  },
                  "oauth_verifier": {
                    "type": "string",
                    "description": "Twitter OAuth verifier"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "If the update was successful"
                        },
                        "user": {
                          "type": "object",
                          "properties": {
                            "uuid": {
                              "type": "string",
                              "format": "uuid",
                              "description": "Minecraft UUID of the linked player"
                            },
                            "username": {
                              "type": "string",
                              "description": "Minecraft username of the linked player"
                            }
                          },
                          "required": [
                            "uuid",
                            "username"
                          ],
                          "additionalProperties": false,
                          "description": "Info about the Minecraft player"
                        },
                        "twitter": {
                          "type": "object",
                          "properties": {
                            "username": {
                              "type": "string",
                              "description": "Twitter user's username"
                            },
                            "avatar": {
                              "type": "string",
                              "description": "Twitter user's avatar"
                            }
                          },
                          "required": [
                            "username",
                            "avatar"
                          ],
                          "additionalProperties": false,
                          "description": "Info about the Twitter user"
                        }
                      },
                      "required": [
                        "success",
                        "user",
                        "twitter"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "token": {
                          "type": "string",
                          "description": "OAuth token to continue logging in with"
                        }
                      },
                      "required": [
                        "token"
                      ],
                      "additionalProperties": false
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Code describing the error"
                    }
                  },
                  "required": [
                    "code"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Code describing the error"
                    }
                  },
                  "required": [
                    "code"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/index/cosmetics": {
      "get": {
        "tags": [
          "index"
        ],
        "description": "Index of all cosmetics.",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "default": "master",
              "description": "The branch to use for the cosmetic index."
            },
            "required": false,
            "description": "The branch to use for the cosmetic index.",
            "name": "branch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "number",
                        "description": "The ID of the cosmetic"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the cosmetic"
                      },
                      "resource": {
                        "type": "string",
                        "description": "The resource of the cosmetic"
                      },
                      "category": {
                        "type": "string",
                        "enum": [
                          "cloak",
                          "dragon_wings",
                          "hat",
                          "bandanna",
                          "mask",
                          "bodywear",
                          "backpack",
                          "neckwear",
                          "glasses",
                          "belts",
                          "pet",
                          "shoes",
                          "suits",
                          "event",
                          "auras",
                          "wristwear",
                          "shields"
                        ],
                        "description": "The category of the cosmetic"
                      },
                      "indexType": {
                        "type": "string",
                        "nullable": true,
                        "description": "The index type of the cosmetic"
                      },
                      "morph": {
                        "type": "string",
                        "nullable": true,
                        "description": "The morph of the cosmetic, a morph is a group of particles"
                      },
                      "morphDuration": {
                        "type": "number",
                        "nullable": true,
                        "description": "The morph duration of the cosmetic (in ticks)"
                      },
                      "geckolibCosmetic": {
                        "type": "boolean",
                        "description": "Whether cosmetic is a geckolib cosmetic"
                      },
                      "special": {
                        "type": "boolean",
                        "description": "Whether the cosmetic is special"
                      },
                      "animated": {
                        "type": "boolean",
                        "description": "Whether the cosmetic is animated"
                      },
                      "hideOnProfileExternal": {
                        "type": "boolean",
                        "description": "Whether to hide on profile external"
                      },
                      "colors": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "BLUE",
                            "WHITE",
                            "YELLOW",
                            "PURPLE",
                            "PINK",
                            "GREEN",
                            "BROWN",
                            "BLACK",
                            "RED",
                            "ORANGE",
                            "CHROMA",
                            "GREY",
                            "SILVER"
                          ],
                          "description": "A cosmetic color"
                        },
                        "description": "The colors of the cosmetic"
                      },
                      "tags": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "CLOUDS",
                            "WATER",
                            "ANIMALS",
                            "CITY",
                            "SKY",
                            "SIMPLE",
                            "LANDSCAPE",
                            "8_BIT",
                            "PRISON",
                            "TOOLS",
                            "AESTHETIC",
                            "SCARY",
                            "LOVE",
                            "GLITCH",
                            "FIRE",
                            "HOLIDAY",
                            "SPACE",
                            "WINTER",
                            "GALAXY",
                            "JAPANESE",
                            "PATTERN",
                            "FLOWERS",
                            "TEXT",
                            "MATH",
                            "INSTRUMENT",
                            "SPORT",
                            "FOOD",
                            "COLORFUL",
                            "GLOW",
                            "LIGHTNING",
                            "MINECRAFT",
                            "SILHOUETTE",
                            "SHINE",
                            "CAMO",
                            "LOGO",
                            "MISC",
                            "GRAFFETI",
                            "COMIC",
                            "GOOFY",
                            "GEOMETRIC",
                            "SUPERHERO"
                          ],
                          "description": "A cosmetic tag"
                        },
                        "description": "The tags of the cosmetic"
                      },
                      "releasedAt": {
                        "type": "string",
                        "nullable": true,
                        "format": "date",
                        "description": "The date the cosmetic was released."
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "resource",
                      "category",
                      "geckolibCosmetic",
                      "special",
                      "animated",
                      "hideOnProfileExternal",
                      "colors",
                      "tags"
                    ],
                    "additionalProperties": false,
                    "description": "A cosmetic"
                  },
                  "description": "The cosmetics"
                }
              }
            }
          }
        }
      }
    },
    "/index/emotes": {
      "get": {
        "tags": [
          "index"
        ],
        "description": "Index of all emotes.",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "default": "master",
              "description": "The branch to use for the cosmetic index."
            },
            "required": false,
            "description": "The branch to use for the cosmetic index.",
            "name": "branch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "number",
                        "description": "The ID of the emote."
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the emote."
                      },
                      "author": {
                        "type": "string",
                        "description": "The author of the emote."
                      },
                      "releasedAt": {
                        "type": "string",
                        "nullable": true,
                        "format": "date",
                        "description": "The date the emote was released."
                      },
                      "looping": {
                        "type": "boolean",
                        "description": "Whether the emote loops."
                      },
                      "renderCloak": {
                        "type": "boolean",
                        "description": "Whether the cloak should render while emoting."
                      },
                      "stopOnMove": {
                        "type": "boolean",
                        "description": "Whether the emote should stop when moving."
                      },
                      "durationTicks": {
                        "type": "number",
                        "description": "The duration of the emote (in ticks)."
                      },
                      "durationMillis": {
                        "type": "number",
                        "description": "The duration of the emote (in milliseconds)."
                      },
                      "particleEffect": {
                        "type": "string",
                        "nullable": true,
                        "description": "The particle effect of the emote."
                      },
                      "morph": {
                        "type": "string",
                        "nullable": true,
                        "description": "The morph of the emote."
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "author",
                      "looping",
                      "renderCloak",
                      "stopOnMove",
                      "durationTicks",
                      "durationMillis"
                    ],
                    "additionalProperties": false,
                    "description": "An emote."
                  },
                  "description": "The emotes"
                }
              }
            }
          }
        }
      }
    },
    "/index/sprays": {
      "get": {
        "tags": [
          "index"
        ],
        "description": "Index of all sprays.",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "default": "master",
              "description": "The branch to use for the cosmetic index."
            },
            "required": false,
            "description": "The branch to use for the cosmetic index.",
            "name": "branch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "number",
                        "description": "The ID of the spray"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the spray"
                      },
                      "resource": {
                        "type": "string",
                        "description": "The resource of the spray"
                      },
                      "canCover": {
                        "type": "boolean",
                        "description": "Whether the spray can cover translucent blocks"
                      },
                      "animated": {
                        "type": "boolean",
                        "description": "Whether the spray has an animated texture"
                      },
                      "glowing": {
                        "type": "boolean",
                        "description": "Whether the spray has a glowing texture"
                      },
                      "particleColor": {
                        "type": "string",
                        "nullable": true,
                        "description": "The color of the particles when placing the spray (eg. FFFFFF)"
                      },
                      "width": {
                        "type": "number",
                        "nullable": true,
                        "description": "Width of the spray (in blocks)"
                      },
                      "height": {
                        "type": "number",
                        "nullable": true,
                        "description": "Height of the spray (in blocks)"
                      },
                      "offsetX": {
                        "type": "number",
                        "nullable": true,
                        "description": "X Positon relative to the block it is sprayed on (in blocks)"
                      },
                      "offsetY": {
                        "type": "number",
                        "nullable": true,
                        "description": "Y Position relative to the block it is sprayed on (in blocks)"
                      },
                      "durationTicks": {
                        "type": "number",
                        "nullable": true,
                        "description": "Duration spray is visible (in ticks)"
                      },
                      "durationMilliseconds": {
                        "type": "number",
                        "nullable": true,
                        "description": "Duration spray is visible (in milliseconds)"
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "resource",
                      "canCover",
                      "animated",
                      "glowing"
                    ],
                    "additionalProperties": false,
                    "description": "A spray."
                  },
                  "description": "The sprays"
                }
              }
            }
          }
        }
      }
    },
    "/index/jams": {
      "get": {
        "tags": [
          "index"
        ],
        "description": "Index of all jams.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "number",
                        "description": "The ID of the jam"
                      },
                      "styngrId": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The STYNGR ID of the jam"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the jam"
                      },
                      "song": {
                        "type": "string",
                        "description": "The song that the jam is from"
                      },
                      "artist": {
                        "type": "string",
                        "description": "The artists of the jam"
                      },
                      "album": {
                        "type": "string",
                        "nullable": true,
                        "description": "The album that the jam is from"
                      },
                      "genres": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "description": "The genre of the jam"
                        },
                        "description": "The genres of the jam"
                      },
                      "durationMillis": {
                        "type": "number",
                        "description": "The duration of the jam in milliseconds"
                      },
                      "copyrightSafe": {
                        "type": "boolean",
                        "description": "Whether the jam is considered 'copyright safe'"
                      }
                    },
                    "required": [
                      "id",
                      "styngrId",
                      "name",
                      "song",
                      "artist",
                      "album",
                      "genres",
                      "durationMillis",
                      "copyrightSafe"
                    ],
                    "additionalProperties": false,
                    "description": "A jam."
                  },
                  "description": "The jams"
                }
              }
            }
          }
        }
      }
    },
    "/index/particles": {
      "get": {
        "tags": [
          "index"
        ],
        "description": "Index of all particles.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "morphs": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "Name of the morph",
                            "example": "Air"
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of the Morph, usually the emote it's attributed to",
                            "example": "Avatar: Air bending"
                          },
                          "morphs": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "morph": {
                                  "type": "string",
                                  "description": "Stringified JSON object of the particle system",
                                  "example": "{Scheme:\"avatar_air1\",Name:\"snowstorm\"}"
                                },
                                "bone": {
                                  "type": "string",
                                  "description": "The bone that the particle is attached to",
                                  "example": "low_right_arm.end"
                                },
                                "start": {
                                  "type": "number",
                                  "description": "The start frame of the particle in ticks",
                                  "example": 30
                                },
                                "length": {
                                  "type": "number",
                                  "description": "The length of the particle in ticks",
                                  "example": 15
                                },
                                "target": {
                                  "type": "boolean",
                                  "description": "TODO: Unknown"
                                },
                                "fade_in": {
                                  "type": "number",
                                  "description": "The length of the fade in of the particle in ticks",
                                  "example": 0
                                },
                                "fade_out": {
                                  "type": "number",
                                  "description": "The length of the fade out of the particle in ticks",
                                  "example": 0
                                },
                                "translate": {
                                  "type": "array",
                                  "items": {
                                    "type": "number",
                                    "description": "X, Y, or Z value",
                                    "example": 0
                                  },
                                  "description": "The X, Y, Z translation of the particle from the bone pivot",
                                  "example": [
                                    0,
                                    0,
                                    0
                                  ]
                                },
                                "rotation": {
                                  "type": "array",
                                  "items": {
                                    "type": "number",
                                    "description": "X, Y, or Z value",
                                    "example": 0
                                  },
                                  "description": "The X, Y, Z rotation of the particle from the bone pivot",
                                  "example": [
                                    0,
                                    0,
                                    0
                                  ]
                                },
                                "scale": {
                                  "type": "array",
                                  "items": {
                                    "type": "number",
                                    "description": "X, Y, or Z value",
                                    "example": 0
                                  },
                                  "description": "The X, Y, Z scale of the particle",
                                  "example": [
                                    1,
                                    1,
                                    1
                                  ]
                                }
                              },
                              "required": [
                                "morph",
                                "bone",
                                "start",
                                "length",
                                "target",
                                "fade_in",
                                "fade_out"
                              ],
                              "additionalProperties": false
                            },
                            "description": "Associated inner morphs (particle systems) of the whole morph"
                          }
                        },
                        "required": [
                          "title",
                          "description",
                          "morphs"
                        ],
                        "additionalProperties": false
                      },
                      "description": "Morphs mapping"
                    },
                    "schemes": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string",
                        "nullable": true,
                        "description": "Scheme"
                      },
                      "description": "Particle schemes mapping"
                    },
                    "textures": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string",
                        "description": "Texture"
                      },
                      "description": "Particle textures mapping"
                    }
                  },
                  "required": [
                    "morphs",
                    "schemes",
                    "textures"
                  ],
                  "additionalProperties": false,
                  "description": "Particles response"
                }
              }
            }
          }
        }
      }
    },
    "/index/packages": {
      "get": {
        "tags": [
          "index"
        ],
        "description": "Index of all webstore packages.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "number",
                        "description": "The ID of the package"
                      },
                      "image": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "description": "The image of the package"
                      },
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "description": "The type of the item"
                            },
                            "id": {
                              "type": "number",
                              "description": "The ID of the item"
                            },
                            "displayOnly": {
                              "type": "boolean",
                              "description": "Whether the item is display only (if it grants the item when purchased)"
                            }
                          },
                          "required": [
                            "type",
                            "id",
                            "displayOnly"
                          ],
                          "additionalProperties": false,
                          "description": "An item in a package."
                        },
                        "description": "The items in the package"
                      }
                    },
                    "required": [
                      "id",
                      "items"
                    ],
                    "additionalProperties": false,
                    "description": "A package."
                  },
                  "description": "The packages"
                }
              }
            }
          }
        }
      }
    },
    "/hosted-world/request-host-connect": {
      "post": {
        "tags": [
          "hosted-world"
        ],
        "description": "Requests a world host connect to a relay to accept a connection",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "hostUuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Minecraft UUID of player hosting this world"
                  },
                  "relayAddress": {
                    "type": "string",
                    "description": "Address of relay the world host should connect to"
                  },
                  "relayPort": {
                    "type": "integer",
                    "description": "Port of relay the world host should connect to"
                  },
                  "sessionId": {
                    "type": "string",
                    "description": "Unique ID the world host should provide when connecting to the relay"
                  },
                  "joinerUuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Minecraft UUID of the player joining this world"
                  },
                  "simpleVoiceChatEndpoint": {
                    "type": "object",
                    "properties": {
                      "address": {
                        "type": "string",
                        "description": "Network address"
                      },
                      "port": {
                        "type": "integer",
                        "description": "Network port"
                      }
                    },
                    "required": [
                      "address",
                      "port"
                    ],
                    "additionalProperties": false,
                    "description": "SimpleVoiceChat endpoint for this joiner"
                  }
                },
                "required": [
                  "hostUuid",
                  "relayAddress",
                  "relayPort",
                  "sessionId",
                  "joinerUuid",
                  "simpleVoiceChatEndpoint"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/hosted-world/world-privacy-settings": {
      "get": {
        "tags": [
          "hosted-world"
        ],
        "description": "Loads privacy settings about who can join a Hosted World",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "Minecraft UUID of player hosting the world"
            },
            "required": true,
            "name": "hostUuid",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "allowedJoinSources": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "EVERYONE",
                          "HOSTED_WORLD_WHITELIST",
                          "LUNAR_CLIENT_FRIENDS",
                          "LOCAL_AREA_NETWORK"
                        ],
                        "description": "Join source that is allowed"
                      },
                      "description": "Join sources that are allowed to connect to the Hosted World"
                    },
                    "friendUuids": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Minecraft player UUID"
                      },
                      "description": "Minecraft players who are friends with the host"
                    },
                    "whitelistedUuids": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Minecraft player UUID"
                      },
                      "description": "Minecraft players who are specifically whitelisted on this Hosted World"
                    }
                  },
                  "required": [
                    "allowedJoinSources",
                    "friendUuids",
                    "whitelistedUuids"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/hosted-world/worlds": {
      "get": {
        "tags": [
          "hosted-world"
        ],
        "description": "Lists active Hosted Worlds",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "hostUuid": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Minecraft UUID of the world host"
                      },
                      "hostUsername": {
                        "type": "string",
                        "description": "Minecraft username of the world host"
                      },
                      "onlinePlayers": {
                        "type": "integer",
                        "description": "Number of players currently online"
                      },
                      "maxPlayers": {
                        "type": "integer",
                        "description": "Max number of players allowed online"
                      },
                      "samplePlayers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "username": {
                              "type": "string",
                              "description": "Player usernmae"
                            },
                            "uuid": {
                              "type": "string",
                              "format": "uuid",
                              "description": "Player UUID"
                            }
                          },
                          "required": [
                            "username",
                            "uuid"
                          ],
                          "additionalProperties": false,
                          "description": "Player on the world"
                        },
                        "description": "Sample players to display on server list ping"
                      },
                      "startedAt": {
                        "type": "string",
                        "description": "Time this world started to be hosted"
                      }
                    },
                    "required": [
                      "hostUuid",
                      "hostUsername",
                      "onlinePlayers",
                      "maxPlayers",
                      "samplePlayers",
                      "startedAt"
                    ],
                    "additionalProperties": false
                  },
                  "description": "Active Hosted Worlds"
                }
              }
            }
          }
        }
      }
    },
    "/styngr/jwt": {
      "post": {
        "tags": [
          "styngr"
        ],
        "description": "Generates Styngr JWT for the player to use with the Styngr API.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "Installation ID of the requester"
            },
            "required": false,
            "name": "x-installation-id",
            "in": "header"
          },
          {
            "schema": {
              "type": "string",
              "description": "The user's JWT token"
            },
            "required": true,
            "name": "Authorization",
            "in": "header"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "platform": {
                    "type": "string",
                    "enum": [
                      "LAUNCHER",
                      "GAME"
                    ],
                    "description": "Platform the player is on"
                  }
                },
                "required": [
                  "platform"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "styngrJwt": {
                      "type": "string",
                      "description": "JWT to use with the Styngr API"
                    }
                  },
                  "required": [
                    "styngrJwt"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Code indicating why authentication failed",
                      "example": "JWT_AUTHENTICATION_FAILED"
                    }
                  },
                  "required": [
                    "code"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Unknown server error occured",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Code indicating why the request failed",
                      "example": "STYNGR_API_FAILED"
                    }
                  },
                  "required": [
                    "code"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/styngr/jams": {
      "get": {
        "tags": [
          "game"
        ],
        "description": "Loads various jams used by the game.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "number",
                        "description": "The ID of the jam"
                      },
                      "styngrId": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The STYNGR ID of the jam"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the jam"
                      },
                      "image": {
                        "type": "string",
                        "nullable": true,
                        "description": "The image of the jam"
                      },
                      "song": {
                        "type": "string",
                        "description": "The song that the jam is from"
                      },
                      "artist": {
                        "type": "string",
                        "description": "The artists of the jam"
                      },
                      "album": {
                        "type": "string",
                        "nullable": true,
                        "description": "The album that the jam is from"
                      },
                      "genres": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "description": "The genre of the jam"
                        },
                        "description": "The genres of the jam"
                      },
                      "durationMillis": {
                        "type": "number",
                        "description": "The duration of the jam in milliseconds"
                      },
                      "copyrightSafe": {
                        "type": "boolean",
                        "description": "Whether the jam is considered 'copyright safe'"
                      }
                    },
                    "required": [
                      "id",
                      "styngrId",
                      "name",
                      "image",
                      "song",
                      "artist",
                      "album",
                      "genres",
                      "durationMillis",
                      "copyrightSafe"
                    ],
                    "additionalProperties": false,
                    "description": "A jam."
                  },
                  "description": "The list of jams"
                }
              }
            }
          }
        }
      }
    },
    "/forge/v2/versions/loader/{gameVersion}": {
      "get": {
        "tags": [
          "forge"
        ],
        "description": "Get the forge loader versions compatible with the specified game version",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "The Minecraft game version",
              "example": "1.20.2"
            },
            "required": true,
            "description": "The Minecraft game version",
            "name": "gameVersion",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "description": "HWID of the requester",
              "deprecated": true
            },
            "required": false,
            "name": "hwid",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "HWID Private of the requester",
              "deprecated": true
            },
            "required": false,
            "name": "hwid_private",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "Installation ID of the requester",
              "example": "00000000-0000-0000-0000-000000000000"
            },
            "required": true,
            "name": "installation_id",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Operating system of the requester",
              "example": "win32"
            },
            "required": true,
            "name": "os",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Operating system release of the requester",
              "example": "10.0.19045"
            },
            "required": true,
            "name": "os_release",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "CPU Architecture of the requester",
              "example": "x64"
            },
            "required": true,
            "name": "arch",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Current launcher version of the requester"
            },
            "required": true,
            "name": "launcher_version",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "The list of forge loader versions"
                  },
                  "description": "The list of forge loader versions",
                  "example": [
                    "0.15.7",
                    "0.15.6",
                    "0.15.5",
                    "0.15.4",
                    "0.15.3",
                    "0.15.2",
                    "0.15.1",
                    "0.15.0"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/optifine/v2/versions/loader/{gameVersion}": {
      "get": {
        "tags": [
          "optifine"
        ],
        "description": "Get the optifine versions compatible with the specified game version",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "The Minecraft game version",
              "example": "1.20.2"
            },
            "required": true,
            "description": "The Minecraft game version",
            "name": "gameVersion",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "description": "HWID of the requester",
              "deprecated": true
            },
            "required": false,
            "name": "hwid",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "HWID Private of the requester",
              "deprecated": true
            },
            "required": false,
            "name": "hwid_private",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "Installation ID of the requester",
              "example": "00000000-0000-0000-0000-000000000000"
            },
            "required": true,
            "name": "installation_id",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Operating system of the requester",
              "example": "win32"
            },
            "required": true,
            "name": "os",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Operating system release of the requester",
              "example": "10.0.19045"
            },
            "required": true,
            "name": "os_release",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "CPU Architecture of the requester",
              "example": "x64"
            },
            "required": true,
            "name": "arch",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Current launcher version of the requester"
            },
            "required": true,
            "name": "launcher_version",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "The optifine version id"
                  },
                  "description": "The list of optifine versions available for the specified game version",
                  "example": [
                    "OptiFine_HD_U_I7",
                    "OptiFine_HD_U_I8_pre2",
                    "OptiFine_HD_U_I8_pre3",
                    "OptiFine_HD_U_I8_pre4"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/neoforge/v2/versions/loader/{gameVersion}": {
      "get": {
        "tags": [
          "neoforge"
        ],
        "description": "Get the neoforge loader versions compatible with the specified game version",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "The Minecraft game version",
              "example": "1.20.2"
            },
            "required": true,
            "description": "The Minecraft game version",
            "name": "gameVersion",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "description": "HWID of the requester",
              "deprecated": true
            },
            "required": false,
            "name": "hwid",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "HWID Private of the requester",
              "deprecated": true
            },
            "required": false,
            "name": "hwid_private",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "Installation ID of the requester",
              "example": "00000000-0000-0000-0000-000000000000"
            },
            "required": true,
            "name": "installation_id",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Operating system of the requester",
              "example": "win32"
            },
            "required": true,
            "name": "os",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Operating system release of the requester",
              "example": "10.0.19045"
            },
            "required": true,
            "name": "os_release",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "CPU Architecture of the requester",
              "example": "x64"
            },
            "required": true,
            "name": "arch",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Current launcher version of the requester"
            },
            "required": true,
            "name": "launcher_version",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "The list of neoforge loader versions"
                  },
                  "description": "The list of neoforge loader versions",
                  "example": [
                    "21.4.42-beta",
                    "21.4.43-beta",
                    "21.4.44-beta",
                    "21.4.45-beta",
                    "21.4.46-beta",
                    "21.4.47-beta"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/quilt/v2/versions/loader/{gameVersion}": {
      "get": {
        "tags": [
          "quilt"
        ],
        "description": "Get the quilt loader versions compatible with the specified game version",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "The Minecraft game version",
              "example": "1.20.2"
            },
            "required": true,
            "description": "The Minecraft game version",
            "name": "gameVersion",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "description": "HWID of the requester",
              "deprecated": true
            },
            "required": false,
            "name": "hwid",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "HWID Private of the requester",
              "deprecated": true
            },
            "required": false,
            "name": "hwid_private",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "Installation ID of the requester",
              "example": "00000000-0000-0000-0000-000000000000"
            },
            "required": true,
            "name": "installation_id",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Operating system of the requester",
              "example": "win32"
            },
            "required": true,
            "name": "os",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Operating system release of the requester",
              "example": "10.0.19045"
            },
            "required": true,
            "name": "os_release",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "CPU Architecture of the requester",
              "example": "x64"
            },
            "required": true,
            "name": "arch",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Current launcher version of the requester"
            },
            "required": true,
            "name": "launcher_version",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "The list of quilt loader versions"
                  },
                  "description": "The list of quilt loader versions",
                  "example": [
                    "0.16.0-beta.12",
                    "0.16.0-beta.11",
                    "0.16.0-beta.10",
                    "0.16.0-beta.9",
                    "0.16.0-beta.8",
                    "0.16.0-beta.7",
                    "0.16.0-beta.6",
                    "0.16.0-beta.5"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/pics/user": {
      "get": {
        "tags": [
          "pics"
        ],
        "description": "Info about the current user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "The user's JWT token"
            },
            "required": true,
            "name": "Authorization",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/UserProfile"
                    }
                  },
                  "required": [
                    "user"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "enum": [
                        "Unauthorized"
                      ],
                      "description": "The reason for the unauthorized response",
                      "example": "Unauthorized"
                    }
                  },
                  "required": [
                    "detail"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "nullable": true,
                      "description": "User not found"
                    }
                  },
                  "required": [
                    "user"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/pics/list": {
      "get": {
        "tags": [
          "pics"
        ],
        "description": "List screenshots for the authenticated user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "default": "1",
              "description": "Page number (starts from 1)",
              "example": "1"
            },
            "required": false,
            "name": "page",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "default": "10",
              "description": "Number of items per page (max 50)",
              "example": "10"
            },
            "required": false,
            "name": "pageSize",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "The user's JWT token"
            },
            "required": true,
            "name": "Authorization",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "screenshots": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Screenshot ID"
                          },
                          "title": {
                            "type": "string",
                            "description": "Screenshot title"
                          },
                          "imageUrl": {
                            "type": "string",
                            "format": "uri",
                            "description": "Image URL to display"
                          },
                          "uploaderName": {
                            "type": "string",
                            "description": "Minecraft username of the uploader"
                          },
                          "uploadedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Time this screenshot was uploaded"
                          }
                        },
                        "required": [
                          "id",
                          "title",
                          "imageUrl",
                          "uploaderName",
                          "uploadedAt"
                        ],
                        "additionalProperties": false,
                        "description": "Screenshot details"
                      },
                      "description": "List of screenshots"
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "totalItems": {
                          "type": "number",
                          "description": "Total number of items"
                        },
                        "totalPages": {
                          "type": "number",
                          "description": "Total number of pages"
                        },
                        "currentPage": {
                          "type": "number",
                          "description": "Current page number"
                        },
                        "pageSize": {
                          "type": "number",
                          "description": "Number of items per page"
                        }
                      },
                      "required": [
                        "totalItems",
                        "totalPages",
                        "currentPage",
                        "pageSize"
                      ],
                      "additionalProperties": false,
                      "description": "Pagination metadata"
                    }
                  },
                  "required": [
                    "screenshots",
                    "pagination"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/pics/rename": {
      "patch": {
        "tags": [
          "pics"
        ],
        "description": "Rename a screenshot",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "The user's JWT token"
            },
            "required": true,
            "name": "Authorization",
            "in": "header"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Screenshot ID to rename"
                  },
                  "title": {
                    "type": "string",
                    "description": "New title for the screenshot"
                  }
                },
                "required": [
                  "id",
                  "title"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Whether the rename was successful"
                    },
                    "title": {
                      "type": "string",
                      "description": "The new title of the screenshot"
                    }
                  },
                  "required": [
                    "success",
                    "title"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code",
                      "example": "TITLE_CONTAINS_PROFANITY"
                    }
                  },
                  "required": [
                    "code"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code",
                      "example": "NOT_AUTHORIZED"
                    }
                  },
                  "required": [
                    "code"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code",
                      "example": "SCREENSHOT_NOT_FOUND"
                    }
                  },
                  "required": [
                    "code"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "410": {
            "description": "Screenshot has been deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code",
                      "example": "SCREENSHOT_DELETED"
                    }
                  },
                  "required": [
                    "code"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/pics/privacy": {
      "patch": {
        "tags": [
          "pics"
        ],
        "description": "Update privacy settings for a screenshot",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "The user's JWT token"
            },
            "required": true,
            "name": "Authorization",
            "in": "header"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Screenshot ID to update privacy for"
                  },
                  "privacy": {
                    "type": "string",
                    "enum": [
                      "unlisted",
                      "public",
                      "private"
                    ],
                    "description": "Privacy setting for the screenshot",
                    "example": "unlisted"
                  }
                },
                "required": [
                  "id",
                  "privacy"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Whether the privacy update was successful"
                    },
                    "privacy": {
                      "type": "string",
                      "enum": [
                        "unlisted",
                        "public",
                        "private"
                      ],
                      "description": "The new privacy setting of the screenshot",
                      "example": "public"
                    }
                  },
                  "required": [
                    "success",
                    "privacy"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code",
                      "example": "INVALID_PRIVACY_SETTING"
                    }
                  },
                  "required": [
                    "code"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code",
                      "example": "NOT_AUTHORIZED"
                    }
                  },
                  "required": [
                    "code"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code",
                      "example": "SCREENSHOT_NOT_FOUND"
                    }
                  },
                  "required": [
                    "code"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "410": {
            "description": "Screenshot has been deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code",
                      "example": "SCREENSHOT_DELETED"
                    }
                  },
                  "required": [
                    "code"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/pics/{id}/report": {
      "post": {
        "tags": [
          "pics"
        ],
        "description": "Report a screenshot for inappropriate content or policy violations",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "Screenshot ID to report"
            },
            "required": true,
            "name": "id",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "description": "The user's JWT token"
            },
            "required": false,
            "name": "Authorization",
            "in": "header"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1,
              "description": "Cloudflare Turnstile token for spam protection",
              "example": "token-from-frontend"
            },
            "required": true,
            "name": "Turnstile-Token",
            "in": "header"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "report_type": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100,
                    "description": "Type of report being submitted",
                    "example": "inappropriate_content"
                  },
                  "reason": {
                    "type": "string",
                    "minLength": 10,
                    "maxLength": 1000,
                    "description": "Detailed reason for the report",
                    "example": "This screenshot contains inappropriate content that violates community guidelines."
                  },
                  "Turnstile-Token": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Cloudflare Turnstile token for spam protection",
                    "example": "token-from-frontend"
                  }
                },
                "required": [
                  "report_type",
                  "reason",
                  "Turnstile-Token"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Whether the report was successfully submitted"
                    },
                    "report_id": {
                      "type": "string",
                      "description": "Unique identifier for the submitted report",
                      "example": "550e8400-e29b-41d4-a716-446655440000"
                    }
                  },
                  "required": [
                    "success",
                    "report_id"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Report already exists from this user/IP",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code",
                      "example": "ALREADY_REPORTED"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message explaining the conflict",
                      "example": "You have already reported this screenshot."
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code",
                      "example": "SCREENSHOT_NOT_FOUND"
                    }
                  },
                  "required": [
                    "code"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/og/jam/{packageId}": {
      "get": {
        "tags": [
          "og"
        ],
        "description": "Generate a Jam cover image",
        "parameters": [
          {
            "schema": {
              "type": "integer",
              "description": "The ID of the Jam"
            },
            "required": true,
            "name": "packageId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "The generated Jam cover image",
            "content": {
              "image/png": {
                "schema": {
                  "type": "string",
                  "description": "The generated Jam cover image"
                }
              }
            }
          }
        }
      }
    },
    "/streamelements/callback": {
      "get": {
        "tags": [
          "streamelements"
        ],
        "description": "Callback endpoint for StreamElements OAuth flow that initializes the partner's StreamElements setup",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "Authorization code provided by StreamElements"
            },
            "required": true,
            "description": "Authorization code provided by StreamElements",
            "name": "code",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "One-time code for initializing Stream Elements linking"
            },
            "required": true,
            "description": "One-time code for initializing Stream Elements linking",
            "name": "state",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        true
                      ],
                      "description": "Indicates if the operation was successful"
                    },
                    "message": {
                      "type": "string",
                      "description": "A message describing the result of the operation"
                    }
                  },
                  "required": [
                    "success",
                    "message"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ],
                      "description": "Indicates if the operation was successful"
                    },
                    "message": {
                      "type": "string",
                      "description": "A message describing the result of the operation"
                    }
                  },
                  "required": [
                    "success",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/streamelements/link": {
      "get": {
        "tags": [
          "streamelements"
        ],
        "description": "Authorizes a partner with StreamElements by validating their one-time code and redirecting to StreamElements OAuth flow",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "One-time code for initializing Stream Elements linking"
            },
            "required": true,
            "description": "One-time code for initializing Stream Elements linking",
            "name": "one_time_code",
            "in": "query"
          }
        ],
        "responses": {
          "302": {
            "description": "Redirects the user to the StreamElements OAuth authorization page"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ],
                      "description": "Indicates if the operation was successful"
                    },
                    "message": {
                      "type": "string",
                      "description": "A message describing the result of the operation"
                    }
                  },
                  "required": [
                    "success",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    }
  }
}