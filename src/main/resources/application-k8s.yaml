spring:
  application:
    name: lunar-api
  data:
    mongodb:
      uri: mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@${FULL_NAME}-mongo/lunarclient?authSource=admin
    redis:
      url: redis://:${REDIS_PASSWORD}@${FULL_NAME}-valkey-primary:6379/0
  security:
    jwt:
      key: ${JWT_KEY:3cfa76ef14937c1c0ea519f8fc057a80fcd04a7420f8e8bcd0a7567c272e007b}
      expire: ${JWT_EXPIRE:1}
  cloud:
    stream:
      bindings:
        lunarWebsocketPayloadConsumer-in-0:
          destination: lunar-1
      kafka:
        bindings:
          supplier-out-0:
            producer:
              configuration:
                # noinspection HttpUrlsUsage
                schema.registry.url: http://${FULL_NAME}-schema-registry:8081
                value.serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
        binder:
          brokers: ${FULL_NAME}-kafka-bootstrap:9092

springdoc:
  api-docs:
    enabled: true
    path: /api-docs

instance:
  # Used to recognize instances in Kubernetes
  id: ${HOSTNAME}

lunar:
  user:
    # Check if the player is authenticated with a valid Mojang/Microsoft account.
    verify: true
  friend:
    bot:
      enabled: true
      username: lunar_bot
    # max friends
    max: 200
  sentry:
    filters:
      - identifier: everything
        regex: ".*"
  upload:
    maxSize: 5mb
  discord:
    enabled: false
    token: discord_token
    irc:
      # Channel ID to sync irc messages
      channel: 1358028995899293746