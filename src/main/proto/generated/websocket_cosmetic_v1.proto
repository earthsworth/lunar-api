// Generated by qby's lcpb-remap project
// For learning purposes only
// https://t.me/earthsworth
syntax = "proto3";
package com.lunarclient.websocket.cosmetic.v1;

import "google/protobuf/any.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/api.proto";
import "google/protobuf/descriptor.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/source_context.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/type.proto";
import "google/protobuf/wrappers.proto";

import "generated/lunarclient_common_v1.proto";
// Analysis
// 10 packets stored.
// File name (Generated): websocket_cosmetic_v1.proto

// Message struct

// From com.lunarclient.websocket.cosmetic.v1.CustomizableCosmeticSettings
message CustomizableCosmeticSettings {

  repeated int32 activeCosmeticIds = 1; // Type: int32
  bool clothCloak = 2; // Type: bool
  optional common.v1.Color plusColor = 3; // Type: com.lunarclient.common.v1.Color
  bool showHatsOverHelmet = 4; // Type: bool
  bool showHatsOverSkinLayer = 5; // Type: bool
  bool showOverChestplate = 6; // Type: bool
  bool showOverLeggings = 7; // Type: bool
  bool showOverBoots = 8; // Type: bool
  map<string, google.protobuf.Any> hatHeightOffset = 9; // Type: map<string,google.protobuf.Any>
  bool flipShoulderPet = 10; // Type: bool
  repeated cosmetic.v1.EquippedCosmetic equippedCosmetics = 11; // Type: com.lunarclient.websocket.cosmetic.v1.EquippedCosmetic

}

// From com.lunarclient.websocket.cosmetic.v1.EquippedCosmetic
message EquippedCosmetic {

  int32 cosmeticId = 1; // Type: int32
  optional google.protobuf.Struct metadata = 2; // Type: google.protobuf.Struct

}

// From com.lunarclient.websocket.cosmetic.v1.LoginRequest
message LoginRequest {


}

// From com.lunarclient.websocket.cosmetic.v1.LoginResponse
message LoginResponse {

  optional cosmetic.v1.CustomizableCosmeticSettings settings = 1; // Type: com.lunarclient.websocket.cosmetic.v1.CustomizableCosmeticSettings
  repeated int32 ownedCosmeticIds = 2; // Type: int32
  repeated common.v1.Color availableLunarPlusColors = 3; // Type: com.lunarclient.common.v1.Color
  optional common.v1.Color logoColor = 4; // Type: com.lunarclient.common.v1.Color
  bool logoAlwaysShow = 5; // Type: bool
  repeated int32 lunarPlusFreeCosmeticIds = 6; // Type: int32
  repeated cosmetic.v1.OwnedCosmetic ownedCosmetics = 7; // Type: com.lunarclient.websocket.cosmetic.v1.OwnedCosmetic
  bool hasAllCosmeticsFlag = 8; // Type: bool
  string rankName = 9; // Type: string

}

// From com.lunarclient.websocket.cosmetic.v1.OwnedCosmetic
message OwnedCosmetic {

  int32 cosmeticId = 1; // Type: int32
  optional google.protobuf.Timestamp grantedAt = 2; // Type: google.protobuf.Timestamp
  optional google.protobuf.Timestamp expiresAt = 3; // Type: google.protobuf.Timestamp
  cosmetic.v1.OwnedCosmetic_ExpirationReason expirationReason = 4; // Type: com.lunarclient.websocket.cosmetic.v1.OwnedCosmetic_ExpirationReason

}

// From com.lunarclient.websocket.cosmetic.v1.PlayerCosmeticsPush
message PlayerCosmeticsPush {

  optional common.v1.Uuid playerUuid = 1; // Type: com.lunarclient.common.v1.Uuid
  optional cosmetic.v1.CustomizableCosmeticSettings settings = 2; // Type: com.lunarclient.websocket.cosmetic.v1.CustomizableCosmeticSettings
  optional common.v1.Color logoColor = 3; // Type: com.lunarclient.common.v1.Color
  bool logoAlwaysShow = 4; // Type: bool

}

// From com.lunarclient.websocket.cosmetic.v1.RefreshCosmeticsPush
message RefreshCosmeticsPush {


}

// From com.lunarclient.websocket.cosmetic.v1.UpdateCosmeticSettingsRequest
message UpdateCosmeticSettingsRequest {

  optional cosmetic.v1.CustomizableCosmeticSettings settings = 1; // Type: com.lunarclient.websocket.cosmetic.v1.CustomizableCosmeticSettings

}

// From com.lunarclient.websocket.cosmetic.v1.UpdateCosmeticSettingsResponse
message UpdateCosmeticSettingsResponse {


}

// From com.lunarclient.websocket.cosmetic.v1.OwnedCosmetic$ExpirationReason
enum OwnedCosmetic_ExpirationReason {
  OWNEDCOSMETIC_EXPIRATIONREASON_EXPIRATION_REASON_UNSPECIFIED = 0;
  OWNEDCOSMETIC_EXPIRATIONREASON_EXPIRATION_REASON_TIME_LAPSED = 1;
  OWNEDCOSMETIC_EXPIRATIONREASON_EXPIRATION_REASON_LEFT_LC_DISCORD = 2;
}
